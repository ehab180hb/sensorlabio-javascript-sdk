{"version":3,"sources":["webpack://SensorlabSDK/webpack/bootstrap","webpack://SensorlabSDK/./node_modules/axios/lib/utils.js","webpack://SensorlabSDK/./node_modules/debug/src/index.js","webpack://SensorlabSDK/./src/responses/errors/basic.js","webpack://SensorlabSDK/./node_modules/component-emitter/index.js","webpack://SensorlabSDK/./node_modules/engine.io-parser/lib/index.js","webpack://SensorlabSDK/./node_modules/parseqs/index.js","webpack://SensorlabSDK/./node_modules/component-inherit/index.js","webpack://SensorlabSDK/./src/models/measurement.js","webpack://SensorlabSDK/./node_modules/axios/lib/defaults.js","webpack://SensorlabSDK/./node_modules/axios/lib/core/createError.js","webpack://SensorlabSDK/external \"http\"","webpack://SensorlabSDK/external \"https\"","webpack://SensorlabSDK/external \"url\"","webpack://SensorlabSDK/./src/websockets/basic.js","webpack://SensorlabSDK/./node_modules/socket.io-parser/index.js","webpack://SensorlabSDK/./node_modules/xmlhttprequest-ssl/lib/XMLHttpRequest.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/transport.js","webpack://SensorlabSDK/./src/models/application.js","webpack://SensorlabSDK/./src/models/sensor.js","webpack://SensorlabSDK/./src/responses/measurements.js","webpack://SensorlabSDK/./src/models/sensor_alert.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/bind.js","webpack://SensorlabSDK/./node_modules/axios/lib/core/settle.js","webpack://SensorlabSDK/./node_modules/axios/lib/core/enhanceError.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/buildURL.js","webpack://SensorlabSDK/./node_modules/follow-redirects/index.js","webpack://SensorlabSDK/./node_modules/axios/lib/cancel/isCancel.js","webpack://SensorlabSDK/./node_modules/axios/lib/cancel/Cancel.js","webpack://SensorlabSDK/./node_modules/socket.io-client/lib/index.js","webpack://SensorlabSDK/./node_modules/parseuri/index.js","webpack://SensorlabSDK/./node_modules/socket.io-parser/node_modules/isarray/index.js","webpack://SensorlabSDK/./node_modules/socket.io-parser/is-buffer.js","webpack://SensorlabSDK/./node_modules/socket.io-client/lib/manager.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/transports/index.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/transports/polling.js","webpack://SensorlabSDK/./node_modules/has-binary2/index.js","webpack://SensorlabSDK/./node_modules/yeast/index.js","webpack://SensorlabSDK/./node_modules/indexof/index.js","webpack://SensorlabSDK/./node_modules/socket.io-client/lib/socket.js","webpack://SensorlabSDK/./node_modules/socket.io-client/lib/on.js","webpack://SensorlabSDK/./node_modules/component-bind/index.js","webpack://SensorlabSDK/./src/index.js","webpack://SensorlabSDK/./src/api.js","webpack://SensorlabSDK/./src/endpoints/users.js","webpack://SensorlabSDK/./src/endpoints/auth.js","webpack://SensorlabSDK/./src/models/user.js","webpack://SensorlabSDK/./src/models/application_token.js","webpack://SensorlabSDK/./src/endpoints/applications.js","webpack://SensorlabSDK/./src/responses/applications.js","webpack://SensorlabSDK/./src/endpoints/profile.js","webpack://SensorlabSDK/./src/models/profile.js","webpack://SensorlabSDK/./src/endpoints/sensors.js","webpack://SensorlabSDK/./src/responses/sensors.js","webpack://SensorlabSDK/./src/endpoints/measurements.js","webpack://SensorlabSDK/./src/responses/api.js","webpack://SensorlabSDK/./src/responses/errors/auth.js","webpack://SensorlabSDK/./src/responses/errors/notfound.js","webpack://SensorlabSDK/./src/responses/errors/validation.js","webpack://SensorlabSDK/./src/responses/errors/connection_refused.js","webpack://SensorlabSDK/./src/responses/errors/internal.js","webpack://SensorlabSDK/./src/endpoints/public.js","webpack://SensorlabSDK/./src/endpoints/sensor_alerts.js","webpack://SensorlabSDK/./src/responses/sensor_alerts.js","webpack://SensorlabSDK/./src/endpoints/alerts.js","webpack://SensorlabSDK/./src/responses/alerts.js","webpack://SensorlabSDK/./src/models/alert.js","webpack://SensorlabSDK/./src/responses/errors/forbidden.js","webpack://SensorlabSDK/./node_modules/axios/index.js","webpack://SensorlabSDK/./node_modules/axios/lib/axios.js","webpack://SensorlabSDK/./node_modules/is-buffer/index.js","webpack://SensorlabSDK/./node_modules/axios/lib/core/Axios.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://SensorlabSDK/./node_modules/axios/lib/adapters/xhr.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/btoa.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/cookies.js","webpack://SensorlabSDK/./node_modules/axios/lib/adapters/http.js","webpack://SensorlabSDK/external \"assert\"","webpack://SensorlabSDK/external \"stream\"","webpack://SensorlabSDK/./node_modules/debug/src/browser.js","webpack://SensorlabSDK/./node_modules/debug/src/node.js","webpack://SensorlabSDK/external \"tty\"","webpack://SensorlabSDK/external \"util\"","webpack://SensorlabSDK/./node_modules/debug/src/debug.js","webpack://SensorlabSDK/./node_modules/ms/index.js","webpack://SensorlabSDK/./node_modules/supports-color/index.js","webpack://SensorlabSDK/external \"os\"","webpack://SensorlabSDK/./node_modules/has-flag/index.js","webpack://SensorlabSDK/external \"zlib\"","webpack://SensorlabSDK/./node_modules/axios/lib/core/InterceptorManager.js","webpack://SensorlabSDK/./node_modules/axios/lib/core/dispatchRequest.js","webpack://SensorlabSDK/./node_modules/axios/lib/core/transformData.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/combineURLs.js","webpack://SensorlabSDK/./node_modules/axios/lib/cancel/CancelToken.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/spread.js","webpack://SensorlabSDK/./src/websockets.js","webpack://SensorlabSDK/./src/websockets/measurements.js","webpack://SensorlabSDK/./node_modules/socket.io-client/lib/url.js","webpack://SensorlabSDK/./node_modules/socket.io-parser/binary.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/index.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/socket.js","webpack://SensorlabSDK/external \"fs\"","webpack://SensorlabSDK/external \"child_process\"","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack://SensorlabSDK/./node_modules/engine.io-parser/lib/utf8.js","webpack://SensorlabSDK/(webpack)/buildin/module.js","webpack://SensorlabSDK/./node_modules/has-binary2/node_modules/isarray/index.js","webpack://SensorlabSDK/./node_modules/after/index.js","webpack://SensorlabSDK/./node_modules/engine.io-parser/lib/keys.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/transports/websocket.js","webpack://SensorlabSDK/external \"ws\"","webpack://SensorlabSDK/./node_modules/to-array/index.js","webpack://SensorlabSDK/./node_modules/backo2/index.js","webpack://SensorlabSDK/./src/websockets/alerts.js","webpack://SensorlabSDK/./src/websockets/public.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","length","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","arguments","extend","a","b","thisArg","trim","str","replace","process","type","ApiErrorBasicException","status","message","undefined","errors","_classCallCheck","this","Emitter","mixin","on","addEventListener","event","_callbacks","push","once","off","apply","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","slice","len","listeners","hasListeners","utf8","hasBinary","after","keys","protocol","packets","open","close","ping","pong","upgrade","noop","packetslist","err","data","encodeBuffer","packet","supportsBinary","callback","encodeBase64Packet","typeBuffer","Buffer","concat","map","ary","each","done","Array","next","error","msg","bufferToString","String","fromCharCode","arrayBufferToBuffer","array","Uint8Array","byteLength","offset","byteOffset","encodeOneBinaryPacket","doneCallback","encodePacket","sizeBuffer","encodingLength","parseInt","string","buf","writeUInt8","charCodeAt","stringToBuffer","utf8encode","encoded","encode","strict","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","e","tryDecode","Number","substring","intArray","abv","encodePayload","encodePayloadAsBinary","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","chr","bufferTail","buffers","strLen","msgLength","total","encodeURIComponent","qs","qry","pairs","split","pair","decodeURIComponent","constructor","Measurement","api","id","timestamp","sensors","one","sensor_id","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","defaults","adapter","XMLHttpRequest","getDefaultAdapter","transformRequest","JSON","stringify","transformResponse","parse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","common","Accept","method","enhanceError","config","code","request","response","Error","require","io","BasicWebsocket","websocket_url","url","socket","is_connected","is_authenticated","namespace","force_new","token","Promise","resolve","reject","_this","path","forceNew","_onConnected","reason","_onDisconnect","_checkConnection","disconnect","debug","binary","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","payload","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","tryParse","isPayloadValid","decodeString","base64","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","fs","Url","spawn","opts","self","http","https","settings","disableHeaderCheck","defaultHeaders","User-Agent","assign","forbiddenRequestHeaders","forbiddenRequestMethods","sendFlag","errorFlag","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","readyState","onreadystatechange","responseText","responseXML","statusText","async","user","password","abort","indexOf","isAllowedHttpMethod","setState","setDisableHeaderCheck","state","setRequestHeader","header","toLowerCase","isAllowedHttpHeader","console","warn","getResponseHeader","getAllResponseHeaders","getRequestHeader","send","host","ssl","local","hostname","readFile","pathname","handleError","readFileSync","port","uri","search","authBuf","agent","options","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","doRequest","dispatchEvent","responseHandler","resp","statusCode","location","newOptions","errorHandler","end","setEncoding","chunk","write","contentFile","pid","syncFile","writeFileSync","execString","syncProc","argv","existsSync","stdin","unlinkSync","match","errorObj","stack","filter","ev","parser","Transport","secure","query","timestampParam","timestampRequests","enablesXDR","forceNode","extraHeaders","localAddress","onError","desc","description","doOpen","doClose","onClose","onOpen","writable","onData","onPacket","Application","created","public_api_key","private_api_key","Sensor","imei","application","batteryCharge","isBatteryCharging","isOnline","is_public","measurements","list","last","MeasurementsResponse","prev","measurement_data","SensorAlert","threshold_type","measurement_type","threshold_value","createError","params","paramsSerializer","serializedParams","parts","v","toISOString","assert","Writable","SAFE_METHODS","GET","HEAD","OPTIONS","TRACE","eventHandlers","RedirectableRequest","responseCallback","_options","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","_onNativeResponse","_processResponse","searchPos","_performRequest","wrap","protocols","maxRedirects","maxBodyLength","nativeProtocols","scheme","nativeProtocol","wrappedProtocol","equal","arg","_redirectable","encoding","_currentRequest","currentRequest","setHeader","removeHeader","agents","_currentUrl","format","_isRedirect","requestBodyBuffers","writeNext","pop","trackRedirects","followRedirects","test","redirectUrl","responseUrl","redirects","__CANCEL__","Cancel","Manager","lookup","cache","managers","parsed","source","sameNamespace","nsps","multiplex","connect","Socket","re","src","exec","authority","ipv6uri","arr","withNativeBuffer","global","withNativeArrayBuffer","eio","Backoff","has","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","connecting","lastPing","packetBuffer","_parser","encoder","decoder","autoConnect","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","index","encodedPackets","processPacketQueue","shift","subsLength","reset","onclose","delay","duration","onreconnect","attempt","XHR","JSONP","websocket","polling","xd","xs","jsonp","isSSL","xdomain","xscheme","forceJSONP","parseqs","inherit","yeast","Polling","hasXHR2","responseType","forceBase64","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","b64","withNativeBlob","Blob","withNativeFile","File","toJSON","alphabet","seed","num","Math","floor","now","decoded","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","subEvents","compress","onpacket","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","SensorlabApi","SensorlabWebsockets","axios","api_url","_rest_api_url","_users","UsersEndpoints","auth","AuthEndpoints","profile","ProfileEndpoints","applications","ApplicationsEndpoints","SensorsEndpoints","sensor_alerts","SensorAlertsEndpoints","alerts","AlertsEndpoints","MeasurementsEndpoints","public","PublicEndpoints","jwt_token","endpoint_url","use_jwt_token","request_url","_context","t0","success_cb","ApiErrorConnectionRefusedException","ApiResponse","success","ApiErrorUnauthorizedException","ApiErrorForbiddenException","ApiErrorNotFoundException","ApiErrorValidationException","ApiErrorInternalException","email","password_check","_makeApiRequest","_prepareApiResponse","verification_token","_successUserResponse","setToken","_successApplicationResponse","User","ApplicationToken","page","sort","_successApplicationsListResponse","application_id","_successCreateApplicationResponse","ApplicationsResponse","pages","count","application_data","_successProfileResult","old_password","new_password","new_password_check","Profile","change_password","online_status","battery_charge_min","battery_charge_max","_successSensorsListResponse","_successSensorResponse","SensorsResponse","sensor_data","sensor","timestamp_start","timestamp_stop","_successMeasurementsListResponse","_successMeasurementResponse","_successSensorAlertsListResponse","alert","_successSensorAlertResponse","_successCreateSensorAlertResponse","SensorAlertsResponse","sensor_alert","alert_data","_successSensorListResponse","AlertsResponse","Alert","measurement","threshold","Axios","createInstance","defaultConfig","context","instance","instanceConfig","CancelToken","isCancel","all","promises","spread","default","readFloatLE","isSlowBuffer","_isBuffer","InterceptorManager","dispatchRequest","interceptors","chain","promise","interceptor","fulfilled","rejected","then","normalizedName","toUpperCase","settle","buildURL","parseHeaders","isURLSameOrigin","btoa","requestData","requestHeaders","loadEvent","xDomain","XDomainRequest","onprogress","ontimeout","username","Authorization","responseURL","responseHeaders","cookies","xsrfValue","withCredentials","read","onDownloadProgress","onUploadProgress","upload","cancelToken","cancel","ignoreDuplicateOf","line","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","hash","requestURL","chars","E","input","block","charCode","output","idx","expires","domain","cookie","toGMTString","RegExp","remove","httpFollow","httpsFollow","zlib","pkg","version","urlAuth","isHttps","httpsAgent","httpAgent","socketPath","transport","proxy","proxyEnv","proxyUrl","env","parsedProxyUrl","proxyUrlAuth","req","res","aborted","stream","createUnzip","lastRequest","statusMessage","responseBuffer","responseData","load","storage","DEBUG","log","Function","formatArgs","useColors","humanize","diff","color","lastC","save","namespaces","removeItem","documentElement","style","WebkitAppearance","firebug","exception","table","$1","chrome","localStorage","localstorage","colors","formatters","j","enable","tty","util","init","inspectOpts","stderr","colorCode","prefix","hideDate","Boolean","isatty","fd","supportsColor","level","reduce","prop","_","k","inspect","O","createDebug","prevTime","enabled","curr","ms","coerce","formatter","abs","selectColor","instances","disable","names","skips","h","y","plural","ceil","parseFloat","isNaN","long","fmtLong","round","fmtShort","os","hasFlag","forceColor","getSupportLevel","hasBasic","has256","has16m","translateLevel","isTTY","platform","osRelease","release","versions","node","some","sign","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","FORCE_COLOR","stdout","flag","startsWith","pos","terminatorPos","handlers","use","eject","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","baseURL","fns","relativeURL","executor","TypeError","resolvePromise","SensorlabMeasurementsWebsocket","SensorlabAlertsWebsocket","SensorlabPublicWebsocket","_possibleConstructorReturn","__proto__","getPrototypeOf","_getRoomName","room_name","parseuri","loc","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","FileReader","onload","readAsArrayBuffer","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","freeGlobal","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","clone","EIO","requestTimeout","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","empty","Request","isBinary","unloadHandler","requests","sendXhr","pollXhr","xhr","hasXDR","onLoad","contentType","requestsCount","onSuccess","fromError","attachEvent","__WEBPACK_AMD_DEFINE_RESULT__","root","freeExports","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","extra","counter","checkScalarValue","codePoint","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","codePoints","byteString","tmp","ucs2encode","webpackPolyfill","deprecate","paths","children","err_cb","bail","JSONPPolling","rNewline","rEscapedNewline","___eio","script","parentNode","removeChild","form","iframe","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","area","iframeId","className","position","top","left","target","complete","initIframe","html","action","submit","NodeWebSocket","BrowserWebSocket","WebSocket","MozWebSocket","WS","usingBrowserWebSocket","check","ws","supports","addEventListeners","onmessage","factor","pow","rand","random","deviation","_this2"],"mappings":"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","file":"index.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * @classdesc SDK will throw this basic exception on other status errors.\n */\nexport default class ApiErrorBasicException {\n    /**\n     * @constructor ApiErrorBasicException\n     *\n     * @param {number} status - HTTP status of response.\n     * @param {string} message - error message\n     * @param {array} errors - validation errors\n     */\n    constructor(status, message = null, errors = []) {\n        /**\n         * HTTP status of response\n         *\n         * @member ApiErrorBasicException#status\n         * @type {number}\n         */\n        this.status = status;\n\n        /**\n         * Response/error message\n         *\n         * @member ApiErrorBasicException#message\n         * @type {string}\n         */\n        this.message = message;\n\n        /**\n         * Validation errors.\n         *\n         * @member ApiErrorBasicException#errors\n         * @type {Array}\n         */\n        this.errors = errors;\n    }\n}","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\n * Module dependencies.\n */\n\nvar utf8 = require('./utf8');\nvar hasBinary = require('has-binary2');\nvar after = require('after');\nvar keys = require('./keys');\n\n/**\n * Current protocol version.\n */\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  if (Buffer.isBuffer(packet.data)) {\n    return encodeBuffer(packet, supportsBinary, callback);\n  } else if (packet.data && (packet.data.buffer || packet.data) instanceof ArrayBuffer) {\n    packet.data = arrayBufferToBuffer(packet.data);\n    return encodeBuffer(packet, supportsBinary, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n};\n\n/**\n * Encode Buffer data\n */\n\nfunction encodeBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var typeBuffer = new Buffer(1);\n  typeBuffer[0] = packets[packet.type];\n  return callback(Buffer.concat([typeBuffer, data]));\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback){\n  if (!Buffer.isBuffer(packet.data)) {\n    packet.data = arrayBufferToBuffer(packet.data);\n  }\n\n  var message = 'b' + packets[packet.type];\n  message += packet.data.toString('base64');\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Data also available as an ArrayBuffer if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n\n  var type;\n\n  // String data\n  if (typeof data === 'string') {\n\n    type = data.charAt(0);\n\n    if (type === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  // Binary data\n  if (binaryType === 'arraybuffer') {\n    // wrap Buffer/ArrayBuffer data into an Uint8Array\n    var intArray = new Uint8Array(data);\n    type = intArray[0];\n    return { type: packetslist[type], data: intArray.buffer.slice(1) };\n  }\n\n  if (data instanceof ArrayBuffer) {\n    data = arrayBufferToBuffer(data);\n  }\n  type = data[0];\n  return { type: packetslist[type], data: data.slice(1) };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string.\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  var data = new Buffer(msg.substr(1), 'base64');\n  if (binaryType === 'arraybuffer') {\n    var abv = new Uint8Array(data.length);\n    for (var i = 0; i < abv.length; i++){\n      abv[i] = data[i];\n    }\n    data = abv.buffer;\n  }\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  if (supportsBinary && hasBinary(packets)) {\n    return exports.encodePayloadAsBinary(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\nfunction setLengthHeader(message) {\n  return message.length + ':' + message;\n}\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  for (var i = 0; i < ary.length; i++) {\n    each(ary[i], function(error, msg) {\n      result[i] = msg;\n      next(error, result);\n    });\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg, packet;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var more = callback(packet, i + n, l);\n      if (false === more) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n *\n * Converts a buffer to a utf8.js encoded string\n *\n * @api private\n */\n\nfunction bufferToString(buffer) {\n  var str = '';\n  for (var i = 0, l = buffer.length; i < l; i++) {\n    str += String.fromCharCode(buffer[i]);\n  }\n  return str;\n}\n\n/**\n *\n * Converts a utf8.js encoded string to a buffer\n *\n * @api private\n */\n\nfunction stringToBuffer(string) {\n  var buf = new Buffer(string.length);\n  for (var i = 0, l = string.length; i < l; i++) {\n    buf.writeUInt8(string.charCodeAt(i), i);\n  }\n  return buf;\n}\n\n/**\n *\n * Converts an ArrayBuffer to a Buffer\n *\n * @api private\n */\n\nfunction arrayBufferToBuffer(data) {\n  // data is either an ArrayBuffer or ArrayBufferView.\n  var array = new Uint8Array(data.buffer || data);\n  var length = data.byteLength || data.length;\n  var offset = data.byteOffset || 0;\n  var buffer = new Buffer(length);\n\n  for (var i = 0; i < length; i++) {\n    buffer[i] = array[offset + i];\n  }\n  return buffer;\n}\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {Buffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsBinary = function (packets, callback) {\n  if (!packets.length) {\n    return callback(new Buffer(0));\n  }\n\n  map(packets, encodeOneBinaryPacket, function(err, results) {\n    return callback(Buffer.concat(results));\n  });\n};\n\nfunction encodeOneBinaryPacket(p, doneCallback) {\n\n  function onBinaryPacketEncode(packet) {\n\n    var encodingLength = '' + packet.length;\n    var sizeBuffer;\n\n    if (typeof packet === 'string') {\n      sizeBuffer = new Buffer(encodingLength.length + 2);\n      sizeBuffer[0] = 0; // is a string (not true binary = 0)\n      for (var i = 0; i < encodingLength.length; i++) {\n        sizeBuffer[i + 1] = parseInt(encodingLength[i], 10);\n      }\n      sizeBuffer[sizeBuffer.length - 1] = 255;\n      return doneCallback(null, Buffer.concat([sizeBuffer, stringToBuffer(packet)]));\n    }\n\n    sizeBuffer = new Buffer(encodingLength.length + 2);\n    sizeBuffer[0] = 1; // is binary (true binary = 1)\n    for (var i = 0; i < encodingLength.length; i++) {\n      sizeBuffer[i + 1] = parseInt(encodingLength[i], 10);\n    }\n    sizeBuffer[sizeBuffer.length - 1] = 255;\n\n    doneCallback(null, Buffer.concat([sizeBuffer, packet]));\n  }\n\n  exports.encodePacket(p, true, true, onBinaryPacketEncode);\n\n}\n\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n\n * @param {Buffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n  var i;\n\n  while (bufferTail.length > 0) {\n    var strLen = '';\n    var isString = bufferTail[0] === 0;\n    for (i = 1; ; i++) {\n      if (bufferTail[i] === 255)  break;\n      // 310 = char length of Number.MAX_VALUE\n      if (strLen.length > 310) {\n        return callback(err, 0, 1);\n      }\n      strLen += '' + bufferTail[i];\n    }\n    bufferTail = bufferTail.slice(strLen.length + 1);\n\n    var msgLength = parseInt(strLen, 10);\n\n    var msg = bufferTail.slice(1, msgLength + 1);\n    if (isString) msg = bufferToString(msg);\n    buffers.push(msg);\n    bufferTail = bufferTail.slice(msgLength + 1);\n  }\n\n  var total = buffers.length;\n  for (i = 0; i < total; i++) {\n    var buffer = buffers[i];\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  }\n};\n","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","/**\n * @classdesc Measurement model\n */\nexport default class Measurement {\n    /**\n     * @constructor Measurement\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Measurement ID.\n         *\n         * @member Measurement#id\n         * @type {string}\n         */\n        this.id = data.id;\n\n        /**\n         * Measurement type.\n         *\n         * @member Measurement#type\n         * @type {string}\n         */\n        this.type = data.type;\n\n        /**\n         * Measurement values array.\n         *\n         * @member Measurement#value\n         * @type {array}\n         */\n        this.value = data.value;\n\n        /**\n         * Created date.\n         *\n         * @member Measurement#created\n         * @type {Date}\n         */\n        this.timestamp = data.timestamp;\n    }\n\n    /**\n     * Get sensor.\n     *\n     * @method Measurement#sensor\n     * @returns {Promise.<ApiResponse>}\n     */\n    async sensor() {\n        return this.api.sensors.one(this.sensor_id);\n    }\n}","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"url\");","let io = require('socket.io-client');\n\n/**\n * Basic websockets class\n */\nexport default class BasicWebsocket {\n    /**\n     * @constructor BasicWebsocket\n     *\n     * @param {string} websocket_url websockets url to connect to\n     */\n    constructor(websocket_url = 'http://staging.sensorlab.io') {\n        this.url = websocket_url;\n        this.socket = null;\n\n        this.is_connected = false;\n        this.is_authenticated = false;\n        this.namespace = '/';\n\n        this.force_new = false;\n    }\n\n    /**\n     * Connect to websocket namespace with authentication token.\n     * Promise will resolve if connection is established and reject is there are problems with connection\n     * or authentication\n     *\n     * @member BasicWebsocket#connect\n     * @param {string} token\n     * @returns {Promise}\n     */\n    async connect(token) {\n        return new Promise((resolve, reject) => {\n            //connect\n            this.socket = io(this.url + this.namespace + '?token='+token, {\n                path: '/ws',\n                forceNew: this.force_new\n            });\n\n            //try to authenticate on connection\n            this.socket.on('connect', () => {\n                this._onConnected();\n                resolve();\n            });\n\n            this.socket.on('connect_error', () => {\n                reject({code: 0, message: 'Connection error'});\n            });\n\n            this.socket.on('error', function (reason) {\n                reject(JSON.parse(reason));\n                //console.error('Unable to connect Socket.IO', reason);\n            });\n\n            //catch disconnect\n            this.socket.on('disconnect', () => {\n                this._onDisconnect();\n            });\n        });\n    }\n\n    /**\n     * Disconnect from websocket\n     *\n     * @member BasicWebsocket#disconnect\n     */\n    disconnect() {\n        if (!this._checkConnection()) {\n            return false;\n        }\n        this.socket.disconnect();\n    }\n\n    _onConnected() {\n        this.is_connected = true;\n        this.is_authenticated = true;\n    }\n\n    _onDisconnect() {\n        this.is_connected = false;\n        this.is_authenticated = false;\n    }\n\n    _checkConnection() {\n        if (this.is_authenticated && this.is_connected) {\n            return true;\n        }\n        return false;\n    }\n}","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","/**\n * Wrapper for built-in http.js to emulate the browser XMLHttpRequest object.\n *\n * This can be used with JS designed for browsers to improve reuse of code and\n * allow the use of existing libraries.\n *\n * Usage: include(\"XMLHttpRequest.js\") and use XMLHttpRequest per W3C specs.\n *\n * @author Dan DeFelippi <dan@driverdan.com>\n * @contributor David Ellis <d.f.ellis@ieee.org>\n * @license MIT\n */\n\nvar fs = require('fs');\nvar Url = require('url');\nvar spawn = require('child_process').spawn;\n\n/**\n * Module exports.\n */\n\nmodule.exports = XMLHttpRequest;\n\n// backwards-compat\nXMLHttpRequest.XMLHttpRequest = XMLHttpRequest;\n\n/**\n * `XMLHttpRequest` constructor.\n *\n * Supported options for the `opts` object are:\n *\n *  - `agent`: An http.Agent instance; http.globalAgent may be used; if 'undefined', agent usage is disabled\n *\n * @param {Object} opts optional \"options\" object\n */\n\nfunction XMLHttpRequest(opts) {\n  \"use strict\";\n\n  opts = opts || {};\n\n  /**\n   * Private variables\n   */\n  var self = this;\n  var http = require('http');\n  var https = require('https');\n\n  // Holds http.js objects\n  var request;\n  var response;\n\n  // Request settings\n  var settings = {};\n\n  // Disable header blacklist.\n  // Not part of XHR specs.\n  var disableHeaderCheck = false;\n\n  // Set some default headers\n  var defaultHeaders = {\n    \"User-Agent\": \"node-XMLHttpRequest\",\n    \"Accept\": \"*/*\"\n  };\n\n  var headers = Object.assign({}, defaultHeaders);\n\n  // These headers are not user setable.\n  // The following are allowed but banned in the spec:\n  // * user-agent\n  var forbiddenRequestHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"content-transfer-encoding\",\n    \"cookie\",\n    \"cookie2\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"via\"\n  ];\n\n  // These request methods are not allowed\n  var forbiddenRequestMethods = [\n    \"TRACE\",\n    \"TRACK\",\n    \"CONNECT\"\n  ];\n\n  // Send flag\n  var sendFlag = false;\n  // Error flag, used when errors occur or abort is called\n  var errorFlag = false;\n\n  // Event listeners\n  var listeners = {};\n\n  /**\n   * Constants\n   */\n\n  this.UNSENT = 0;\n  this.OPENED = 1;\n  this.HEADERS_RECEIVED = 2;\n  this.LOADING = 3;\n  this.DONE = 4;\n\n  /**\n   * Public vars\n   */\n\n  // Current state\n  this.readyState = this.UNSENT;\n\n  // default ready state change handler in case one is not set or is set late\n  this.onreadystatechange = null;\n\n  // Result & response\n  this.responseText = \"\";\n  this.responseXML = \"\";\n  this.status = null;\n  this.statusText = null;\n\n  /**\n   * Private methods\n   */\n\n  /**\n   * Check if the specified header is allowed.\n   *\n   * @param string header Header to validate\n   * @return boolean False if not allowed, otherwise true\n   */\n  var isAllowedHttpHeader = function(header) {\n    return disableHeaderCheck || (header && forbiddenRequestHeaders.indexOf(header.toLowerCase()) === -1);\n  };\n\n  /**\n   * Check if the specified method is allowed.\n   *\n   * @param string method Request method to validate\n   * @return boolean False if not allowed, otherwise true\n   */\n  var isAllowedHttpMethod = function(method) {\n    return (method && forbiddenRequestMethods.indexOf(method) === -1);\n  };\n\n  /**\n   * Public methods\n   */\n\n  /**\n   * Open the connection. Currently supports local server requests.\n   *\n   * @param string method Connection method (eg GET, POST)\n   * @param string url URL for the connection.\n   * @param boolean async Asynchronous connection. Default is true.\n   * @param string user Username for basic authentication (optional)\n   * @param string password Password for basic authentication (optional)\n   */\n  this.open = function(method, url, async, user, password) {\n    this.abort();\n    errorFlag = false;\n\n    // Check for valid request method\n    if (!isAllowedHttpMethod(method)) {\n      throw \"SecurityError: Request method not allowed\";\n    }\n\n    settings = {\n      \"method\": method,\n      \"url\": url.toString(),\n      \"async\": (typeof async !== \"boolean\" ? true : async),\n      \"user\": user || null,\n      \"password\": password || null\n    };\n\n    setState(this.OPENED);\n  };\n\n  /**\n   * Disables or enables isAllowedHttpHeader() check the request. Enabled by default.\n   * This does not conform to the W3C spec.\n   *\n   * @param boolean state Enable or disable header checking.\n   */\n  this.setDisableHeaderCheck = function(state) {\n    disableHeaderCheck = state;\n  };\n\n  /**\n   * Sets a header for the request.\n   *\n   * @param string header Header name\n   * @param string value Header value\n   * @return boolean Header added\n   */\n  this.setRequestHeader = function(header, value) {\n    if (this.readyState != this.OPENED) {\n      throw \"INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN\";\n      return false;\n    }\n    if (!isAllowedHttpHeader(header)) {\n      console.warn('Refused to set unsafe header \"' + header + '\"');\n      return false;\n    }\n    if (sendFlag) {\n      throw \"INVALID_STATE_ERR: send flag is true\";\n      return false;\n    }\n    headers[header] = value;\n    return true;\n  };\n\n  /**\n   * Gets a header from the server response.\n   *\n   * @param string header Name of header to get.\n   * @return string Text of the header or null if it doesn't exist.\n   */\n  this.getResponseHeader = function(header) {\n    if (typeof header === \"string\"\n      && this.readyState > this.OPENED\n      && response.headers[header.toLowerCase()]\n      && !errorFlag\n    ) {\n      return response.headers[header.toLowerCase()];\n    }\n\n    return null;\n  };\n\n  /**\n   * Gets all the response headers.\n   *\n   * @return string A string with all response headers separated by CR+LF\n   */\n  this.getAllResponseHeaders = function() {\n    if (this.readyState < this.HEADERS_RECEIVED || errorFlag) {\n      return \"\";\n    }\n    var result = \"\";\n\n    for (var i in response.headers) {\n      // Cookie headers are excluded\n      if (i !== \"set-cookie\" && i !== \"set-cookie2\") {\n        result += i + \": \" + response.headers[i] + \"\\r\\n\";\n      }\n    }\n    return result.substr(0, result.length - 2);\n  };\n\n  /**\n   * Gets a request header\n   *\n   * @param string name Name of header to get\n   * @return string Returns the request header or empty string if not set\n   */\n  this.getRequestHeader = function(name) {\n    // @TODO Make this case insensitive\n    if (typeof name === \"string\" && headers[name]) {\n      return headers[name];\n    }\n\n    return \"\";\n  };\n\n  /**\n   * Sends the request to the server.\n   *\n   * @param string data Optional data to send as request body.\n   */\n  this.send = function(data) {\n    if (this.readyState != this.OPENED) {\n      throw \"INVALID_STATE_ERR: connection must be opened before send() is called\";\n    }\n\n    if (sendFlag) {\n      throw \"INVALID_STATE_ERR: send has already been called\";\n    }\n\n    var ssl = false, local = false;\n    var url = Url.parse(settings.url);\n    var host;\n    // Determine the server\n    switch (url.protocol) {\n      case 'https:':\n        ssl = true;\n        // SSL & non-SSL both need host, no break here.\n      case 'http:':\n        host = url.hostname;\n        break;\n\n      case 'file:':\n        local = true;\n        break;\n\n      case undefined:\n      case '':\n        host = \"localhost\";\n        break;\n\n      default:\n        throw \"Protocol not supported.\";\n    }\n\n    // Load files off the local filesystem (file://)\n    if (local) {\n      if (settings.method !== \"GET\") {\n        throw \"XMLHttpRequest: Only GET method is supported\";\n      }\n\n      if (settings.async) {\n        fs.readFile(url.pathname, 'utf8', function(error, data) {\n          if (error) {\n            self.handleError(error);\n          } else {\n            self.status = 200;\n            self.responseText = data;\n            setState(self.DONE);\n          }\n        });\n      } else {\n        try {\n          this.responseText = fs.readFileSync(url.pathname, 'utf8');\n          this.status = 200;\n          setState(self.DONE);\n        } catch(e) {\n          this.handleError(e);\n        }\n      }\n\n      return;\n    }\n\n    // Default to port 80. If accessing localhost on another port be sure\n    // to use http://localhost:port/path\n    var port = url.port || (ssl ? 443 : 80);\n    // Add query string if one is used\n    var uri = url.pathname + (url.search ? url.search : '');\n\n    // Set the Host header or the server may reject the request\n    headers[\"Host\"] = host;\n    if (!((ssl && port === 443) || port === 80)) {\n      headers[\"Host\"] += ':' + url.port;\n    }\n\n    // Set Basic Auth if necessary\n    if (settings.user) {\n      if (typeof settings.password == \"undefined\") {\n        settings.password = \"\";\n      }\n      var authBuf = new Buffer(settings.user + \":\" + settings.password);\n      headers[\"Authorization\"] = \"Basic \" + authBuf.toString(\"base64\");\n    }\n\n    // Set content length header\n    if (settings.method === \"GET\" || settings.method === \"HEAD\") {\n      data = null;\n    } else if (data) {\n      headers[\"Content-Length\"] = Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data);\n\n      if (!headers[\"Content-Type\"]) {\n        headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n      }\n    } else if (settings.method === \"POST\") {\n      // For a post with no data set Content-Length: 0.\n      // This is required by buggy servers that don't meet the specs.\n      headers[\"Content-Length\"] = 0;\n    }\n\n    var agent = opts.agent || false;\n    var options = {\n      host: host,\n      port: port,\n      path: uri,\n      method: settings.method,\n      headers: headers,\n      agent: agent\n    };\n\n    if (ssl) {\n      options.pfx = opts.pfx;\n      options.key = opts.key;\n      options.passphrase = opts.passphrase;\n      options.cert = opts.cert;\n      options.ca = opts.ca;\n      options.ciphers = opts.ciphers;\n      options.rejectUnauthorized = opts.rejectUnauthorized;\n    }\n\n    // Reset error flag\n    errorFlag = false;\n\n    // Handle async requests\n    if (settings.async) {\n      // Use the proper protocol\n      var doRequest = ssl ? https.request : http.request;\n\n      // Request is being sent, set send flag\n      sendFlag = true;\n\n      // As per spec, this is called here for historical reasons.\n      self.dispatchEvent(\"readystatechange\");\n\n      // Handler for the response\n      var responseHandler = function(resp) {\n        // Set response var to the response we got back\n        // This is so it remains accessable outside this scope\n        response = resp;\n        // Check for redirect\n        // @TODO Prevent looped redirects\n        if (response.statusCode === 302 || response.statusCode === 303 || response.statusCode === 307) {\n          // Change URL to the redirect location\n          settings.url = response.headers.location;\n          var url = Url.parse(settings.url);\n          // Set host var in case it's used later\n          host = url.hostname;\n          // Options for the new request\n          var newOptions = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.path,\n            method: response.statusCode === 303 ? 'GET' : settings.method,\n            headers: headers\n          };\n\n          if (ssl) {\n            newOptions.pfx = opts.pfx;\n            newOptions.key = opts.key;\n            newOptions.passphrase = opts.passphrase;\n            newOptions.cert = opts.cert;\n            newOptions.ca = opts.ca;\n            newOptions.ciphers = opts.ciphers;\n            newOptions.rejectUnauthorized = opts.rejectUnauthorized;\n          }\n\n          // Issue the new request\n          request = doRequest(newOptions, responseHandler).on('error', errorHandler);\n          request.end();\n          // @TODO Check if an XHR event needs to be fired here\n          return;\n        }\n\n        if (response && response.setEncoding) {\n          response.setEncoding(\"utf8\");\n        }\n\n        setState(self.HEADERS_RECEIVED);\n        self.status = response.statusCode;\n\n        response.on('data', function(chunk) {\n          // Make sure there's some data\n          if (chunk) {\n            self.responseText += chunk;\n          }\n          // Don't emit state changes if the connection has been aborted.\n          if (sendFlag) {\n            setState(self.LOADING);\n          }\n        });\n\n        response.on('end', function() {\n          if (sendFlag) {\n            // The sendFlag needs to be set before setState is called.  Otherwise if we are chaining callbacks\n            // there can be a timing issue (the callback is called and a new call is made before the flag is reset).\n            sendFlag = false;\n            // Discard the 'end' event if the connection has been aborted\n            setState(self.DONE);\n          }\n        });\n\n        response.on('error', function(error) {\n          self.handleError(error);\n        });\n      }\n\n      // Error handler for the request\n      var errorHandler = function(error) {\n        self.handleError(error);\n      }\n\n      // Create the request\n      request = doRequest(options, responseHandler).on('error', errorHandler);\n\n      // Node 0.4 and later won't accept empty data. Make sure it's needed.\n      if (data) {\n        request.write(data);\n      }\n\n      request.end();\n\n      self.dispatchEvent(\"loadstart\");\n    } else { // Synchronous\n      // Create a temporary file for communication with the other Node process\n      var contentFile = \".node-xmlhttprequest-content-\" + process.pid;\n      var syncFile = \".node-xmlhttprequest-sync-\" + process.pid;\n      fs.writeFileSync(syncFile, \"\", \"utf8\");\n      // The async request the other Node process executes\n      var execString = \"var http = require('http'), https = require('https'), fs = require('fs');\"\n        + \"var doRequest = http\" + (ssl ? \"s\" : \"\") + \".request;\"\n        + \"var options = \" + JSON.stringify(options) + \";\"\n        + \"var responseText = '';\"\n        + \"var req = doRequest(options, function(response) {\"\n        + \"response.setEncoding('utf8');\"\n        + \"response.on('data', function(chunk) {\"\n        + \"  responseText += chunk;\"\n        + \"});\"\n        + \"response.on('end', function() {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-STATUS:' + response.statusCode + ',' + responseText, 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + \"response.on('error', function(error) {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + \"}).on('error', function(error) {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + (data ? \"req.write('\" + data.replace(/'/g, \"\\\\'\") + \"');\":\"\")\n        + \"req.end();\";\n      // Start the other Node Process, executing this string\n      var syncProc = spawn(process.argv[0], [\"-e\", execString]);\n      var statusText;\n      while(fs.existsSync(syncFile)) {\n        // Wait while the sync file is empty\n      }\n      self.responseText = fs.readFileSync(contentFile, 'utf8');\n      // Kill the child process once the file has data\n      syncProc.stdin.end();\n      // Remove the temporary file\n      fs.unlinkSync(contentFile);\n      if (self.responseText.match(/^NODE-XMLHTTPREQUEST-ERROR:/)) {\n        // If the file returned an error, handle it\n        var errorObj = self.responseText.replace(/^NODE-XMLHTTPREQUEST-ERROR:/, \"\");\n        self.handleError(errorObj);\n      } else {\n        // If the file returned okay, parse its data and move to the DONE state\n        self.status = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:([0-9]*),.*/, \"$1\");\n        self.responseText = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:[0-9]*,(.*)/, \"$1\");\n        setState(self.DONE);\n      }\n    }\n  };\n\n  /**\n   * Called when an error is encountered to deal with it.\n   */\n  this.handleError = function(error) {\n    this.status = 503;\n    this.statusText = error;\n    this.responseText = error.stack;\n    errorFlag = true;\n    setState(this.DONE);\n  };\n\n  /**\n   * Aborts a request.\n   */\n  this.abort = function() {\n    if (request) {\n      request.abort();\n      request = null;\n    }\n\n    headers = Object.assign({}, defaultHeaders);\n    this.responseText = \"\";\n    this.responseXML = \"\";\n\n    errorFlag = true;\n\n    if (this.readyState !== this.UNSENT\n        && (this.readyState !== this.OPENED || sendFlag)\n        && this.readyState !== this.DONE) {\n      sendFlag = false;\n      setState(this.DONE);\n    }\n    this.readyState = this.UNSENT;\n  };\n\n  /**\n   * Adds an event listener. Preferred method of binding to events.\n   */\n  this.addEventListener = function(event, callback) {\n    if (!(event in listeners)) {\n      listeners[event] = [];\n    }\n    // Currently allows duplicate callbacks. Should it?\n    listeners[event].push(callback);\n  };\n\n  /**\n   * Remove an event callback that has already been bound.\n   * Only works on the matching funciton, cannot be a copy.\n   */\n  this.removeEventListener = function(event, callback) {\n    if (event in listeners) {\n      // Filter will return a new array with the callback removed\n      listeners[event] = listeners[event].filter(function(ev) {\n        return ev !== callback;\n      });\n    }\n  };\n\n  /**\n   * Dispatch any events, including both \"on\" methods and events attached using addEventListener.\n   */\n  this.dispatchEvent = function(event) {\n    if (typeof self[\"on\" + event] === \"function\") {\n      self[\"on\" + event]();\n    }\n    if (event in listeners) {\n      for (var i = 0, len = listeners[event].length; i < len; i++) {\n        listeners[event][i].call(self);\n      }\n    }\n  };\n\n  /**\n   * Changes readyState and calls onreadystatechange.\n   *\n   * @param int state New state\n   */\n  var setState = function(state) {\n    if (self.readyState !== state) {\n      self.readyState = state;\n\n      if (settings.async || self.readyState < self.OPENED || self.readyState === self.DONE) {\n        self.dispatchEvent(\"readystatechange\");\n      }\n\n      if (self.readyState === self.DONE && !errorFlag) {\n        self.dispatchEvent(\"load\");\n        // @TODO figure out InspectorInstrumentation::didLoadXHR(cookie)\n        self.dispatchEvent(\"loadend\");\n      }\n    }\n  };\n};\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","/**\n * Application model\n */\nexport default class Application {\n    /**\n     * @constructor Application\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Application ID.\n         *\n         * @member Application#id\n         * @type {string}\n         */\n        this.id = data.id;\n\n        /**\n         * Application name.\n         *\n         * @member Application#name\n         * @type {string}\n         */\n        this.name = data.name;\n\n        /**\n         * Application name.\n         *\n         * @member Application#description\n         * @type {string}\n         */\n        this.description = data.description;\n\n        /**\n         * Date/time created.\n         *\n         * @member Application#created\n         * @type {*}\n         */\n        this.created = data.created;\n\n        /**\n         * Public api key for application.\n         *\n         * @member Application#public_api_key\n         * @type {string}\n         */\n        this.public_api_key = data.public_api_key;\n\n        /**\n         * Private Api Key for created application.\n         *\n         * @member Application#private_api_key\n         * @type {string}\n         */\n        if ('private_api_key' in data) {\n            this.private_api_key = data.private_api_key;\n        }\n    }\n}","/**\n * Sensor model\n */\nexport default class Sensor {\n    /**\n     * @constructor Sensor\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Sensor ID.\n         *\n         * @member Sensor#id\n         * @type {string}\n         */\n        this.id = data.id;\n\n        /**\n         * Sensor IMEI.\n         *\n         * @member Sensor#imei\n         * @type {string}\n         */\n        this.imei = data.imei;\n\n        /**\n         * Sensor name.\n         *\n         * @member Sensor#name\n         * @type {string}\n         */\n        this.name = data.name;\n\n        /**\n         * Application ID.\n         *\n         * @member Sensor#application\n         * @type {string}\n         */\n        this.application = data.application;\n\n        /**\n         * Date/time created.\n         *\n         * @member Sensor#created\n         * @type {*}\n         */\n        this.created = data.created;\n\n        /**\n         * Battery charge.\n         *\n         * @member Sensor#batteryCharge\n         * @type {number}\n         */\n        this.batteryCharge = data.batteryCharge;\n\n        /**\n         * Is battery charging?\n         *\n         * @member Sensor#isBatteryCharging\n         * @type {boolean}\n         */\n        this.isBatteryCharging = data.isBatteryCharging;\n\n        /**\n         * Is sensor connected and online?\n         *\n         * @member Sensor#isOnline\n         * @type {boolean}\n         */\n        this.isOnline = data.isOnline;\n\n        /**\n         * Is sensor public?\n         *\n         * @member Sensor#is_public\n         * @type {boolean}\n         */\n        this.is_public = data.is_public;\n\n        this.token = data.token;\n\n        let self = this;\n\n        /**\n         * Access to measurments methods for current sensor.\n         *\n         * @member Sensor#measurements\n         * @type {Object}\n         */\n        this.measurements = {\n            'list': function(options) {\n                if (options === undefined) {\n                    options = {};\n                }\n                options['sensor'] = self.id;\n                return self.api.measurements.list(options);\n            },\n            'last': function(options) {\n                if (options === undefined) {\n                    options = {};\n                }\n                options['sensor'] = self.id;\n                return self.api.measurements.last(options);\n            }\n        }\n\n    }\n}","import Measurement from '../models/measurement';\n\n/**\n * @classdesc Response with measurements data.\n */\nexport default class MeasurementsResponse {\n    /**\n     * @constructor MeasurementsResponse\n     *\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Next measurement id for pagination.\n         *\n         * @member MeasurementsResponse#next\n         * @type {string}\n         */\n        this.next = data.next;\n\n        /**\n         * Previous measurement id for pagination.\n         *\n         * @member MeasurementsResponse#prev\n         * @type {string}\n         */\n        this.prev = data.prev;\n\n        /**\n         * List of measurements.\n         *\n         * @member MeasurementsResponse#measurements\n         * @type {Measurement[]}\n         */\n        this.measurements = [];\n\n        let self = this;\n        data.result.forEach(function(measurement_data) {\n            self.measurements.push(new Measurement(self.api, measurement_data));\n        });\n    }\n}","/**\n * Sensor alert model\n */\nexport default class SensorAlert {\n    /**\n     * @constructor SensorAlert\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Sensor alert ID\n         *\n         * @member SensorAlert#id\n         * @type {string}\n         */\n        this.id = data.id;\n\n        /**\n         * Threshold type\n         *\n         * @member SensorAlert#threshold_type\n         * @type {string}\n         */\n        this.threshold_type = data.threshold_type;\n\n        /**\n         * Measurement type\n         *\n         * @member SensorAlert#measurement_type\n         * @type {string}\n         */\n        this.measurement_type = data.measurement_type;\n\n        /**\n         * Threshold value\n         *\n         * @member SensorAlert#threshold_value\n         * @type {*}\n         */\n        this.threshold_value = data.threshold_value;\n    }\n}","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","var url = require(\"url\");\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar assert = require(\"assert\");\nvar Writable = require(\"stream\").Writable;\nvar debug = require(\"debug\")(\"follow-redirects\");\n\n// RFC7231§4.2.1: Of the request methods defined by this specification,\n// the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.\nvar SAFE_METHODS = { GET: true, HEAD: true, OPTIONS: true, TRACE: true };\n\n// Create handlers that pass events from native requests\nvar eventHandlers = Object.create(null);\n[\"abort\", \"aborted\", \"error\", \"socket\", \"timeout\"].forEach(function (event) {\n  eventHandlers[event] = function (arg) {\n    this._redirectable.emit(event, arg);\n  };\n});\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  options.headers = options.headers || {};\n  this._options = options;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new Error(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  else {\n    this.emit(\"error\", new Error(\"Request body larger than maxBodyLength limit\"));\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  var currentRequest = this._currentRequest;\n  if (!data) {\n    currentRequest.end(null, null, callback);\n  }\n  else {\n    this.write(data, encoding, function () {\n      currentRequest.end(null, null, callback);\n    });\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"abort\", \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\", \"setTimeout\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.substr(0, protocol.length - 1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  this._currentUrl = url.format(this._options);\n\n  // Set up event handlers\n  request._redirectable = this;\n  for (var event in eventHandlers) {\n    /* istanbul ignore else */\n    if (event) {\n      request.on(event, eventHandlers[event]);\n    }\n  }\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end.\n    var requestBodyBuffers = this._requestBodyBuffers;\n    (function writeNext() {\n      if (requestBodyBuffers.length !== 0) {\n        var buffer = requestBodyBuffers.pop();\n        request.write(buffer.data, buffer.encoding, writeNext);\n      }\n      else {\n        request.end();\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: response.statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n  var location = response.headers.location;\n  if (location && this._options.followRedirects !== false &&\n      response.statusCode >= 300 && response.statusCode < 400) {\n    // RFC7231§6.4: A client SHOULD detect and intervene\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\n    if (++this._redirectCount > this._options.maxRedirects) {\n      this.emit(\"error\", new Error(\"Max redirects exceeded.\"));\n      return;\n    }\n\n    // RFC7231§6.4: Automatic redirection needs to done with\n    // care for methods not known to be safe […],\n    // since the user might not wish to redirect an unsafe request.\n    // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates\n    // that the target resource resides temporarily under a different URI\n    // and the user agent MUST NOT change the request method\n    // if it performs an automatic redirection to that URI.\n    var header;\n    var headers = this._options.headers;\n    if (response.statusCode !== 307 && !(this._options.method in SAFE_METHODS)) {\n      this._options.method = \"GET\";\n      // Drop a possible entity and headers related to it\n      this._requestBodyBuffers = [];\n      for (header in headers) {\n        if (/^content-/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Drop the Host header, as the redirect might lead to a different host\n    if (!this._isRedirect) {\n      for (header in headers) {\n        if (/^host$/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Perform the redirected request\n    var redirectUrl = url.resolve(this._currentUrl, location);\n    debug(\"redirecting to\", redirectUrl);\n    Object.assign(this._options, url.parse(redirectUrl));\n    this._isRedirect = true;\n    this._performRequest();\n\n    // Discard the remainder of the response to avoid waiting for data\n    response.destroy();\n  }\n  else {\n    // The response is not a redirect; return it as-is\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    wrappedProtocol.request = function (options, callback) {\n      if (typeof options === \"string\") {\n        options = url.parse(options);\n        options.maxRedirects = exports.maxRedirects;\n      }\n      else {\n        options = Object.assign({\n          protocol: protocol,\n          maxRedirects: exports.maxRedirects,\n          maxBodyLength: exports.maxBodyLength,\n        }, options);\n      }\n      options.nativeProtocols = nativeProtocols;\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    };\n\n    // Executes a GET request, following redirects\n    wrappedProtocol.get = function (options, callback) {\n      var request = wrappedProtocol.request(options, callback);\n      request.end();\n      return request;\n    };\n  });\n  return exports;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof global.Buffer === 'function' && typeof global.Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof global.ArrayBuffer === 'function';\n\nvar isView = (function () {\n  if (withNativeArrayBuffer && typeof global.ArrayBuffer.isView === 'function') {\n    return global.ArrayBuffer.isView;\n  } else {\n    return function (obj) { return obj.buffer instanceof global.ArrayBuffer; };\n  }\n})();\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && global.Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof global.ArrayBuffer || isView(obj)));\n}\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","import SensorlabApi from './api';\nimport SensorlabWebsockets from './websockets';\n\nmodule.exports = {\n    'SensorlabApi': SensorlabApi,\n    'SensorlabWebsockets': SensorlabWebsockets,\n}","import UsersEndpoints from './endpoints/users';\nimport AuthEndpoints from './endpoints/auth';\nimport ApplicationsEndpoints from './endpoints/applications';\nimport ProfileEndpoints from './endpoints/profile';\nimport SensorsEndpoints from './endpoints/sensors';\nimport MeasurementsEndpoints from './endpoints/measurements';\nimport ApiResponse from './responses/api';\nimport ApiErrorBasicException from \"./responses/errors/basic\";\nimport ApiErrorUnauthorizedException from \"./responses/errors/auth\";\nimport ApiErrorNotFoundException from \"./responses/errors/notfound\";\nimport ApiErrorValidationException from \"./responses/errors/validation\";\nimport ApiErrorConnectionRefusedException from \"./responses/errors/connection_refused\";\nimport ApiErrorInternalException from \"./responses/errors/internal\";\nimport PublicEndpoints from \"./endpoints/public\";\nimport SensorAlertsEndpoints from \"./endpoints/sensor_alerts\";\nimport AlertsEndpoints from \"./endpoints/alerts\";\nimport ApiErrorForbiddenException from \"./responses/errors/forbidden\";\n\nlet axios = require('axios');\n\n/**\n * @class SensorlabApi\n * @classdesc Main class that connects all the endpoints.\n */\nexport default class SensorlabApi {\n    /**\n     * @param {string} api_url - API's url.\n     */\n    constructor(api_url = 'https://staging.sensorlab.io/api') {\n        /**\n         * REST API url.\n         *\n         * @type {string}\n         * @member SensorlabApi#rest_api_url\n         * @private\n         */\n        this._rest_api_url = api_url;\n\n        /**\n         * Users endpoint.\n         *\n         * @member SensorlabApi#users\n         * @private\n         * @type {UsersEndpoints}\n         */\n        this._users = new UsersEndpoints(this);\n\n        /**\n         * Auth endpoints.\n         *\n         * @member SensorlabApi#auth\n         * @type {AuthEndpoints}\n         */\n        this.auth = new AuthEndpoints(this);\n\n        /**\n         * Profile endpoints.\n         *\n         * @member SensorlabApi#profile\n         * @type {ProfileEndpoints}\n         */\n        this.profile = new ProfileEndpoints(this);\n\n        /**\n         * Applications endpoints.\n         *\n         * @member SensorlabApi#applications\n         * @type {ApplicationsEndpoints}\n         */\n        this.applications = new ApplicationsEndpoints(this);\n\n        /**\n         * Sensor endpoint.\n         *\n         * @member SensorlabApi#sensors\n         * @type {SensorsEndpoints}\n         */\n        this.sensors = new SensorsEndpoints(this);\n\n        /**\n         * Sensor alerts endpoint.\n         *\n         * @member SensorlabApi#sensor_alerts\n         * @type {SensorAlertsEndpoints}\n         */\n        this.sensor_alerts = new SensorAlertsEndpoints(this);\n\n        /**\n         * Alerts endpoint.\n         *\n         * @member SensorlabApi#alerts\n         * @type {AlertsEndpoints}\n         */\n        this.alerts = new AlertsEndpoints(this);\n\n        /**\n         * Measurements endpoints.\n         *\n         * @member SensorlabApi#measurements\n         * @type {MeasurementsEndpoints}\n         */\n        this.measurements = new MeasurementsEndpoints(this);\n\n        /**\n         * Public endpoints.\n         *\n         * @member SensorlabApi#public\n         * @type {PublicEndpoints}\n         */\n        this.public = new PublicEndpoints(this);\n\n        /**\n         * Saved JWT token\n         *\n         * @member SensorlabApi#jwt_token\n         * @type {string}\n         */\n        this.jwt_token = null;\n    }\n\n    /**\n     * Set authentication jwt token.\n     *\n     * @method SensorlabApi#setToken\n     * @param {string} jwt_token saved token\n     */\n    setToken(jwt_token) {\n        this.jwt_token = jwt_token;\n    }\n\n    /**\n     * Get authentication jwt token.\n     *\n     * @method SensorlabApi#getToken\n     * @returns {string}\n     */\n    getToken() {\n        return this.jwt_token;\n    }\n\n    /**\n     * Make requests to API with axios.\n     *\n     * @param {string} endpoint_url endpoint to send request to\n     * @param {string} method method type\n     * @param {object} data data to send with request\n     * @param {boolean} jwt_token use request with token or not\n     * @returns {Promise.<*|InterceptorManager|AxiosResponse|AxiosInterceptorManager<AxiosResponse>|Object>}\n     * @method SensorlabApi#_makeApiRequest\n     * @private\n     */\n    async _makeApiRequest(endpoint_url, method = 'GET', data = {}, params = {}, use_jwt_token = true) {\n        let headers = { 'Content-Type': 'application/json' };\n        let request_url = this._rest_api_url + endpoint_url;\n\n        if (use_jwt_token) {\n            headers['Authorization'] = 'Bearer ' + this.jwt_token;\n        };\n\n        let response = null;\n\n        try {\n            response = await axios({\n                params: params,\n                method: method,\n                url: request_url,\n                data: data,\n                headers: headers,\n            });\n        } catch (e) {\n            if ('response' in e) {\n                response = e.response;\n            }\n        }\n        return response;\n    }\n\n    /**\n     * Create ApiResponse from axios response data.\n     *\n     * @param {object} response response from axios\n     * @param {function} success callback\n     * @returns {ApiResponse}\n     * @throws {ApiResponse}\n     * @method SensorlabApi#_prepareApiResponse\n     * @private\n     */\n    _prepareApiResponse(response, success_cb = null) {\n        if (!response) {\n            throw new ApiErrorConnectionRefusedException(0, 'Connection refused');\n        }\n        switch (response.status) {\n            case 200:\n                if (success_cb) {\n                    return success_cb(this, response);\n                } else {\n                    return new ApiResponse(response.data.success, response.status, response.data.code, response.data.message);\n                }\n            case 401:\n                throw new ApiErrorUnauthorizedException(response.status, response.data.message);\n            case 403:\n                throw new ApiErrorForbiddenException(response.status, response.data.message);\n            case 404:\n                throw new ApiErrorNotFoundException(response.status, response.data);\n            case 422:\n                throw new ApiErrorValidationException(response.status, response.data.message, response.data.errors);\n            case 500:\n                throw new ApiErrorInternalException(response.status, 'Internal Error');\n            default:\n                let message = null;\n                if ('message' in response.data) {\n                    message = response.data.message;\n                }\n                throw new ApiErrorBasicException(response.status, message);\n        }\n    }\n}","/**\n * @classdesc Class for /users/* endpoints.\n */\nexport default class UsersEndpoints {\n    /**\n     * @constructor UsersEndpoints\n     * @param {SensorlabApi} api - parent API class\n     */\n    constructor(api) {\n        /**\n         * @member UsersEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Signup users endpoint.\n     *\n     * @method UsersEndpoints#signup\n     * @param {string} email - users's email\n     * @param {string} password - users's password\n     * @param {string} password_check - password check field value\n     */\n    async signup(email, password, password_check) {\n        let data = {\n            'email': email,\n            'password': password,\n            'password_check': password_check,\n        }\n        let response = await this.api._makeApiRequest('/basic/users/signup', 'POST', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Email verification endpoint.\n     *\n     * @method UsersEndpoints#verify_email\n     * @param {string} verification_token - verification token from email\n     * @returns {Promise.<ApiResponse>}\n     */\n    async verify_email(verification_token) {\n        let data = {\n            verification_token: verification_token,\n        };\n        let response = await this.api._makeApiRequest('/basic/users/verify_email', 'POST', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Request password reset endpoint.\n     *\n     * @method UsersEndpoints#reset_password_request\n     * @param {string} email - user's email\n     * @returns {Promise.<ApiResponse>}\n     */\n    async reset_password_request(email) {\n        let data = {\n            'email': email,\n        }\n        let response = await this.api._makeApiRequest('/basic/users/reset_password/request', 'POST', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Request password reset check token endpoint.\n     *\n     * @method UsersEndpoints#reset_password_check_token\n     * @param {string} token - verification token to check\n     * @returns {Promise.<ApiResponse>}\n     */\n    async reset_password_check_token(token) {\n        let data = {\n            'token': token,\n        }\n        let response = await this.api._makeApiRequest('/basic/users/reset_password/check', 'POST', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Reset password endpoint.\n     *\n     * @method UsersEndpoints#reset_password\n     * @param {string} token - verification token from email.\n     * @param {string} password - new user's password\n     * @param {string} password_check - password check field value\n     * @returns {Promise.<ApiResponse>}\n     */\n    async reset_password(token, password, password_check) {\n        let data = {\n            'token': token,\n            'password': password,\n            'password_check': password_check,\n        }\n        let response = await this.api._makeApiRequest('/basic/users/reset_password', 'POST', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Resend verification email.\n     *\n     * @method UsersEndpoints#verify_email_resend\n     * @param {string} email - user's email\n     * @returns {Promise.<ApiResponse>}\n     */\n    async verify_email_resend(email) {\n        let data = {\n            'email': email,\n        }\n        let response = await this.api._makeApiRequest('/basic/users/verify_email/resend', 'POST', data);\n        return this.api._prepareApiResponse(response);\n    }\n}","import User from '../models/user';\nimport ApplicationToken from \"../models/application_token\";\n\n/**\n * Class for /auth/* endpoints.\n */\nexport default class AuthEndpoints {\n    /**\n     * @constructor AuthEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member AuthEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Authorize with email and password and get authentication token.\n     *\n     * @method AuthEndpoints#user_token\n     * @param {string} email user's email\n     * @param {string} password user's password\n     * @returns {Promise.<ApiResponse>}\n     */\n    async user_token(email, password) {\n        let data = {\n            'email': email,\n            'password': password,\n        }\n        let response = await this.api._makeApiRequest('/v1/auth/user/token', 'POST', data);\n        let result = this.api._prepareApiResponse(response, this._successUserResponse);\n        this.api.setToken(result.token);\n        return result;\n    }\n\n    /**\n     * Authenticate application by public and private api keys and get JWT token.\n     *\n     * @method AuthEndpoints#application_token\n     * @param {string} public_api_key Application's public api key\n     * @param {string} private_api_key Application's private api key\n     * @returns {Promise.<ApiResponse>}\n     */\n    async application_token(public_api_key, private_api_key) {\n        let data = {\n            'public_api_key': public_api_key,\n            'private_api_key': private_api_key,\n        }\n        let response = await this.api._makeApiRequest('/v1/auth/application/token', 'POST', data);\n        let result = this.api._prepareApiResponse(response, this._successApplicationResponse);\n        this.api.setToken(result.token);\n        return result;\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {User}\n     * @private\n     */\n    _successUserResponse(api, response) {\n        return new User(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {ApplicationToken}\n     * @private\n     */\n    _successApplicationResponse(api, response) {\n        return new ApplicationToken(api, response.data);\n    }\n}","/**\n * User model\n */\nexport default class User {\n    /**\n     * @constructor User\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Authorization token.\n         *\n         * @member User#token\n         * @type {string}\n         */\n        this.token = data.token;\n    }\n\n    /**\n     * Get user's profile.\n     *\n     * @method User#profile\n     * @returns {Promise.<ApiResponse>}\n     */\n    profile() {\n        return this.api.profile.get();\n    }\n}","/**\n * Application Token class\n */\nexport default class ApplicationToken {\n    /**\n     * @constructor ApplicationToken\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Authorization token.\n         *\n         * @member ApplicationToken#token\n         * @type {string}\n         */\n        this.token = data.token;\n    }\n}","import ApplicationsResponse from '../responses/applications';\nimport Application from '../models/application';\n\n/**\n * Class for /application/* endpoints.\n */\nexport default class ApplicationsEndpoints {\n    /**\n     * @constructor ApplicationsEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member ApplicationsEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get applications list\n     *\n     * @method ApplicationsEndpoints#list\n     * @param {object} options - method options\n     * @param {number} options.page - page number to display. Default is `1`.\n     * @param {string} options.name - search by name.\n     * @param {string} options.sort - sorting parameter\n     * @returns {Promise.<ApiResponse>}\n     */\n    async list(options) {\n        if (options === undefined) options = {};\n        if (options.page === undefined) options.page = 1;\n        if (options.name === undefined) options.name = null;\n        if (options.sort === undefined) options.sort = null;\n\n        let params = {\n            page: options.page,\n            name: options.name,\n            sort: options.sort,\n        }\n        let response = await this.api._makeApiRequest('/v1/applications', 'GET', {}, params, true);\n        return this.api._prepareApiResponse(response, this._successApplicationsListResponse);\n    }\n\n    /**\n     * Get application by id\n     *\n     * @method ApplicationsEndpoints#get\n     * @param {string} application_id - application_id\n     * @returns {Promise.<ApiResponse>}\n     */\n    async get(application_id) {\n        let response = await this.api._makeApiRequest('/v1/applications/' + application_id, 'GET', {}, {}, true);\n        return this.api._prepareApiResponse(response, this._successApplicationResponse);\n    }\n\n    /**\n     * Create application.\n     *\n     * @method ApplicationsEndpoints#create\n     * @param {string} name - application's name\n     * @param {string} description - users's description\n     */\n    async create(name, description = null) {\n        let data = {\n            'name': name,\n            'description': description,\n        }\n        let response = await this.api._makeApiRequest('/v1/applications', 'POST', data);\n        return this.api._prepareApiResponse(response, this._successCreateApplicationResponse);\n    }\n\n    /**\n     * Update application.\n     *\n     * @method ApplicationsEndpoints#update\n     * @param {string} application_id - id of application to update\n     * @param {string} name - application's name\n     * @param {string} description - users's description\n     */\n    async update(application_id, name, description = null) {\n        let data = {\n            'name': name,\n            'description': description,\n        }\n        let response = await this.api._makeApiRequest('/v1/applications/' + application_id, 'PATCH', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Delete application by id.\n     *\n     * @method ApplicationsEndpoints#delete\n     * @param {string} application_id - application_id\n     * @returns {Promise.<ApiResponse>}\n     */\n    async delete(application_id) {\n        let response = await this.api._makeApiRequest('/v1/applications/' + application_id, 'DELETE', {}, {}, true);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Generate new private api key for application.\n     *\n     * @method ApplicationsEndpoints#generate_private_api_key\n     * @param application_id\n     * @returns {Promise<*>}\n     */\n    async generate_private_api_key(application_id) {\n        let response = await this.api._makeApiRequest(\n            '/v1/applications/' + application_id + '/private_api_key/generate', 'POST', {}, {}, true);\n        return this.api._prepareApiResponse(response, this._successCreateApplicationResponse);\n    }\n\n    /**\n     * Get application for application token.\n     *\n     * @method ApplicationsEndpoints#get_self\n     * @returns {Promise.<ApiResponse>}\n     */\n    async get_self() {\n        let response = await this.api._makeApiRequest('/v1/applications/self', 'GET', {}, {}, true);\n        return this.api._prepareApiResponse(response, this._successApplicationResponse);\n    }\n\n    /**\n     * Update application for application token.\n     *\n     * @method ApplicationsEndpoints#update_self\n     * @param {string} name - application's name\n     * @param {string} description - users's description\n     */\n    async update_self(name, description = null) {\n        let data = {\n            'name': name,\n            'description': description,\n        }\n        let response = await this.api._makeApiRequest('/v1/applications/self', 'PATCH', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {ApplicationsResponse}\n     * @private\n     */\n    _successApplicationsListResponse(api, response) {\n        return new ApplicationsResponse(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {Application}\n     * @private\n     */\n    _successApplicationResponse(api, response) {\n        return new Application(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {Application}\n     * @private\n     */\n    _successCreateApplicationResponse(api, response) {\n        return new Application(api, response.data.application);\n    }\n}","import Application from '../models/application';\n\n/**\n * Response with applications data\n */\nexport default class ApplicationsResponse {\n    /**\n     * @constructor ApplicationsResponse\n     *\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Total amount of pages available.\n         *\n         * @member ApplicationsResponse#pages\n         * @type {number}\n         */\n        this.pages = data.pages;\n\n        /**\n         * Total amount of sensors available.\n         *\n         * @member ApplicationsResponse#count\n         * @type {number}\n         */\n        this.count = data.count;\n\n        /**\n         * List of sensors.\n         *\n         * @member ApplicationsResponse#applications\n         * @type {Application[]}\n         */\n        this.applications = [];\n\n        let self = this;\n        data.result.forEach(function(application_data) {\n            self.applications.push(new Application(self.api, application_data));\n        });\n    }\n}","import Profile from '../models/profile';\n\n/**\n * Class for /profile/* endpoints.\n */\nexport default class ProfileEndpoints {\n    /**\n     * @constructor ProfileEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member ProfileEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get user's profile.\n     *\n     * @method ProfileEndpoints#get\n     * @returns {Promise.<ApiResponse>}\n     */\n    async get() {\n        let response = await this.api._makeApiRequest('/v1/profile', 'GET', null, null, true);\n        return this.api._prepareApiResponse(response, this._successProfileResult);\n\n    }\n\n    /**\n     * Change password.\n     *\n     * @method ProfileEndpoints#change_password\n     * @param {string} old_password - current (old) user's password\n     * @param {string} new_password - new password to set\n     * @param {string} new_password_check - new password check\n     * @returns {Promise.<ApiResponse>}\n     */\n    async change_password(old_password, new_password, new_password_check) {\n        let data = {\n            'old_password': old_password,\n            'new_password': new_password,\n            'new_password_check': new_password_check,\n        };\n        let response = await this.api._makeApiRequest('/v1/profile/change_password', 'POST', data, null, true);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {Profile}\n     * @private\n     */\n    _successProfileResult(api, response) {\n        return new Profile(api, response.data);\n    }\n}","/**\n * User profile\n */\nexport default class Profile {\n    /**\n     * @constructor Profile\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * User's email\n         *\n         * @member Profile#email\n         * @type {string}\n         */\n        this.email = data.email;\n    }\n\n    /**\n     * Change password for profile/user.\n     *\n     * @method Profile#change_password\n     * @param old_password\n     * @param new_password\n     * @param new_password_check\n     * @returns {Promise.<ApiResponse>}\n     */\n    async change_password(old_password, new_password, new_password_check) {\n        return this.api.profile.change_password(old_password, new_password, new_password_check)\n    }\n}","import SensorsResponse from '../responses/sensors';\nimport Sensor from '../models/sensor';\n\n/**\n * Class for /sensors/* endpoints.\n */\nexport default class SensorsEndpoints {\n    /**\n     * @constructor SensorsEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member SensorsEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get sensors list.\n     *\n     * @method SensorsEndpoints#list\n     * @param {object} options - method options\n     * @param {number} options.page - page number to display. Default is `1`.\n     * @param {string} options.name - filter by name.\n     * @param {string} options.id - filter by id.\n     * @param {string} options.imei - filter by imei.\n     * @param {string} options.sort - sorting parameter\n     * @param {string} options.online_status - pass \"online\" to search for online sensors or \"offline\" for offline sensors.\n     * @param {string} options.battery_charge_min - filter sensors by battery charge\n     * @param {string} options.battery_charge_max - filter sensors by battery charge\n     * @returns {Promise.<ApiResponse>}\n     */\n    async list(options) {\n        if (options === undefined) options = {};\n        if (options.page === undefined) options.page = 1;\n        if (options.name === undefined) options.name = null;\n        if (options.id === undefined) options.id = null;\n        if (options.imei === undefined) options.imei = null;\n        if (options.sort === undefined) options.sort = null;\n        if (options.online_status === undefined) options.online_status = null;\n        if (options.battery_charge_min === undefined) options.battery_charge_min = null;\n        if (options.battery_charge_max === undefined) options.battery_charge_max = null;\n\n        let params = {\n            page: options.page,\n            name: options.name,\n            id: options.id,\n            imei: options.imei,\n            sort: options.sort,\n            online_status: options.online_status,\n            battery_charge_min: options.battery_charge_min,\n            battery_charge_max: options.battery_charge_max\n        }\n        let response = await this.api._makeApiRequest('/v1/sensors', 'GET', {}, params, true);\n        return this.api._prepareApiResponse(response, this._successSensorsListResponse);\n    }\n\n    /**\n     * Get sensor by id.\n     *\n     * @method SensorsEndpoints#one\n     * @param {string} sensor_id - sensor's id\n     * @returns {Promise.<ApiResponse>}\n     */\n    async get(sensor_id) {\n        let response = await this.api._makeApiRequest('/v1/sensors/' + sensor_id, 'GET', {}, {}, true);\n        return this.api._prepareApiResponse(response, this._successSensorResponse);\n    }\n\n    /**\n     * Update sensors.\n     *\n     * @method SensorsEndpoints#update\n     * @param {string} sensor_id - id of sensor to update\n     * @param {string} name - sensor's name\n     * @param {string} application - application id to assign to\n     * @param {boolean} is_public - set sensor private or public\n     */\n    async update(sensor_id, name, application = null, is_public = null) {\n        let data = {\n            'name': name,\n        };\n        if (application !== null) {\n            data['application'] = application;\n        }\n        if (is_public !== null) {\n            data['is_public'] = is_public;\n        }\n        let response = await this.api._makeApiRequest('/v1/sensors/' + sensor_id, 'PATCH', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {SensorsResponse}\n     * @private\n     */\n    _successSensorsListResponse(api, response) {\n        return new SensorsResponse(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {Sensor}\n     * @private\n     */\n    _successSensorResponse(api, response) {\n        return new Sensor(api, response.data);\n    }\n}","import Sensor from '../models/sensor';\n\n/**\n * Response with sensors data\n */\nexport default class SensorsResponse {\n    /**\n     * @constructor SensorsResponse\n     *\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Total amount of pages available.\n         *\n         * @member SensorsResponse#pages\n         * @type {number}\n         */\n        this.pages = data.pages;\n\n        /**\n         * Total amount of sensors available.\n         *\n         * @member SensorsResponse#count\n         * @type {number}\n         */\n        this.count = data.count;\n\n        /**\n         * List of sensors.\n         *\n         * @member SensorsResponse#measurements\n         * @type {Sensor[]}\n         */\n        this.sensors = [];\n\n        let self = this;\n        data.result.forEach(function(sensor_data) {\n            self.sensors.push(new Sensor(self.api, sensor_data));\n        });\n    }\n}","import MeasurementsResponse from '../responses/measurements';\nimport Measurement from '../models/measurement';\n\n/**\n * Class for /measurements/* endpoints.\n */\nexport default class MeasurementsEndpoints {\n    /**\n     * @constructor MeasurementsEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member MeasurementsEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get sensors list\n     *\n     * @method MeasurementsEndpoints#list\n     * @param {object} options - method options\n     * @param {number} options.page - page number to display. Default is `1`.\n     * @param {string} options.sensor - show measurements for sensor with specified id.\n     * @param {string} options.type - get measurements with specified type only.\n     * @param {string} options.sort - sorting parameter\n     * @returns {Promise.<ApiResponse>}\n     */\n    async list(options) {\n        if (options === undefined) options = {};\n        if (options.sensor === undefined) options.sensor = null;\n        if (options.type === undefined) options.type = null;\n        if (options.next === undefined) options.next = null;\n        if (options.timestamp_start === undefined) options.timestamp_start = null;\n        if (options.timestamp_stop === undefined) options.timestamp_stop = null;\n\n        let params = {\n            next: options.next,\n            type: options.type,\n            sensor: options.sensor,\n            timestamp_start: options.timestamp_start,\n            timestamp_stop: options.timestamp_stop,\n        }\n        let response = await this.api._makeApiRequest('/v1/measurements', 'GET', {}, params, true);\n        return this.api._prepareApiResponse(response, this._successMeasurementsListResponse);\n    }\n\n    /**\n     * Get sensor by id\n     *\n     * @method MeasurementsEndpoints#last\n     * @param {object} options - method options\n     * @param {string} options.sensor_id - get measurement for sensor with specified id.\n     * @param {string} type - get measurement with specified type only.\n     * @returns {Promise.<ApiResponse>}\n     */\n    async last(options) {\n        if (options === undefined) options = {};\n        if (options.sensor === undefined) options.sensor = null;\n        if (options.type === undefined) options.type = null;\n\n        let params = {};\n        if (options.type) {\n            params['type'] = options.type;\n        }\n        if (options.sensor) {\n            params['sensor'] = options.sensor;\n        }\n        let response = await this.api._makeApiRequest('/v1/measurements/last', 'GET', {}, params, true);\n        return this.api._prepareApiResponse(response, this._successMeasurementResponse);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {MeasurementsResponse}\n     * @private\n     */\n    _successMeasurementsListResponse(api, response) {\n        return new MeasurementsResponse(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {Measurement}\n     * @private\n     */\n    _successMeasurementResponse(api, response) {\n        return new Measurement(api, response.data);\n    }\n}","/**\n * @classdesc Default api response for errors\n */\nexport default class ApiResponse {\n    /**\n     * @constructor ApiResponse\n     *\n     * @param {boolean} success\n     * @param {number} status\n     * @param {number} code\n     * @param {string} message\n     * @param {string} token\n     */\n    constructor(success, status, code, message = null, errors = []) {\n        /**\n         * Response was success or returned with errors\n         *\n         * @member ApiResponse#success\n         * @type {boolean}\n         */\n        this.success = success;\n\n        /**\n         * HTTP status of response\n         *\n         * @member ApiResponse#status\n         * @type {number}\n         */\n        this.status = status;\n\n        /**\n         * Response/error code\n         *\n         * @member ApiResponse#code\n         * @type {number}\n         */\n        this.code = code;\n\n        /**\n         * Response/error message\n         *\n         * @member ApiResponse#message\n         * @type {string}\n         */\n        this.message = message;\n\n        /**\n         * Validation errors.\n         *\n         * @member ApiResponse#errors\n         * @type {Array}\n         */\n        this.errors = errors;\n    }\n}","import ApiErrorBasicException from \"./basic\";\n\n/**\n * @class ApiErrorUnauthorizedException\n * @classdesc SDK will throw this exception on 401 status errors.\n * @extends ApiErrorBasicException\n */\nexport default class ApiErrorUnauthorizedException extends ApiErrorBasicException {\n}","import ApiErrorBasicException from \"./basic\";\n\n/**\n * @class ApiErrorNotFoundException\n * @classdesc SDK will throw this exception on 404 status errors.\n * @extends ApiErrorBasicException\n */\nexport default class ApiErrorNotFoundException extends ApiErrorBasicException {\n}","import ApiErrorBasicException from \"./basic\";\n\n/**\n * @class ApiErrorValidationException\n * @classdesc SDK will throw this exception on 422 status (fields validation).\n * @extends ApiErrorBasicException\n */\nexport default class ApiErrorValidationException extends ApiErrorBasicException {\n}","import ApiErrorBasicException from \"./basic\";\n\n/**\n * @class ApiErrorConnectionRefusedException\n * @classdesc SDK will throw this exception if there's no connection to API.\n * @extends ApiErrorBasicException\n */\nexport default class ApiErrorConnectionRefusedException extends ApiErrorBasicException {\n}","import ApiErrorBasicException from \"./basic\";\n\n/**\n * @class ApiErrorInteralException\n * @classdesc SDK will throw this exception on 500 status errors.\n * @extends ApiErrorBasicException\n */\nexport default class ApiErrorInternalException extends ApiErrorBasicException {\n}","import MeasurementsResponse from '../responses/measurements';\nimport Measurement from '../models/measurement';\n\n/**\n * Class for /measurements/* endpoints.\n */\nexport default class PublicEndpoints {\n    /**\n     * @constructor PublicEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member PublicEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get sensors list\n     *\n     * @method PublicEndpoints#list\n     * @param {string} public_api_key\n     * @param {object} options - method options\n     * @param {number} options.page - page number to display. Default is `1`.\n     * @param {string} options.sensor - show measurements for sensor with specified id.\n     * @param {string} options.type - get measurements with specified type only.\n     * @param {string} options.sort - sorting parameter\n     * @returns {Promise.<ApiResponse>}\n     */\n    async list(public_api_key, options) {\n        if (options === undefined) options = {};\n        if (options.sensor === undefined) options.sensor = null;\n        if (options.type === undefined) options.type = null;\n        if (options.next === undefined) options.next = null;\n        if (options.timestamp_start === undefined) options.timestamp_start = null;\n        if (options.timestamp_stop === undefined) options.timestamp_stop = null;\n\n        let params = {\n            public_api_key: public_api_key,\n            next: options.next,\n            type: options.type,\n            timestamp_start: options.timestamp_start,\n            timestamp_stop: options.timestamp_stop,\n        }\n        let response = await this.api._makeApiRequest('/v1/public/sensors/'+options.sensor+'/measurements', 'GET', {}, params, false);\n        return this.api._prepareApiResponse(response, this._successMeasurementsListResponse);\n    }\n\n    /**\n     * Get sensor by id\n     *\n     * @method PublicEndpoints#last\n     * @param {string} public_api_key\n     * @param {object} options - method options\n     * @param {string} options.sensor_id - get measurement for sensor with specified id.\n     * @param {string} type - get measurement with specified type only.\n     * @returns {Promise.<ApiResponse>}\n     */\n    async last(public_api_key, options) {\n        if (options === undefined) options = {};\n        if (options.sensor === undefined) options.sensor = null;\n        if (options.type === undefined) options.type = null;\n\n        let params = {};\n        params.public_api_key = public_api_key;\n        if (options.type) {\n            params['type'] = options.type;\n        }\n        if (options.sensor) {\n            params['sensor'] = options.sensor;\n        }\n        let response = await this.api._makeApiRequest('/v1/public/sensors/'+options.sensor+'/measurements/last', 'GET', {}, params, false);\n        return this.api._prepareApiResponse(response, this._successMeasurementResponse);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {MeasurementsResponse}\n     * @private\n     */\n    _successMeasurementsListResponse(api, response) {\n        return new MeasurementsResponse(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {Measurement}\n     * @private\n     */\n    _successMeasurementResponse(api, response) {\n        return new Measurement(api, response.data);\n    }\n}","import SensorAlertsResponse from '../responses/sensor_alerts';\nimport SensorAlert from '../models/sensor_alert';\n\n/**\n * Sensor alerts endpoints.\n */\nexport default class SensorAlertsEndpoints {\n    /**\n     * @constructor SensorAlertsEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member SensorAlertsEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get sensor alerts list\n     *\n     * @method SensorAlertsEndpoints#list\n     * @param {string} sensor - Sensor ID.\n     * @returns {Promise.<ApiResponse>}\n     */\n    async list(sensor) {\n        let response = await this.api._makeApiRequest('/v1/sensors/'+sensor+'/alerts', 'GET');\n        return this.api._prepareApiResponse(response, this._successSensorAlertsListResponse);\n    }\n\n    /**\n     * Get sensor alert by id\n     *\n     * @method SensorAlertsEndpoints#get\n     * @param {string} sensor - Sensor ID\n     * @param {string} alert - Sensor Alert ID\n     * @returns {Promise.<ApiResponse>}\n     */\n    async get(sensor, alert) {\n        let response = await this.api._makeApiRequest('/v1/sensors/'+sensor+'/alerts/'+alert, 'GET');\n        return this.api._prepareApiResponse(response, this._successSensorAlertResponse);\n    }\n\n    /**\n     * Create sensor alert.\n     *\n     * @method SensorAlertsEndpoints#create\n     * @param {string} threshold_type - Threshold type\n     * @param {string} measurement_type - Measurement type\n     * @param {mixed} threshold_value - Threshold value\n     */\n    async create(sensor, threshold_type, measurement_type, threshold_value) {\n        let data = {\n            threshold_type: threshold_type,\n            measurement_type: measurement_type,\n            threshold_value: threshold_value\n        };\n        let response = await this.api._makeApiRequest('/v1/sensors/'+sensor+'/alerts', 'POST', data);\n        return this.api._prepareApiResponse(response, this._successCreateSensorAlertResponse);\n    }\n\n    /**\n     * Update sensor alert.\n     *\n     * @method SensorAlertsEndpoints#update\n     * @param {string} sensor - Sensor ID\n     * @param {string} alert - Sensor Alert ID\n     * @param {string} threshold_type - Threshold type\n     * @param {string} measurement_type - Measurement type\n     * @param {string|number|Object} threshold_value - Threshold value\n     */\n    async update(sensor, alert, threshold_type, measurement_type, threshold_value) {\n        let data = {\n            threshold_type: threshold_type,\n            measurement_type: measurement_type,\n            threshold_value: threshold_value\n        };\n        let response = await this.api._makeApiRequest('/v1/sensors/'+sensor+'/alerts/'+alert, 'PATCH', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Delete sensor alert.\n     *\n     * @method SensorAlertsEndpoints#delete\n     * @param {string} sensor - Sensor ID\n     * @param {string} alert - Sensor Alert ID\n     * @returns {Promise.<ApiResponse>}\n     */\n    async delete(sensor, alert) {\n        let response = await this.api._makeApiRequest('/v1/sensors/'+sensor+'/alerts/'+alert, 'DELETE');\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {SensorAlertsResponse}\n     * @private\n     */\n    _successSensorAlertsListResponse(api, response) {\n        return new SensorAlertsResponse(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {SensorAlert}\n     * @private\n     */\n    _successSensorAlertResponse(api, response) {\n        return new SensorAlert(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {SensorAlert}\n     * @private\n     */\n    _successCreateSensorAlertResponse(api, response) {\n        return new SensorAlert(api, response.data.sensor_alert);\n    }\n}","import SensorAlert from '../models/sensor_alert';\n\n/**\n * Response with sensor alerts data\n */\nexport default class SensorAlertsResponse {\n    /**\n     * @constructor SensorAlertsResponse\n     *\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * List of sensors.\n         *\n         * @member SensorAlertsResponse#sensor_alerts\n         * @type {SensorAlert[]}\n         */\n        this.sensor_alerts = [];\n\n        let self = this;\n        data.forEach(function(alert_data) {\n            self.sensor_alerts.push(new SensorAlert(self.api, alert_data));\n        });\n    }\n}","import AlertsResponse from '../responses/alerts';\n\n/**\n * Get last alerts for sensor.\n */\nexport default class AlertsEndpoints {\n    /**\n     * @constructor AlertsEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member AlertsEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get last alerts for sensor\n     *\n     * @method AlertsEndpoints#list\n     * @param {string} sensor - Sensor ID.\n     * @returns {Promise.<ApiResponse>}\n     */\n    async last(sensor) {\n        let response = await this.api._makeApiRequest('/v1/sensors/'+sensor+'/alerts/last', 'GET');\n        return this.api._prepareApiResponse(response, this._successSensorListResponse);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {AlertsResponse}\n     * @private\n     */\n    _successSensorListResponse(api, response) {\n        return new AlertsResponse(api, response.data);\n    }\n}","import Alert from '../models/alert';\n\n/**\n * Response with alerts data\n */\nexport default class AlertsResponse {\n    /**\n     * @constructor AlertsResponse\n     *\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * List of alerts.\n         *\n         * @member AlertsResponse#alerts\n         * @type {Alert[]}\n         */\n        this.alerts = [];\n\n        let self = this;\n        data.forEach(function(alert_data) {\n            self.alerts.push(new Alert(self.api, alert_data));\n        });\n    }\n}","/**\n * Alert model\n */\nexport default class Alert {\n    /**\n     * @constructor Alert\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Affected measurement\n         *\n         * @member Alert#measurement\n         * @type {object}\n         */\n        this.measurement = data.measurement;\n\n        /**\n         * Threshold\n         *\n         * @member Alert#threshold\n         * @type {object}\n         */\n        this.threshold = data.threshold;\n    }\n}","import ApiErrorBasicException from \"./basic\";\n\n/**\n * @class ApiErrorForbiddenException\n * @classdesc SDK will throw this exception on 403 status errors.\n * @extends ApiErrorBasicException\n */\nexport default class ApiErrorForbiddenException extends ApiErrorBasicException {\n}","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar pkg = require('./../../package.json');\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolve, reject) {\n    var data = config.data;\n    var headers = config.headers;\n    var timer;\n\n    // Set User-Agent (required by some servers)\n    // Only set header if it hasn't been set in config\n    // See https://github.com/axios/axios/issues/69\n    if (!headers['User-Agent'] && !headers['user-agent']) {\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = new Buffer(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = new Buffer(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var parsed = url.parse(config.url);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttps = protocol === 'https:';\n    var agent = isHttps ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method,\n      headers: headers,\n      agent: agent,\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        proxy = {\n          host: parsedProxyUrl.hostname,\n          port: parsedProxyUrl.port\n        };\n\n        if (parsedProxyUrl.auth) {\n          var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n          proxy.auth = {\n            username: proxyUrlAuth[0],\n            password: proxyUrlAuth[1]\n          };\n        }\n      }\n    }\n\n    if (proxy) {\n      options.hostname = proxy.host;\n      options.host = proxy.host;\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      options.port = proxy.port;\n      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;\n\n      // Basic proxy authorization\n      if (proxy.auth) {\n        var base64 = new Buffer(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n        options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n      }\n    }\n\n    var transport;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttps ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttps ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxContentLength && config.maxContentLength > -1) {\n      options.maxBodyLength = config.maxContentLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // Response has been received so kill timer that handles request timeout\n      clearTimeout(timer);\n      timer = null;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n      switch (res.headers['content-encoding']) {\n      /*eslint default-case:0*/\n      case 'gzip':\n      case 'compress':\n      case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n        stream = stream.pipe(zlib.createUnzip());\n\n        // remove the content-encoding in order to not confuse downstream operations\n        delete res.headers['content-encoding'];\n        break;\n      }\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString('utf8');\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted) return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout && !timer) {\n      timer = setTimeout(function handleRequestTimeout() {\n        req.abort();\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\n      }, config.timeout);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n","module.exports = require(\"assert\");","module.exports = require(\"stream\");","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [ 6, 2, 3, 4, 5, 1 ];\n\ntry {\n  var supportsColor = require('supports-color');\n  if (supportsColor && supportsColor.level >= 2) {\n    exports.colors = [\n      20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68,\n      69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134,\n      135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,\n      172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204,\n      205, 206, 207, 208, 209, 214, 215, 220, 221\n    ];\n  }\n} catch (err) {\n  // swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(process.stderr.fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = '\\u001b[3' + (c < 8 ? c : '8;5;' + c);\n    var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  } else {\n    return new Date().toISOString() + ' ';\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","module.exports = require(\"tty\");","module.exports = require(\"util\");","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","module.exports = require(\"os\");","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","module.exports = require(\"zlib\");","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","import SensorlabMeasurementsWebsocket from \"./websockets/measurements\";\nimport SensorlabAlertsWebsocket from \"./websockets/alerts\";\nimport SensorlabPublicWebsocket from \"./websockets/public\";\n\n/**\n * Main external class with links to other classes\n */\nexport default class SensorlabWebsockets {\n    /**\n     * @constructor SensorlabWebsockets\n     */\n    constructor() {\n        /**\n         * Shortcut to SensorlabMeasurementsWebsocket class\n         *\n         * @member SensorlabWebsockets#measurements\n         * @type {SensorlabMeasurementsWebsocket}\n         */\n        this.measurements = SensorlabMeasurementsWebsocket;\n\n        /**\n         * Shortcut to SensorlabAlertsWebsocket class\n         *\n         * @member SensorlabWebsockets#alerts\n         * @type {SensorlabAlertsWebsocket}\n         */\n        this.alerts = SensorlabAlertsWebsocket;\n\n        /**\n         * Shortcut to SensorlabPublicWebsocket class\n         *\n         * @member SensorlabWebsockets#public\n         * @type {SensorlabPublicWebsocket}\n         */\n        this.public = SensorlabPublicWebsocket;\n    }\n}","import BasicWebsocket from \"./basic\";\n\n/**\n * Work with /measurements namespace.\n */\nexport default class SensorlabMeasurementsWebsocket extends BasicWebsocket {\n    /**\n     * @constructor SensorlabMeasurementsWebsocket\n     *\n     * @param {string} websocket_url socket.io url to connect to\n     */\n    constructor(websocket_url = 'http://staging.sensorlab.io') {\n        super(websocket_url);\n        this.namespace = '/measurements';\n    }\n\n    /**\n     * Join room with measurement for specific sensor. You can also specify measurement type to listen too.\n     * If user has access to the sensor - socket.io will start emitting data for this sensor.\n     * If not - it will emit message that can be catched using onAccessDenied method.\n     *\n     * @member SensorlabMeasurementsWebsocket#joinSensor\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     */\n    joinSensor(sensor, type = null) {\n        this.socket.emit('sensor', { sensor: sensor, type: type});\n    }\n\n    /**\n     * Leave room with measurements for specific sensor.\n     *\n     * @member SensorlabMeasurementsWebsocket#leaveSensor\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     */\n    leaveSensor(sensor, type = null) {\n        this.socket.emit('sensor/disconnect', { sensor: sensor, type: type});\n    }\n\n    /**\n     * Leave all rooms.\n     *\n     * @member SensorlabMeasurementsWebsocket#leaveAll\n     */\n    leaveAll() {\n        this.socket.emit('sensor/disconnect/all');\n    }\n\n    /**\n     * Listen to specific emitted measurements.\n     *\n     * @member SensorlabMeasurementsWebsocket#onMeasurements\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     * @param {callback} listener callback\n     */\n    onMeasurements(sensor, type = null, cb) {\n        if (!this._checkConnection()) {\n            return false;\n        }\n\n        this.socket.on(this._getRoomName(sensor, type), cb);\n    }\n\n    /**\n     * Disconnect listener.\n     *\n     * @member SensorlabMeasurementsWebsocket#offMeasurements\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     * @param {callback} connected callback\n     */\n    offMeasurements(sensor, type = null, cb = null) {\n        if (this.socket) {\n            this.socket.off(this._getRoomName(sensor, type), cb);\n        }\n    }\n\n    /**\n     * This message will be emitted if your token doesn't have access to the sensor.\n     *\n     * @member SensorlabMeasurementsWebsocket#onAccessDenied\n     * @param {callback} cb listener callback\n     */\n    onAccessDenied(cb) {\n        if (!this._checkConnection()) {\n            return false;\n        }\n        this.socket.on('sensor/access_denied', function(params) {\n            cb(params.sensor, params.message);\n        });\n    }\n\n    _getRoomName(sensor, type) {\n        let room_name = 'measurements/' + sensor;\n        if (type) {\n            room_name += '/' + type;\n        }\n        return room_name;\n    }\n}","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","module.exports = require(\"fs\");","module.exports = require(\"child_process\");","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n","module.exports = require(\"ws\");","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","import BasicWebsocket from \"./basic\";\n\n/**\n * Work with /alerts namespace.\n */\nexport default class SensorlabAlertsWebsocket extends BasicWebsocket {\n    /**\n     * @constructor SensorlabAlertsWebsocket\n     *\n     * @param {string} websocket_url socket.io url to connect to\n     */\n    constructor(websocket_url = 'http://staging.sensorlab.io') {\n        super(websocket_url);\n        this.namespace = '/alerts';\n    }\n\n    /**\n     * Join room with alerts for specific sensor.\n     * If user has access to the sensor - socket.io will start emitting data for this sensor.\n     * If not - it will emit message that can be catched using onAccessDenied method.\n     *\n     * @member SensorlabAlertsWebsocket#joinSensor\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     */\n    joinSensor(sensor) {\n        this.socket.emit('sensor', { sensor: sensor});\n    }\n\n    /**\n     * Leave room with alerts for specific sensor.\n     *\n     * @member SensorlabAlertsWebsocket#leaveSensor\n     * @param {string} sensor sensor ID\n     */\n    leaveSensor(sensor) {\n        this.socket.emit('sensor/disconnect', { sensor: sensor });\n    }\n\n    /**\n     * Leave all rooms.\n     *\n     * @member SensorlabAlertsWebsocket#leaveAll\n     */\n    leaveAll() {\n        this.socket.emit('sensor/disconnect/all');\n    }\n\n    /**\n     * Listen to specific emitted alerts.\n     *\n     * @member SensorlabAlertsWebsocket#onAlerts\n     * @param {string} sensor sensor ID\n     * @param {callback} listener callback\n     */\n    onAlerts(sensor, cb) {\n        if (!this._checkConnection()) {\n            return false;\n        }\n\n        this.socket.on(this._getRoomName(sensor), cb);\n    }\n\n    /**\n     * Disconnect listener.\n     *\n     * @member SensorlabAlertsWebsocket#offAlerts\n     * @param {string} sensor sensor ID\n     * @param {callback} connected callback\n     */\n    offAlerts(sensor, cb = null) {\n        if (this.socket) {\n            this.socket.off(this._getRoomName(sensor), cb);\n        }\n    }\n\n    /**\n     * This message will be emitted if your token doesn't have access to the sensor.\n     *\n     * @member SensorlabAlertsWebsocket#onAccessDenied\n     * @param {callback} cb listener callback\n     */\n    onAccessDenied(cb) {\n        if (!this._checkConnection()) {\n            return false;\n        }\n        this.socket.on('sensor/access_denied', function(params) {\n            cb(params.sensor, params.message);\n        });\n    }\n\n    _getRoomName(sensor) {\n        let room_name = 'alerts/' + sensor;\n        return room_name;\n    }\n}","import BasicWebsocket from \"./basic\";\n\nlet io = require('socket.io-client');\n\n/**\n * Work with /public namespace.\n */\nexport default class SensorlabPublicWebsocket extends BasicWebsocket {\n    /**\n     * @constructor SensorlabPublicWebsocket\n     *\n     * @param {string} websocket_url socket.io url to connect to\n     */\n    constructor(websocket_url = 'http://staging.sensorlab.io') {\n        super(websocket_url);\n        this.namespace = '/public';\n\n        //we must force a new connection since because this namespace has different authentication method\n        this.force_new = true;\n    }\n\n    /**\n     * Connect to websocket namespace with public api key token.\n     * Promise will resolve if connection is established and reject is there are problems with connection\n     * or authentication\n     *\n     * @member SensorlabPublicWebsocket#connect\n     * @param {string} public_api_key Public Api Key\n     * @returns {Promise}\n     */\n    async connect(public_api_key) {\n        return new Promise((resolve, reject) => {\n            //connect\n            this.socket = io(this.url + this.namespace + '?public_api_key='+public_api_key, {\n                path: '/ws',\n                forceNew: this.force_new,\n            });\n\n            //try to authenticate on connection\n            this.socket.on('connect', () => {\n                this._onConnected();\n                resolve();\n            });\n\n            this.socket.on('connect_error', () => {\n                reject({code: 0, message: 'Connection error'});\n            });\n\n            this.socket.on('error', function (reason) {\n                reject(JSON.parse(reason));\n                //console.error('Unable to connect Socket.IO', reason);\n            });\n\n            //catch disconnect\n            this.socket.on('disconnect', () => {\n                this._onDisconnect();\n            });\n        });\n    }\n\n    /**\n     * Join room with measurement for specific sensor. You can also specify measurement type to listen too.\n     * If user has access to the sensor - socket.io will start emitting data for this sensor.\n     * If not - it will emit message that can be catched using onAccessDenied method.\n     *\n     * @member SensorlabPublicWebsocket#joinSensor\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     */\n    joinSensor(sensor, type = null) {\n        this.socket.emit('sensor', { sensor: sensor, type: type});\n    }\n\n    /**\n     * Leave room with measurements for specific sensor.\n     *\n     * @member SensorlabPublicWebsocket#leaveSensor\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     */\n    leaveSensor(sensor, type = null) {\n        this.socket.emit('sensor/disconnect', { sensor: sensor, type: type});\n    }\n\n    /**\n     * Leave all rooms.\n     *\n     * @member SensorlabPublicWebsocket#leaveAll\n     */\n    leaveAll() {\n        this.socket.emit('sensor/disconnect/all');\n    }\n\n    /**\n     * Listen to specific emitted measurements.\n     *\n     * @member SensorlabPublicWebsocket#onMeasurements\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     * @param {callback} listener callback\n     */\n    onMeasurements(sensor, type = null, cb) {\n        if (!this._checkConnection()) {\n            return false;\n        }\n\n        this.socket.on(this._getRoomName(sensor, type), cb);\n    }\n\n    /**\n     * Disconnect listener.\n     *\n     * @member SensorlabMeasurementsWebsocket#offMeasurements\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     * @param {callback} connected callback\n     */\n    offMeasurements(sensor, type = null, cb = null) {\n        if (this.socket) {\n            this.socket.off(this._getRoomName(sensor, type), cb);\n        }\n    }\n\n    /**\n     * This message will be emitted if your token doesn't have access to the sensor.\n     *\n     * @member SensorlabMeasurementsWebsocket#onAccessDenied\n     * @param {callback} cb listener callback\n     */\n    onAccessDenied(cb) {\n        if (!this._checkConnection()) {\n            return false;\n        }\n        this.socket.on('sensor/access_denied', function(params) {\n            cb(params.sensor, params.message);\n        });\n    }\n\n    _getRoomName(sensor, type) {\n        let room_name = 'measurements/' + sensor;\n        if (type) {\n            room_name += '/' + type;\n        }\n        return room_name;\n    }\n}"],"sourceRoot":""}