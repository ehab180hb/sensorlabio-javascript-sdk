{"version":3,"sources":["webpack://SensorlabSDK/webpack/universalModuleDefinition","webpack://SensorlabSDK/webpack/bootstrap","webpack://SensorlabSDK/./node_modules/axios/lib/utils.js","webpack://SensorlabSDK/./node_modules/debug/src/index.js","webpack://SensorlabSDK/./src/responses/errors/basic.js","webpack://SensorlabSDK/./node_modules/component-emitter/index.js","webpack://SensorlabSDK/./node_modules/engine.io-parser/lib/index.js","webpack://SensorlabSDK/./node_modules/parseqs/index.js","webpack://SensorlabSDK/./node_modules/component-inherit/index.js","webpack://SensorlabSDK/./src/models/measurement.js","webpack://SensorlabSDK/./node_modules/axios/lib/defaults.js","webpack://SensorlabSDK/./node_modules/axios/lib/core/createError.js","webpack://SensorlabSDK/external \"http\"","webpack://SensorlabSDK/external \"https\"","webpack://SensorlabSDK/external \"url\"","webpack://SensorlabSDK/./src/websockets/basic.js","webpack://SensorlabSDK/./node_modules/socket.io-parser/index.js","webpack://SensorlabSDK/./node_modules/xmlhttprequest-ssl/lib/XMLHttpRequest.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/transport.js","webpack://SensorlabSDK/./src/models/application.js","webpack://SensorlabSDK/./src/models/sensor.js","webpack://SensorlabSDK/./src/responses/measurements.js","webpack://SensorlabSDK/./src/models/sensor_alert.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/bind.js","webpack://SensorlabSDK/./node_modules/axios/lib/core/settle.js","webpack://SensorlabSDK/./node_modules/axios/lib/core/enhanceError.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/buildURL.js","webpack://SensorlabSDK/./node_modules/follow-redirects/index.js","webpack://SensorlabSDK/./node_modules/axios/lib/cancel/isCancel.js","webpack://SensorlabSDK/./node_modules/axios/lib/cancel/Cancel.js","webpack://SensorlabSDK/./node_modules/socket.io-client/lib/index.js","webpack://SensorlabSDK/./node_modules/parseuri/index.js","webpack://SensorlabSDK/./node_modules/socket.io-parser/node_modules/isarray/index.js","webpack://SensorlabSDK/./node_modules/socket.io-parser/is-buffer.js","webpack://SensorlabSDK/./node_modules/socket.io-client/lib/manager.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/transports/index.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/transports/polling.js","webpack://SensorlabSDK/./node_modules/has-binary2/index.js","webpack://SensorlabSDK/./node_modules/yeast/index.js","webpack://SensorlabSDK/./node_modules/indexof/index.js","webpack://SensorlabSDK/./node_modules/socket.io-client/lib/socket.js","webpack://SensorlabSDK/./node_modules/socket.io-client/lib/on.js","webpack://SensorlabSDK/./node_modules/component-bind/index.js","webpack://SensorlabSDK/./src/index.js","webpack://SensorlabSDK/./src/api.js","webpack://SensorlabSDK/./src/endpoints/users.js","webpack://SensorlabSDK/./src/endpoints/auth.js","webpack://SensorlabSDK/./src/models/user.js","webpack://SensorlabSDK/./src/models/application_token.js","webpack://SensorlabSDK/./src/endpoints/applications.js","webpack://SensorlabSDK/./src/responses/applications.js","webpack://SensorlabSDK/./src/endpoints/profile.js","webpack://SensorlabSDK/./src/models/profile.js","webpack://SensorlabSDK/./src/endpoints/sensors.js","webpack://SensorlabSDK/./src/responses/sensors.js","webpack://SensorlabSDK/./src/endpoints/measurements.js","webpack://SensorlabSDK/./src/responses/api.js","webpack://SensorlabSDK/./src/responses/errors/auth.js","webpack://SensorlabSDK/./src/responses/errors/notfound.js","webpack://SensorlabSDK/./src/responses/errors/validation.js","webpack://SensorlabSDK/./src/responses/errors/connection_refused.js","webpack://SensorlabSDK/./src/responses/errors/internal.js","webpack://SensorlabSDK/./src/endpoints/public.js","webpack://SensorlabSDK/./src/endpoints/sensor_alerts.js","webpack://SensorlabSDK/./src/responses/sensor_alerts.js","webpack://SensorlabSDK/./src/endpoints/alerts.js","webpack://SensorlabSDK/./src/responses/alerts.js","webpack://SensorlabSDK/./src/models/alert.js","webpack://SensorlabSDK/./src/responses/errors/forbidden.js","webpack://SensorlabSDK/./node_modules/axios/index.js","webpack://SensorlabSDK/./node_modules/axios/lib/axios.js","webpack://SensorlabSDK/./node_modules/is-buffer/index.js","webpack://SensorlabSDK/./node_modules/axios/lib/core/Axios.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://SensorlabSDK/./node_modules/axios/lib/adapters/xhr.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/btoa.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/cookies.js","webpack://SensorlabSDK/./node_modules/axios/lib/adapters/http.js","webpack://SensorlabSDK/external \"assert\"","webpack://SensorlabSDK/external \"stream\"","webpack://SensorlabSDK/./node_modules/debug/src/browser.js","webpack://SensorlabSDK/./node_modules/debug/src/node.js","webpack://SensorlabSDK/external \"tty\"","webpack://SensorlabSDK/external \"util\"","webpack://SensorlabSDK/./node_modules/debug/src/debug.js","webpack://SensorlabSDK/./node_modules/ms/index.js","webpack://SensorlabSDK/./node_modules/supports-color/index.js","webpack://SensorlabSDK/external \"os\"","webpack://SensorlabSDK/./node_modules/has-flag/index.js","webpack://SensorlabSDK/external \"zlib\"","webpack://SensorlabSDK/./node_modules/axios/lib/core/InterceptorManager.js","webpack://SensorlabSDK/./node_modules/axios/lib/core/dispatchRequest.js","webpack://SensorlabSDK/./node_modules/axios/lib/core/transformData.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/combineURLs.js","webpack://SensorlabSDK/./node_modules/axios/lib/cancel/CancelToken.js","webpack://SensorlabSDK/./node_modules/axios/lib/helpers/spread.js","webpack://SensorlabSDK/./src/websockets.js","webpack://SensorlabSDK/./src/websockets/measurements.js","webpack://SensorlabSDK/./node_modules/socket.io-client/lib/url.js","webpack://SensorlabSDK/./node_modules/socket.io-parser/binary.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/index.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/socket.js","webpack://SensorlabSDK/external \"fs\"","webpack://SensorlabSDK/external \"child_process\"","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack://SensorlabSDK/./node_modules/engine.io-parser/lib/utf8.js","webpack://SensorlabSDK/(webpack)/buildin/module.js","webpack://SensorlabSDK/./node_modules/has-binary2/node_modules/isarray/index.js","webpack://SensorlabSDK/./node_modules/after/index.js","webpack://SensorlabSDK/./node_modules/engine.io-parser/lib/keys.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack://SensorlabSDK/./node_modules/engine.io-client/lib/transports/websocket.js","webpack://SensorlabSDK/external \"ws\"","webpack://SensorlabSDK/./node_modules/to-array/index.js","webpack://SensorlabSDK/./node_modules/backo2/index.js","webpack://SensorlabSDK/./src/websockets/alerts.js","webpack://SensorlabSDK/./src/websockets/public.js"],"names":["root","factory","exports","module","require","e","define","amd","global","__WEBPACK_EXTERNAL_MODULE__115__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isBuffer","toString","isArray","val","isObject","isFunction","forEach","obj","fn","length","isArrayBuffer","isFormData","FormData","isArrayBufferView","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","window","document","merge","result","assignValue","arguments","extend","a","b","thisArg","trim","str","replace","process","type","ApiErrorBasicException","status","message","undefined","errors","_classCallCheck","this","Emitter","mixin","on","addEventListener","event","_callbacks","push","once","off","apply","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","slice","len","listeners","hasListeners","utf8","hasBinary","after","keys","protocol","packets","open","close","ping","pong","upgrade","noop","packetslist","err","data","encodeBuffer","packet","supportsBinary","callback","encodeBase64Packet","typeBuffer","Buffer","concat","map","ary","each","done","Array","next","error","msg","bufferToString","String","fromCharCode","arrayBufferToBuffer","array","Uint8Array","byteLength","offset","byteOffset","encodeOneBinaryPacket","doneCallback","encodePacket","sizeBuffer","encodingLength","parseInt","string","buf","writeUInt8","charCodeAt","stringToBuffer","utf8encode","encoded","encode","strict","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","intArray","abv","encodePayload","encodePayloadAsBinary","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","chr","bufferTail","buffers","strLen","msgLength","total","encodeURIComponent","qs","qry","pairs","split","pair","decodeURIComponent","constructor","Measurement","api","id","timestamp","sensors","one","sensor_id","utils","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","headers","defaults","adapter","XMLHttpRequest","getDefaultAdapter","transformRequest","JSON","stringify","transformResponse","parse","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","common","Accept","method","enhanceError","config","code","request","response","Error","io","BasicWebsocket","websocket_url","url","socket","is_connected","is_authenticated","namespace","force_new","token","Promise","resolve","reject","_this","path","forceNew","_onConnected","reason","_onDisconnect","_checkConnection","disconnect","debug","binary","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","payload","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","tryParse","isPayloadValid","decodeString","base64","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","fs","Url","spawn","opts","self","http","https","settings","disableHeaderCheck","defaultHeaders","User-Agent","assign","forbiddenRequestHeaders","forbiddenRequestMethods","sendFlag","errorFlag","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","readyState","onreadystatechange","responseText","responseXML","statusText","async","user","password","abort","indexOf","isAllowedHttpMethod","setState","setDisableHeaderCheck","state","setRequestHeader","header","toLowerCase","isAllowedHttpHeader","console","warn","getResponseHeader","getAllResponseHeaders","getRequestHeader","send","host","ssl","local","hostname","readFile","pathname","handleError","readFileSync","port","uri","search","authBuf","agent","options","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","doRequest","dispatchEvent","responseHandler","resp","statusCode","location","newOptions","errorHandler","end","setEncoding","chunk","write","contentFile","pid","syncFile","writeFileSync","execString","syncProc","argv","existsSync","stdin","unlinkSync","match","errorObj","stack","filter","ev","parser","Transport","secure","query","timestampParam","timestampRequests","enablesXDR","forceNode","extraHeaders","localAddress","onError","desc","description","doOpen","doClose","onClose","onOpen","writable","onData","onPacket","Application","created","public_api_key","private_api_key","Sensor","imei","application","batteryCharge","isBatteryCharging","isOnline","is_public","measurements","list","last","MeasurementsResponse","prev","measurement_data","SensorAlert","threshold_type","measurement_type","threshold_value","createError","params","paramsSerializer","serializedParams","parts","v","toISOString","assert","Writable","SAFE_METHODS","GET","HEAD","OPTIONS","TRACE","eventHandlers","RedirectableRequest","responseCallback","_options","_redirectCount","_redirects","_requestBodyLength","_requestBodyBuffers","_onNativeResponse","_processResponse","searchPos","_performRequest","wrap","protocols","maxRedirects","maxBodyLength","nativeProtocols","scheme","nativeProtocol","wrappedProtocol","equal","arg","_redirectable","encoding","_currentRequest","currentRequest","setHeader","removeHeader","agents","_currentUrl","format","_isRedirect","requestBodyBuffers","writeNext","pop","trackRedirects","followRedirects","test","redirectUrl","responseUrl","redirects","__CANCEL__","Cancel","Manager","lookup","cache","managers","parsed","source","sameNamespace","nsps","multiplex","connect","Socket","re","src","exec","authority","ipv6uri","arr","withNativeBuffer","withNativeArrayBuffer","eio","Backoff","has","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","connecting","lastPing","packetBuffer","_parser","encoder","decoder","autoConnect","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","index","encodedPackets","processPacketQueue","shift","subsLength","reset","onclose","delay","duration","onreconnect","attempt","XHR","JSONP","websocket","polling","xd","xs","jsonp","isSSL","xdomain","xscheme","forceJSONP","parseqs","inherit","yeast","Polling","hasXHR2","responseType","forceBase64","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","b64","withNativeBlob","Blob","withNativeFile","File","toJSON","alphabet","seed","num","Math","floor","now","decoded","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","subEvents","compress","onpacket","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","SensorlabApi","SensorlabWebsockets","axios","api_url","_rest_api_url","_users","UsersEndpoints","auth","AuthEndpoints","profile","ProfileEndpoints","applications","ApplicationsEndpoints","SensorsEndpoints","sensor_alerts","SensorAlertsEndpoints","alerts","AlertsEndpoints","MeasurementsEndpoints","public","PublicEndpoints","jwt_token","endpoint_url","use_jwt_token","request_url","_context","t0","success_cb","ApiErrorConnectionRefusedException","ApiResponse","success","ApiErrorUnauthorizedException","ApiErrorForbiddenException","ApiErrorNotFoundException","ApiErrorValidationException","ApiErrorInternalException","email","password_check","_makeApiRequest","_prepareApiResponse","verification_token","_successUserResponse","setToken","_successApplicationResponse","User","ApplicationToken","page","sort","_successApplicationsListResponse","application_id","_successCreateApplicationResponse","ApplicationsResponse","pages","count","application_data","_successProfileResult","old_password","new_password","new_password_check","Profile","change_password","online_status","battery_charge_min","battery_charge_max","_successSensorsListResponse","_successSensorResponse","SensorsResponse","sensor_data","sensor","timestamp_start","timestamp_stop","_successMeasurementsListResponse","_successMeasurementResponse","_successSensorAlertsListResponse","alert","_successSensorAlertResponse","_successCreateSensorAlertResponse","SensorAlertsResponse","sensor_alert","alert_data","_successSensorListResponse","AlertsResponse","Alert","measurement","threshold","Axios","createInstance","defaultConfig","context","instance","instanceConfig","CancelToken","isCancel","all","promises","spread","default","readFloatLE","isSlowBuffer","_isBuffer","InterceptorManager","dispatchRequest","interceptors","chain","promise","interceptor","fulfilled","rejected","then","normalizedName","toUpperCase","settle","buildURL","parseHeaders","isURLSameOrigin","btoa","requestData","requestHeaders","loadEvent","xDomain","XDomainRequest","onprogress","ontimeout","username","Authorization","responseURL","responseHeaders","cookies","xsrfValue","withCredentials","read","onDownloadProgress","onUploadProgress","upload","cancelToken","cancel","ignoreDuplicateOf","line","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","hash","requestURL","chars","E","input","block","charCode","output","idx","expires","domain","cookie","toGMTString","RegExp","remove","httpFollow","httpsFollow","zlib","pkg","version","urlAuth","isHttps","httpsAgent","httpAgent","socketPath","transport","proxy","proxyEnv","proxyUrl","env","parsedProxyUrl","proxyUrlAuth","req","res","aborted","stream","createUnzip","lastRequest","statusMessage","responseBuffer","responseData","load","storage","DEBUG","log","Function","formatArgs","useColors","humanize","diff","color","lastC","save","namespaces","removeItem","documentElement","style","WebkitAppearance","firebug","exception","table","$1","chrome","localStorage","localstorage","colors","formatters","j","enable","tty","util","init","inspectOpts","stderr","colorCode","prefix","hideDate","Boolean","isatty","fd","supportsColor","level","reduce","prop","_","k","inspect","O","createDebug","prevTime","enabled","curr","ms","coerce","formatter","abs","selectColor","instances","disable","names","skips","h","y","plural","ceil","parseFloat","isNaN","long","fmtLong","round","fmtShort","os","hasFlag","forceColor","getSupportLevel","hasBasic","has256","has16m","translateLevel","isTTY","platform","osRelease","release","versions","node","some","sign","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM_VERSION","TERM_PROGRAM","TERM","FORCE_COLOR","stdout","flag","startsWith","pos","terminatorPos","handlers","use","eject","transformData","isAbsoluteURL","combineURLs","throwIfCancellationRequested","throwIfRequested","baseURL","fns","relativeURL","executor","TypeError","resolvePromise","SensorlabMeasurementsWebsocket","SensorlabAlertsWebsocket","SensorlabPublicWebsocket","_possibleConstructorReturn","__proto__","getPrototypeOf","_getRoomName","room_name","parseuri","loc","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","FileReader","onload","readAsArrayBuffer","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","freeGlobal","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","clone","EIO","requestTimeout","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","empty","Request","isBinary","unloadHandler","requests","sendXhr","pollXhr","xhr","hasXDR","onLoad","contentType","requestsCount","onSuccess","fromError","attachEvent","__WEBPACK_AMD_DEFINE_RESULT__","freeExports","byteArray","byteCount","byteIndex","stringFromCharCode","ucs2decode","extra","counter","checkScalarValue","codePoint","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","codePoints","byteString","tmp","ucs2encode","webpackPolyfill","deprecate","paths","children","err_cb","bail","JSONPPolling","rNewline","rEscapedNewline","___eio","script","parentNode","removeChild","form","iframe","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","area","iframeId","className","position","top","left","target","complete","initIframe","html","action","submit","NodeWebSocket","BrowserWebSocket","WebSocket","MozWebSocket","WS","usingBrowserWebSocket","check","ws","supports","addEventListeners","onmessage","factor","pow","rand","random","deviation","_this2"],"mappings":"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","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory((function webpackLoadOptionalExternalModule() { try { return require(\"ws\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"ws\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SensorlabSDK\"] = factory((function webpackLoadOptionalExternalModule() { try { return require(\"ws\"); } catch(e) {} }()));\n\telse\n\t\troot[\"SensorlabSDK\"] = factory(root[\"ws\"]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__115__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","'use strict';\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * @classdesc SDK will throw this basic exception on other status errors.\n */\nexport default class ApiErrorBasicException {\n    /**\n     * @constructor ApiErrorBasicException\n     *\n     * @param {number} status - HTTP status of response.\n     * @param {string} message - error message\n     * @param {array} errors - validation errors\n     */\n    constructor(status, message = null, errors = []) {\n        /**\n         * HTTP status of response\n         *\n         * @member ApiErrorBasicException#status\n         * @type {number}\n         */\n        this.status = status;\n\n        /**\n         * Response/error message\n         *\n         * @member ApiErrorBasicException#message\n         * @type {string}\n         */\n        this.message = message;\n\n        /**\n         * Validation errors.\n         *\n         * @member ApiErrorBasicException#errors\n         * @type {Array}\n         */\n        this.errors = errors;\n    }\n}","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\n * Module dependencies.\n */\n\nvar utf8 = require('./utf8');\nvar hasBinary = require('has-binary2');\nvar after = require('after');\nvar keys = require('./keys');\n\n/**\n * Current protocol version.\n */\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  if (Buffer.isBuffer(packet.data)) {\n    return encodeBuffer(packet, supportsBinary, callback);\n  } else if (packet.data && (packet.data.buffer || packet.data) instanceof ArrayBuffer) {\n    packet.data = arrayBufferToBuffer(packet.data);\n    return encodeBuffer(packet, supportsBinary, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n};\n\n/**\n * Encode Buffer data\n */\n\nfunction encodeBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var typeBuffer = new Buffer(1);\n  typeBuffer[0] = packets[packet.type];\n  return callback(Buffer.concat([typeBuffer, data]));\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback){\n  if (!Buffer.isBuffer(packet.data)) {\n    packet.data = arrayBufferToBuffer(packet.data);\n  }\n\n  var message = 'b' + packets[packet.type];\n  message += packet.data.toString('base64');\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Data also available as an ArrayBuffer if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n\n  var type;\n\n  // String data\n  if (typeof data === 'string') {\n\n    type = data.charAt(0);\n\n    if (type === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  // Binary data\n  if (binaryType === 'arraybuffer') {\n    // wrap Buffer/ArrayBuffer data into an Uint8Array\n    var intArray = new Uint8Array(data);\n    type = intArray[0];\n    return { type: packetslist[type], data: intArray.buffer.slice(1) };\n  }\n\n  if (data instanceof ArrayBuffer) {\n    data = arrayBufferToBuffer(data);\n  }\n  type = data[0];\n  return { type: packetslist[type], data: data.slice(1) };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string.\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  var data = new Buffer(msg.substr(1), 'base64');\n  if (binaryType === 'arraybuffer') {\n    var abv = new Uint8Array(data.length);\n    for (var i = 0; i < abv.length; i++){\n      abv[i] = data[i];\n    }\n    data = abv.buffer;\n  }\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  if (supportsBinary && hasBinary(packets)) {\n    return exports.encodePayloadAsBinary(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\nfunction setLengthHeader(message) {\n  return message.length + ':' + message;\n}\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  for (var i = 0; i < ary.length; i++) {\n    each(ary[i], function(error, msg) {\n      result[i] = msg;\n      next(error, result);\n    });\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg, packet;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var more = callback(packet, i + n, l);\n      if (false === more) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n *\n * Converts a buffer to a utf8.js encoded string\n *\n * @api private\n */\n\nfunction bufferToString(buffer) {\n  var str = '';\n  for (var i = 0, l = buffer.length; i < l; i++) {\n    str += String.fromCharCode(buffer[i]);\n  }\n  return str;\n}\n\n/**\n *\n * Converts a utf8.js encoded string to a buffer\n *\n * @api private\n */\n\nfunction stringToBuffer(string) {\n  var buf = new Buffer(string.length);\n  for (var i = 0, l = string.length; i < l; i++) {\n    buf.writeUInt8(string.charCodeAt(i), i);\n  }\n  return buf;\n}\n\n/**\n *\n * Converts an ArrayBuffer to a Buffer\n *\n * @api private\n */\n\nfunction arrayBufferToBuffer(data) {\n  // data is either an ArrayBuffer or ArrayBufferView.\n  var array = new Uint8Array(data.buffer || data);\n  var length = data.byteLength || data.length;\n  var offset = data.byteOffset || 0;\n  var buffer = new Buffer(length);\n\n  for (var i = 0; i < length; i++) {\n    buffer[i] = array[offset + i];\n  }\n  return buffer;\n}\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {Buffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsBinary = function (packets, callback) {\n  if (!packets.length) {\n    return callback(new Buffer(0));\n  }\n\n  map(packets, encodeOneBinaryPacket, function(err, results) {\n    return callback(Buffer.concat(results));\n  });\n};\n\nfunction encodeOneBinaryPacket(p, doneCallback) {\n\n  function onBinaryPacketEncode(packet) {\n\n    var encodingLength = '' + packet.length;\n    var sizeBuffer;\n\n    if (typeof packet === 'string') {\n      sizeBuffer = new Buffer(encodingLength.length + 2);\n      sizeBuffer[0] = 0; // is a string (not true binary = 0)\n      for (var i = 0; i < encodingLength.length; i++) {\n        sizeBuffer[i + 1] = parseInt(encodingLength[i], 10);\n      }\n      sizeBuffer[sizeBuffer.length - 1] = 255;\n      return doneCallback(null, Buffer.concat([sizeBuffer, stringToBuffer(packet)]));\n    }\n\n    sizeBuffer = new Buffer(encodingLength.length + 2);\n    sizeBuffer[0] = 1; // is binary (true binary = 1)\n    for (var i = 0; i < encodingLength.length; i++) {\n      sizeBuffer[i + 1] = parseInt(encodingLength[i], 10);\n    }\n    sizeBuffer[sizeBuffer.length - 1] = 255;\n\n    doneCallback(null, Buffer.concat([sizeBuffer, packet]));\n  }\n\n  exports.encodePacket(p, true, true, onBinaryPacketEncode);\n\n}\n\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n\n * @param {Buffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n  var i;\n\n  while (bufferTail.length > 0) {\n    var strLen = '';\n    var isString = bufferTail[0] === 0;\n    for (i = 1; ; i++) {\n      if (bufferTail[i] === 255)  break;\n      // 310 = char length of Number.MAX_VALUE\n      if (strLen.length > 310) {\n        return callback(err, 0, 1);\n      }\n      strLen += '' + bufferTail[i];\n    }\n    bufferTail = bufferTail.slice(strLen.length + 1);\n\n    var msgLength = parseInt(strLen, 10);\n\n    var msg = bufferTail.slice(1, msgLength + 1);\n    if (isString) msg = bufferToString(msg);\n    buffers.push(msg);\n    bufferTail = bufferTail.slice(msgLength + 1);\n  }\n\n  var total = buffers.length;\n  for (i = 0; i < total; i++) {\n    var buffer = buffers[i];\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  }\n};\n","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","/**\n * @classdesc Measurement model\n */\nexport default class Measurement {\n    /**\n     * @constructor Measurement\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Measurement ID.\n         *\n         * @member Measurement#id\n         * @type {string}\n         */\n        this.id = data.id;\n\n        /**\n         * Measurement type.\n         *\n         * @member Measurement#type\n         * @type {string}\n         */\n        this.type = data.type;\n\n        /**\n         * Measurement values array.\n         *\n         * @member Measurement#value\n         * @type {array}\n         */\n        this.value = data.value;\n\n        /**\n         * Created date.\n         *\n         * @member Measurement#created\n         * @type {Date}\n         */\n        this.timestamp = data.timestamp;\n    }\n\n    /**\n     * Get sensor.\n     *\n     * @method Measurement#sensor\n     * @returns {Promise.<ApiResponse>}\n     */\n    async sensor() {\n        return this.api.sensors.one(this.sensor_id);\n    }\n}","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"url\");","let io = require('socket.io-client');\n\n/**\n * Basic websockets class\n */\nexport default class BasicWebsocket {\n    /**\n     * @constructor BasicWebsocket\n     *\n     * @param {string} websocket_url websockets url to connect to\n     */\n    constructor(websocket_url = 'http://staging.sensorlab.io') {\n        this.url = websocket_url;\n        this.socket = null;\n\n        this.is_connected = false;\n        this.is_authenticated = false;\n        this.namespace = '/';\n\n        this.force_new = false;\n    }\n\n    /**\n     * Connect to websocket namespace with authentication token.\n     * Promise will resolve if connection is established and reject is there are problems with connection\n     * or authentication\n     *\n     * @member BasicWebsocket#connect\n     * @param {string} token\n     * @returns {Promise}\n     */\n    async connect(token) {\n        return new Promise((resolve, reject) => {\n            //connect\n            this.socket = io(this.url + this.namespace + '?token='+token, {\n                path: '/ws',\n                forceNew: this.force_new\n            });\n\n            //try to authenticate on connection\n            this.socket.on('connect', () => {\n                this._onConnected();\n                resolve();\n            });\n\n            this.socket.on('connect_error', () => {\n                reject({code: 0, message: 'Connection error'});\n            });\n\n            this.socket.on('error', function (reason) {\n                reject(JSON.parse(reason));\n                //console.error('Unable to connect Socket.IO', reason);\n            });\n\n            //catch disconnect\n            this.socket.on('disconnect', () => {\n                this._onDisconnect();\n            });\n        });\n    }\n\n    /**\n     * Disconnect from websocket\n     *\n     * @member BasicWebsocket#disconnect\n     */\n    disconnect() {\n        if (!this._checkConnection()) {\n            return false;\n        }\n        this.socket.disconnect();\n    }\n\n    _onConnected() {\n        this.is_connected = true;\n        this.is_authenticated = true;\n    }\n\n    _onDisconnect() {\n        this.is_connected = false;\n        this.is_authenticated = false;\n    }\n\n    _checkConnection() {\n        if (this.is_authenticated && this.is_connected) {\n            return true;\n        }\n        return false;\n    }\n}","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","/**\n * Wrapper for built-in http.js to emulate the browser XMLHttpRequest object.\n *\n * This can be used with JS designed for browsers to improve reuse of code and\n * allow the use of existing libraries.\n *\n * Usage: include(\"XMLHttpRequest.js\") and use XMLHttpRequest per W3C specs.\n *\n * @author Dan DeFelippi <dan@driverdan.com>\n * @contributor David Ellis <d.f.ellis@ieee.org>\n * @license MIT\n */\n\nvar fs = require('fs');\nvar Url = require('url');\nvar spawn = require('child_process').spawn;\n\n/**\n * Module exports.\n */\n\nmodule.exports = XMLHttpRequest;\n\n// backwards-compat\nXMLHttpRequest.XMLHttpRequest = XMLHttpRequest;\n\n/**\n * `XMLHttpRequest` constructor.\n *\n * Supported options for the `opts` object are:\n *\n *  - `agent`: An http.Agent instance; http.globalAgent may be used; if 'undefined', agent usage is disabled\n *\n * @param {Object} opts optional \"options\" object\n */\n\nfunction XMLHttpRequest(opts) {\n  \"use strict\";\n\n  opts = opts || {};\n\n  /**\n   * Private variables\n   */\n  var self = this;\n  var http = require('http');\n  var https = require('https');\n\n  // Holds http.js objects\n  var request;\n  var response;\n\n  // Request settings\n  var settings = {};\n\n  // Disable header blacklist.\n  // Not part of XHR specs.\n  var disableHeaderCheck = false;\n\n  // Set some default headers\n  var defaultHeaders = {\n    \"User-Agent\": \"node-XMLHttpRequest\",\n    \"Accept\": \"*/*\"\n  };\n\n  var headers = Object.assign({}, defaultHeaders);\n\n  // These headers are not user setable.\n  // The following are allowed but banned in the spec:\n  // * user-agent\n  var forbiddenRequestHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"content-transfer-encoding\",\n    \"cookie\",\n    \"cookie2\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"via\"\n  ];\n\n  // These request methods are not allowed\n  var forbiddenRequestMethods = [\n    \"TRACE\",\n    \"TRACK\",\n    \"CONNECT\"\n  ];\n\n  // Send flag\n  var sendFlag = false;\n  // Error flag, used when errors occur or abort is called\n  var errorFlag = false;\n\n  // Event listeners\n  var listeners = {};\n\n  /**\n   * Constants\n   */\n\n  this.UNSENT = 0;\n  this.OPENED = 1;\n  this.HEADERS_RECEIVED = 2;\n  this.LOADING = 3;\n  this.DONE = 4;\n\n  /**\n   * Public vars\n   */\n\n  // Current state\n  this.readyState = this.UNSENT;\n\n  // default ready state change handler in case one is not set or is set late\n  this.onreadystatechange = null;\n\n  // Result & response\n  this.responseText = \"\";\n  this.responseXML = \"\";\n  this.status = null;\n  this.statusText = null;\n\n  /**\n   * Private methods\n   */\n\n  /**\n   * Check if the specified header is allowed.\n   *\n   * @param string header Header to validate\n   * @return boolean False if not allowed, otherwise true\n   */\n  var isAllowedHttpHeader = function(header) {\n    return disableHeaderCheck || (header && forbiddenRequestHeaders.indexOf(header.toLowerCase()) === -1);\n  };\n\n  /**\n   * Check if the specified method is allowed.\n   *\n   * @param string method Request method to validate\n   * @return boolean False if not allowed, otherwise true\n   */\n  var isAllowedHttpMethod = function(method) {\n    return (method && forbiddenRequestMethods.indexOf(method) === -1);\n  };\n\n  /**\n   * Public methods\n   */\n\n  /**\n   * Open the connection. Currently supports local server requests.\n   *\n   * @param string method Connection method (eg GET, POST)\n   * @param string url URL for the connection.\n   * @param boolean async Asynchronous connection. Default is true.\n   * @param string user Username for basic authentication (optional)\n   * @param string password Password for basic authentication (optional)\n   */\n  this.open = function(method, url, async, user, password) {\n    this.abort();\n    errorFlag = false;\n\n    // Check for valid request method\n    if (!isAllowedHttpMethod(method)) {\n      throw \"SecurityError: Request method not allowed\";\n    }\n\n    settings = {\n      \"method\": method,\n      \"url\": url.toString(),\n      \"async\": (typeof async !== \"boolean\" ? true : async),\n      \"user\": user || null,\n      \"password\": password || null\n    };\n\n    setState(this.OPENED);\n  };\n\n  /**\n   * Disables or enables isAllowedHttpHeader() check the request. Enabled by default.\n   * This does not conform to the W3C spec.\n   *\n   * @param boolean state Enable or disable header checking.\n   */\n  this.setDisableHeaderCheck = function(state) {\n    disableHeaderCheck = state;\n  };\n\n  /**\n   * Sets a header for the request.\n   *\n   * @param string header Header name\n   * @param string value Header value\n   * @return boolean Header added\n   */\n  this.setRequestHeader = function(header, value) {\n    if (this.readyState != this.OPENED) {\n      throw \"INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN\";\n      return false;\n    }\n    if (!isAllowedHttpHeader(header)) {\n      console.warn('Refused to set unsafe header \"' + header + '\"');\n      return false;\n    }\n    if (sendFlag) {\n      throw \"INVALID_STATE_ERR: send flag is true\";\n      return false;\n    }\n    headers[header] = value;\n    return true;\n  };\n\n  /**\n   * Gets a header from the server response.\n   *\n   * @param string header Name of header to get.\n   * @return string Text of the header or null if it doesn't exist.\n   */\n  this.getResponseHeader = function(header) {\n    if (typeof header === \"string\"\n      && this.readyState > this.OPENED\n      && response.headers[header.toLowerCase()]\n      && !errorFlag\n    ) {\n      return response.headers[header.toLowerCase()];\n    }\n\n    return null;\n  };\n\n  /**\n   * Gets all the response headers.\n   *\n   * @return string A string with all response headers separated by CR+LF\n   */\n  this.getAllResponseHeaders = function() {\n    if (this.readyState < this.HEADERS_RECEIVED || errorFlag) {\n      return \"\";\n    }\n    var result = \"\";\n\n    for (var i in response.headers) {\n      // Cookie headers are excluded\n      if (i !== \"set-cookie\" && i !== \"set-cookie2\") {\n        result += i + \": \" + response.headers[i] + \"\\r\\n\";\n      }\n    }\n    return result.substr(0, result.length - 2);\n  };\n\n  /**\n   * Gets a request header\n   *\n   * @param string name Name of header to get\n   * @return string Returns the request header or empty string if not set\n   */\n  this.getRequestHeader = function(name) {\n    // @TODO Make this case insensitive\n    if (typeof name === \"string\" && headers[name]) {\n      return headers[name];\n    }\n\n    return \"\";\n  };\n\n  /**\n   * Sends the request to the server.\n   *\n   * @param string data Optional data to send as request body.\n   */\n  this.send = function(data) {\n    if (this.readyState != this.OPENED) {\n      throw \"INVALID_STATE_ERR: connection must be opened before send() is called\";\n    }\n\n    if (sendFlag) {\n      throw \"INVALID_STATE_ERR: send has already been called\";\n    }\n\n    var ssl = false, local = false;\n    var url = Url.parse(settings.url);\n    var host;\n    // Determine the server\n    switch (url.protocol) {\n      case 'https:':\n        ssl = true;\n        // SSL & non-SSL both need host, no break here.\n      case 'http:':\n        host = url.hostname;\n        break;\n\n      case 'file:':\n        local = true;\n        break;\n\n      case undefined:\n      case '':\n        host = \"localhost\";\n        break;\n\n      default:\n        throw \"Protocol not supported.\";\n    }\n\n    // Load files off the local filesystem (file://)\n    if (local) {\n      if (settings.method !== \"GET\") {\n        throw \"XMLHttpRequest: Only GET method is supported\";\n      }\n\n      if (settings.async) {\n        fs.readFile(url.pathname, 'utf8', function(error, data) {\n          if (error) {\n            self.handleError(error);\n          } else {\n            self.status = 200;\n            self.responseText = data;\n            setState(self.DONE);\n          }\n        });\n      } else {\n        try {\n          this.responseText = fs.readFileSync(url.pathname, 'utf8');\n          this.status = 200;\n          setState(self.DONE);\n        } catch(e) {\n          this.handleError(e);\n        }\n      }\n\n      return;\n    }\n\n    // Default to port 80. If accessing localhost on another port be sure\n    // to use http://localhost:port/path\n    var port = url.port || (ssl ? 443 : 80);\n    // Add query string if one is used\n    var uri = url.pathname + (url.search ? url.search : '');\n\n    // Set the Host header or the server may reject the request\n    headers[\"Host\"] = host;\n    if (!((ssl && port === 443) || port === 80)) {\n      headers[\"Host\"] += ':' + url.port;\n    }\n\n    // Set Basic Auth if necessary\n    if (settings.user) {\n      if (typeof settings.password == \"undefined\") {\n        settings.password = \"\";\n      }\n      var authBuf = new Buffer(settings.user + \":\" + settings.password);\n      headers[\"Authorization\"] = \"Basic \" + authBuf.toString(\"base64\");\n    }\n\n    // Set content length header\n    if (settings.method === \"GET\" || settings.method === \"HEAD\") {\n      data = null;\n    } else if (data) {\n      headers[\"Content-Length\"] = Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data);\n\n      if (!headers[\"Content-Type\"]) {\n        headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n      }\n    } else if (settings.method === \"POST\") {\n      // For a post with no data set Content-Length: 0.\n      // This is required by buggy servers that don't meet the specs.\n      headers[\"Content-Length\"] = 0;\n    }\n\n    var agent = opts.agent || false;\n    var options = {\n      host: host,\n      port: port,\n      path: uri,\n      method: settings.method,\n      headers: headers,\n      agent: agent\n    };\n\n    if (ssl) {\n      options.pfx = opts.pfx;\n      options.key = opts.key;\n      options.passphrase = opts.passphrase;\n      options.cert = opts.cert;\n      options.ca = opts.ca;\n      options.ciphers = opts.ciphers;\n      options.rejectUnauthorized = opts.rejectUnauthorized;\n    }\n\n    // Reset error flag\n    errorFlag = false;\n\n    // Handle async requests\n    if (settings.async) {\n      // Use the proper protocol\n      var doRequest = ssl ? https.request : http.request;\n\n      // Request is being sent, set send flag\n      sendFlag = true;\n\n      // As per spec, this is called here for historical reasons.\n      self.dispatchEvent(\"readystatechange\");\n\n      // Handler for the response\n      var responseHandler = function(resp) {\n        // Set response var to the response we got back\n        // This is so it remains accessable outside this scope\n        response = resp;\n        // Check for redirect\n        // @TODO Prevent looped redirects\n        if (response.statusCode === 302 || response.statusCode === 303 || response.statusCode === 307) {\n          // Change URL to the redirect location\n          settings.url = response.headers.location;\n          var url = Url.parse(settings.url);\n          // Set host var in case it's used later\n          host = url.hostname;\n          // Options for the new request\n          var newOptions = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.path,\n            method: response.statusCode === 303 ? 'GET' : settings.method,\n            headers: headers\n          };\n\n          if (ssl) {\n            newOptions.pfx = opts.pfx;\n            newOptions.key = opts.key;\n            newOptions.passphrase = opts.passphrase;\n            newOptions.cert = opts.cert;\n            newOptions.ca = opts.ca;\n            newOptions.ciphers = opts.ciphers;\n            newOptions.rejectUnauthorized = opts.rejectUnauthorized;\n          }\n\n          // Issue the new request\n          request = doRequest(newOptions, responseHandler).on('error', errorHandler);\n          request.end();\n          // @TODO Check if an XHR event needs to be fired here\n          return;\n        }\n\n        if (response && response.setEncoding) {\n          response.setEncoding(\"utf8\");\n        }\n\n        setState(self.HEADERS_RECEIVED);\n        self.status = response.statusCode;\n\n        response.on('data', function(chunk) {\n          // Make sure there's some data\n          if (chunk) {\n            self.responseText += chunk;\n          }\n          // Don't emit state changes if the connection has been aborted.\n          if (sendFlag) {\n            setState(self.LOADING);\n          }\n        });\n\n        response.on('end', function() {\n          if (sendFlag) {\n            // The sendFlag needs to be set before setState is called.  Otherwise if we are chaining callbacks\n            // there can be a timing issue (the callback is called and a new call is made before the flag is reset).\n            sendFlag = false;\n            // Discard the 'end' event if the connection has been aborted\n            setState(self.DONE);\n          }\n        });\n\n        response.on('error', function(error) {\n          self.handleError(error);\n        });\n      }\n\n      // Error handler for the request\n      var errorHandler = function(error) {\n        self.handleError(error);\n      }\n\n      // Create the request\n      request = doRequest(options, responseHandler).on('error', errorHandler);\n\n      // Node 0.4 and later won't accept empty data. Make sure it's needed.\n      if (data) {\n        request.write(data);\n      }\n\n      request.end();\n\n      self.dispatchEvent(\"loadstart\");\n    } else { // Synchronous\n      // Create a temporary file for communication with the other Node process\n      var contentFile = \".node-xmlhttprequest-content-\" + process.pid;\n      var syncFile = \".node-xmlhttprequest-sync-\" + process.pid;\n      fs.writeFileSync(syncFile, \"\", \"utf8\");\n      // The async request the other Node process executes\n      var execString = \"var http = require('http'), https = require('https'), fs = require('fs');\"\n        + \"var doRequest = http\" + (ssl ? \"s\" : \"\") + \".request;\"\n        + \"var options = \" + JSON.stringify(options) + \";\"\n        + \"var responseText = '';\"\n        + \"var req = doRequest(options, function(response) {\"\n        + \"response.setEncoding('utf8');\"\n        + \"response.on('data', function(chunk) {\"\n        + \"  responseText += chunk;\"\n        + \"});\"\n        + \"response.on('end', function() {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-STATUS:' + response.statusCode + ',' + responseText, 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + \"response.on('error', function(error) {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + \"}).on('error', function(error) {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + (data ? \"req.write('\" + data.replace(/'/g, \"\\\\'\") + \"');\":\"\")\n        + \"req.end();\";\n      // Start the other Node Process, executing this string\n      var syncProc = spawn(process.argv[0], [\"-e\", execString]);\n      var statusText;\n      while(fs.existsSync(syncFile)) {\n        // Wait while the sync file is empty\n      }\n      self.responseText = fs.readFileSync(contentFile, 'utf8');\n      // Kill the child process once the file has data\n      syncProc.stdin.end();\n      // Remove the temporary file\n      fs.unlinkSync(contentFile);\n      if (self.responseText.match(/^NODE-XMLHTTPREQUEST-ERROR:/)) {\n        // If the file returned an error, handle it\n        var errorObj = self.responseText.replace(/^NODE-XMLHTTPREQUEST-ERROR:/, \"\");\n        self.handleError(errorObj);\n      } else {\n        // If the file returned okay, parse its data and move to the DONE state\n        self.status = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:([0-9]*),.*/, \"$1\");\n        self.responseText = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:[0-9]*,(.*)/, \"$1\");\n        setState(self.DONE);\n      }\n    }\n  };\n\n  /**\n   * Called when an error is encountered to deal with it.\n   */\n  this.handleError = function(error) {\n    this.status = 503;\n    this.statusText = error;\n    this.responseText = error.stack;\n    errorFlag = true;\n    setState(this.DONE);\n  };\n\n  /**\n   * Aborts a request.\n   */\n  this.abort = function() {\n    if (request) {\n      request.abort();\n      request = null;\n    }\n\n    headers = Object.assign({}, defaultHeaders);\n    this.responseText = \"\";\n    this.responseXML = \"\";\n\n    errorFlag = true;\n\n    if (this.readyState !== this.UNSENT\n        && (this.readyState !== this.OPENED || sendFlag)\n        && this.readyState !== this.DONE) {\n      sendFlag = false;\n      setState(this.DONE);\n    }\n    this.readyState = this.UNSENT;\n  };\n\n  /**\n   * Adds an event listener. Preferred method of binding to events.\n   */\n  this.addEventListener = function(event, callback) {\n    if (!(event in listeners)) {\n      listeners[event] = [];\n    }\n    // Currently allows duplicate callbacks. Should it?\n    listeners[event].push(callback);\n  };\n\n  /**\n   * Remove an event callback that has already been bound.\n   * Only works on the matching funciton, cannot be a copy.\n   */\n  this.removeEventListener = function(event, callback) {\n    if (event in listeners) {\n      // Filter will return a new array with the callback removed\n      listeners[event] = listeners[event].filter(function(ev) {\n        return ev !== callback;\n      });\n    }\n  };\n\n  /**\n   * Dispatch any events, including both \"on\" methods and events attached using addEventListener.\n   */\n  this.dispatchEvent = function(event) {\n    if (typeof self[\"on\" + event] === \"function\") {\n      self[\"on\" + event]();\n    }\n    if (event in listeners) {\n      for (var i = 0, len = listeners[event].length; i < len; i++) {\n        listeners[event][i].call(self);\n      }\n    }\n  };\n\n  /**\n   * Changes readyState and calls onreadystatechange.\n   *\n   * @param int state New state\n   */\n  var setState = function(state) {\n    if (self.readyState !== state) {\n      self.readyState = state;\n\n      if (settings.async || self.readyState < self.OPENED || self.readyState === self.DONE) {\n        self.dispatchEvent(\"readystatechange\");\n      }\n\n      if (self.readyState === self.DONE && !errorFlag) {\n        self.dispatchEvent(\"load\");\n        // @TODO figure out InspectorInstrumentation::didLoadXHR(cookie)\n        self.dispatchEvent(\"loadend\");\n      }\n    }\n  };\n};\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","/**\n * Application model\n */\nexport default class Application {\n    /**\n     * @constructor Application\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Application ID.\n         *\n         * @member Application#id\n         * @type {string}\n         */\n        this.id = data.id;\n\n        /**\n         * Application name.\n         *\n         * @member Application#name\n         * @type {string}\n         */\n        this.name = data.name;\n\n        /**\n         * Application name.\n         *\n         * @member Application#description\n         * @type {string}\n         */\n        this.description = data.description;\n\n        /**\n         * Date/time created.\n         *\n         * @member Application#created\n         * @type {*}\n         */\n        this.created = data.created;\n\n        /**\n         * Public api key for application.\n         *\n         * @member Application#public_api_key\n         * @type {string}\n         */\n        this.public_api_key = data.public_api_key;\n\n        /**\n         * Private Api Key for created application.\n         *\n         * @member Application#private_api_key\n         * @type {string}\n         */\n        if ('private_api_key' in data) {\n            this.private_api_key = data.private_api_key;\n        }\n    }\n}","/**\n * Sensor model\n */\nexport default class Sensor {\n    /**\n     * @constructor Sensor\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Sensor ID.\n         *\n         * @member Sensor#id\n         * @type {string}\n         */\n        this.id = data.id;\n\n        /**\n         * Sensor IMEI.\n         *\n         * @member Sensor#imei\n         * @type {string}\n         */\n        this.imei = data.imei;\n\n        /**\n         * Sensor name.\n         *\n         * @member Sensor#name\n         * @type {string}\n         */\n        this.name = data.name;\n\n        /**\n         * Application ID.\n         *\n         * @member Sensor#application\n         * @type {string}\n         */\n        this.application = data.application;\n\n        /**\n         * Date/time created.\n         *\n         * @member Sensor#created\n         * @type {*}\n         */\n        this.created = data.created;\n\n        /**\n         * Battery charge.\n         *\n         * @member Sensor#batteryCharge\n         * @type {number}\n         */\n        this.batteryCharge = data.batteryCharge;\n\n        /**\n         * Is battery charging?\n         *\n         * @member Sensor#isBatteryCharging\n         * @type {boolean}\n         */\n        this.isBatteryCharging = data.isBatteryCharging;\n\n        /**\n         * Is sensor connected and online?\n         *\n         * @member Sensor#isOnline\n         * @type {boolean}\n         */\n        this.isOnline = data.isOnline;\n\n        /**\n         * Is sensor public?\n         *\n         * @member Sensor#is_public\n         * @type {boolean}\n         */\n        this.is_public = data.is_public;\n\n        this.token = data.token;\n\n        let self = this;\n\n        /**\n         * Access to measurments methods for current sensor.\n         *\n         * @member Sensor#measurements\n         * @type {Object}\n         */\n        this.measurements = {\n            'list': function(options) {\n                if (options === undefined) {\n                    options = {};\n                }\n                options['sensor'] = self.id;\n                return self.api.measurements.list(options);\n            },\n            'last': function(options) {\n                if (options === undefined) {\n                    options = {};\n                }\n                options['sensor'] = self.id;\n                return self.api.measurements.last(options);\n            }\n        }\n\n    }\n}","import Measurement from '../models/measurement';\n\n/**\n * @classdesc Response with measurements data.\n */\nexport default class MeasurementsResponse {\n    /**\n     * @constructor MeasurementsResponse\n     *\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Next measurement id for pagination.\n         *\n         * @member MeasurementsResponse#next\n         * @type {string}\n         */\n        this.next = data.next;\n\n        /**\n         * Previous measurement id for pagination.\n         *\n         * @member MeasurementsResponse#prev\n         * @type {string}\n         */\n        this.prev = data.prev;\n\n        /**\n         * List of measurements.\n         *\n         * @member MeasurementsResponse#measurements\n         * @type {Measurement[]}\n         */\n        this.measurements = [];\n\n        let self = this;\n        data.result.forEach(function(measurement_data) {\n            self.measurements.push(new Measurement(self.api, measurement_data));\n        });\n    }\n}","/**\n * Sensor alert model\n */\nexport default class SensorAlert {\n    /**\n     * @constructor SensorAlert\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Sensor alert ID\n         *\n         * @member SensorAlert#id\n         * @type {string}\n         */\n        this.id = data.id;\n\n        /**\n         * Threshold type\n         *\n         * @member SensorAlert#threshold_type\n         * @type {string}\n         */\n        this.threshold_type = data.threshold_type;\n\n        /**\n         * Measurement type\n         *\n         * @member SensorAlert#measurement_type\n         * @type {string}\n         */\n        this.measurement_type = data.measurement_type;\n\n        /**\n         * Threshold value\n         *\n         * @member SensorAlert#threshold_value\n         * @type {*}\n         */\n        this.threshold_value = data.threshold_value;\n    }\n}","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","var url = require(\"url\");\nvar http = require(\"http\");\nvar https = require(\"https\");\nvar assert = require(\"assert\");\nvar Writable = require(\"stream\").Writable;\nvar debug = require(\"debug\")(\"follow-redirects\");\n\n// RFC7231§4.2.1: Of the request methods defined by this specification,\n// the GET, HEAD, OPTIONS, and TRACE methods are defined to be safe.\nvar SAFE_METHODS = { GET: true, HEAD: true, OPTIONS: true, TRACE: true };\n\n// Create handlers that pass events from native requests\nvar eventHandlers = Object.create(null);\n[\"abort\", \"aborted\", \"error\", \"socket\", \"timeout\"].forEach(function (event) {\n  eventHandlers[event] = function (arg) {\n    this._redirectable.emit(event, arg);\n  };\n});\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  options.headers = options.headers || {};\n  this._options = options;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new Error(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  else {\n    this.emit(\"error\", new Error(\"Request body larger than maxBodyLength limit\"));\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  var currentRequest = this._currentRequest;\n  if (!data) {\n    currentRequest.end(null, null, callback);\n  }\n  else {\n    this.write(data, encoding, function () {\n      currentRequest.end(null, null, callback);\n    });\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"abort\", \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\", \"setTimeout\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.substr(0, protocol.length - 1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  this._currentUrl = url.format(this._options);\n\n  // Set up event handlers\n  request._redirectable = this;\n  for (var event in eventHandlers) {\n    /* istanbul ignore else */\n    if (event) {\n      request.on(event, eventHandlers[event]);\n    }\n  }\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end.\n    var requestBodyBuffers = this._requestBodyBuffers;\n    (function writeNext() {\n      if (requestBodyBuffers.length !== 0) {\n        var buffer = requestBodyBuffers.pop();\n        request.write(buffer.data, buffer.encoding, writeNext);\n      }\n      else {\n        request.end();\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: response.statusCode,\n    });\n  }\n\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n  var location = response.headers.location;\n  if (location && this._options.followRedirects !== false &&\n      response.statusCode >= 300 && response.statusCode < 400) {\n    // RFC7231§6.4: A client SHOULD detect and intervene\n    // in cyclical redirections (i.e., \"infinite\" redirection loops).\n    if (++this._redirectCount > this._options.maxRedirects) {\n      this.emit(\"error\", new Error(\"Max redirects exceeded.\"));\n      return;\n    }\n\n    // RFC7231§6.4: Automatic redirection needs to done with\n    // care for methods not known to be safe […],\n    // since the user might not wish to redirect an unsafe request.\n    // RFC7231§6.4.7: The 307 (Temporary Redirect) status code indicates\n    // that the target resource resides temporarily under a different URI\n    // and the user agent MUST NOT change the request method\n    // if it performs an automatic redirection to that URI.\n    var header;\n    var headers = this._options.headers;\n    if (response.statusCode !== 307 && !(this._options.method in SAFE_METHODS)) {\n      this._options.method = \"GET\";\n      // Drop a possible entity and headers related to it\n      this._requestBodyBuffers = [];\n      for (header in headers) {\n        if (/^content-/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Drop the Host header, as the redirect might lead to a different host\n    if (!this._isRedirect) {\n      for (header in headers) {\n        if (/^host$/i.test(header)) {\n          delete headers[header];\n        }\n      }\n    }\n\n    // Perform the redirected request\n    var redirectUrl = url.resolve(this._currentUrl, location);\n    debug(\"redirecting to\", redirectUrl);\n    Object.assign(this._options, url.parse(redirectUrl));\n    this._isRedirect = true;\n    this._performRequest();\n\n    // Discard the remainder of the response to avoid waiting for data\n    response.destroy();\n  }\n  else {\n    // The response is not a redirect; return it as-is\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    wrappedProtocol.request = function (options, callback) {\n      if (typeof options === \"string\") {\n        options = url.parse(options);\n        options.maxRedirects = exports.maxRedirects;\n      }\n      else {\n        options = Object.assign({\n          protocol: protocol,\n          maxRedirects: exports.maxRedirects,\n          maxBodyLength: exports.maxBodyLength,\n        }, options);\n      }\n      options.nativeProtocols = nativeProtocols;\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    };\n\n    // Executes a GET request, following redirects\n    wrappedProtocol.get = function (options, callback) {\n      var request = wrappedProtocol.request(options, callback);\n      request.end();\n      return request;\n    };\n  });\n  return exports;\n}\n\n// Exports\nmodule.exports = wrap({ http: http, https: https });\nmodule.exports.wrap = wrap;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof global.Buffer === 'function' && typeof global.Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof global.ArrayBuffer === 'function';\n\nvar isView = (function () {\n  if (withNativeArrayBuffer && typeof global.ArrayBuffer.isView === 'function') {\n    return global.ArrayBuffer.isView;\n  } else {\n    return function (obj) { return obj.buffer instanceof global.ArrayBuffer; };\n  }\n})();\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && global.Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof global.ArrayBuffer || isView(obj)));\n}\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","import SensorlabApi from './api';\nimport SensorlabWebsockets from './websockets';\n\nmodule.exports = {\n    'SensorlabApi': SensorlabApi,\n    'SensorlabWebsockets': SensorlabWebsockets,\n}","import UsersEndpoints from './endpoints/users';\nimport AuthEndpoints from './endpoints/auth';\nimport ApplicationsEndpoints from './endpoints/applications';\nimport ProfileEndpoints from './endpoints/profile';\nimport SensorsEndpoints from './endpoints/sensors';\nimport MeasurementsEndpoints from './endpoints/measurements';\nimport ApiResponse from './responses/api';\nimport ApiErrorBasicException from \"./responses/errors/basic\";\nimport ApiErrorUnauthorizedException from \"./responses/errors/auth\";\nimport ApiErrorNotFoundException from \"./responses/errors/notfound\";\nimport ApiErrorValidationException from \"./responses/errors/validation\";\nimport ApiErrorConnectionRefusedException from \"./responses/errors/connection_refused\";\nimport ApiErrorInternalException from \"./responses/errors/internal\";\nimport PublicEndpoints from \"./endpoints/public\";\nimport SensorAlertsEndpoints from \"./endpoints/sensor_alerts\";\nimport AlertsEndpoints from \"./endpoints/alerts\";\nimport ApiErrorForbiddenException from \"./responses/errors/forbidden\";\n\nlet axios = require('axios');\n\n/**\n * @class SensorlabApi\n * @classdesc Main class that connects all the endpoints.\n */\nexport default class SensorlabApi {\n    /**\n     * @param {string} api_url - API's url.\n     */\n    constructor(api_url = 'https://staging.sensorlab.io/api') {\n        /**\n         * REST API url.\n         *\n         * @type {string}\n         * @member SensorlabApi#rest_api_url\n         * @private\n         */\n        this._rest_api_url = api_url;\n\n        /**\n         * Users endpoint.\n         *\n         * @member SensorlabApi#users\n         * @private\n         * @type {UsersEndpoints}\n         */\n        this._users = new UsersEndpoints(this);\n\n        /**\n         * Auth endpoints.\n         *\n         * @member SensorlabApi#auth\n         * @type {AuthEndpoints}\n         */\n        this.auth = new AuthEndpoints(this);\n\n        /**\n         * Profile endpoints.\n         *\n         * @member SensorlabApi#profile\n         * @type {ProfileEndpoints}\n         */\n        this.profile = new ProfileEndpoints(this);\n\n        /**\n         * Applications endpoints.\n         *\n         * @member SensorlabApi#applications\n         * @type {ApplicationsEndpoints}\n         */\n        this.applications = new ApplicationsEndpoints(this);\n\n        /**\n         * Sensor endpoint.\n         *\n         * @member SensorlabApi#sensors\n         * @type {SensorsEndpoints}\n         */\n        this.sensors = new SensorsEndpoints(this);\n\n        /**\n         * Sensor alerts endpoint.\n         *\n         * @member SensorlabApi#sensor_alerts\n         * @type {SensorAlertsEndpoints}\n         */\n        this.sensor_alerts = new SensorAlertsEndpoints(this);\n\n        /**\n         * Alerts endpoint.\n         *\n         * @member SensorlabApi#alerts\n         * @type {AlertsEndpoints}\n         */\n        this.alerts = new AlertsEndpoints(this);\n\n        /**\n         * Measurements endpoints.\n         *\n         * @member SensorlabApi#measurements\n         * @type {MeasurementsEndpoints}\n         */\n        this.measurements = new MeasurementsEndpoints(this);\n\n        /**\n         * Public endpoints.\n         *\n         * @member SensorlabApi#public\n         * @type {PublicEndpoints}\n         */\n        this.public = new PublicEndpoints(this);\n\n        /**\n         * Saved JWT token\n         *\n         * @member SensorlabApi#jwt_token\n         * @type {string}\n         */\n        this.jwt_token = null;\n    }\n\n    /**\n     * Set authentication jwt token.\n     *\n     * @method SensorlabApi#setToken\n     * @param {string} jwt_token saved token\n     */\n    setToken(jwt_token) {\n        this.jwt_token = jwt_token;\n    }\n\n    /**\n     * Get authentication jwt token.\n     *\n     * @method SensorlabApi#getToken\n     * @returns {string}\n     */\n    getToken() {\n        return this.jwt_token;\n    }\n\n    /**\n     * Make requests to API with axios.\n     *\n     * @param {string} endpoint_url endpoint to send request to\n     * @param {string} method method type\n     * @param {object} data data to send with request\n     * @param {boolean} jwt_token use request with token or not\n     * @returns {Promise.<*|InterceptorManager|AxiosResponse|AxiosInterceptorManager<AxiosResponse>|Object>}\n     * @method SensorlabApi#_makeApiRequest\n     * @private\n     */\n    async _makeApiRequest(endpoint_url, method = 'GET', data = {}, params = {}, use_jwt_token = true) {\n        let headers = { 'Content-Type': 'application/json' };\n        let request_url = this._rest_api_url + endpoint_url;\n\n        if (use_jwt_token) {\n            headers['Authorization'] = 'Bearer ' + this.jwt_token;\n        };\n\n        let response = null;\n\n        try {\n            response = await axios({\n                params: params,\n                method: method,\n                url: request_url,\n                data: data,\n                headers: headers,\n            });\n        } catch (e) {\n            if ('response' in e) {\n                response = e.response;\n            }\n        }\n        return response;\n    }\n\n    /**\n     * Create ApiResponse from axios response data.\n     *\n     * @param {object} response response from axios\n     * @param {function} success callback\n     * @returns {ApiResponse}\n     * @throws {ApiResponse}\n     * @method SensorlabApi#_prepareApiResponse\n     * @private\n     */\n    _prepareApiResponse(response, success_cb = null) {\n        if (!response) {\n            throw new ApiErrorConnectionRefusedException(0, 'Connection refused');\n        }\n        switch (response.status) {\n            case 200:\n                if (success_cb) {\n                    return success_cb(this, response);\n                } else {\n                    return new ApiResponse(response.data.success, response.status, response.data.code, response.data.message);\n                }\n            case 401:\n                throw new ApiErrorUnauthorizedException(response.status, response.data.message);\n            case 403:\n                throw new ApiErrorForbiddenException(response.status, response.data.message);\n            case 404:\n                throw new ApiErrorNotFoundException(response.status, response.data);\n            case 422:\n                throw new ApiErrorValidationException(response.status, response.data.message, response.data.errors);\n            case 500:\n                throw new ApiErrorInternalException(response.status, 'Internal Error');\n            default:\n                let message = null;\n                if ('message' in response.data) {\n                    message = response.data.message;\n                }\n                throw new ApiErrorBasicException(response.status, message);\n        }\n    }\n}","/**\n * @classdesc Class for /users/* endpoints.\n */\nexport default class UsersEndpoints {\n    /**\n     * @constructor UsersEndpoints\n     * @param {SensorlabApi} api - parent API class\n     */\n    constructor(api) {\n        /**\n         * @member UsersEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Signup users endpoint.\n     *\n     * @method UsersEndpoints#signup\n     * @param {string} email - users's email\n     * @param {string} password - users's password\n     * @param {string} password_check - password check field value\n     */\n    async signup(email, password, password_check) {\n        let data = {\n            'email': email,\n            'password': password,\n            'password_check': password_check,\n        }\n        let response = await this.api._makeApiRequest('/basic/users/signup', 'POST', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Email verification endpoint.\n     *\n     * @method UsersEndpoints#verify_email\n     * @param {string} verification_token - verification token from email\n     * @returns {Promise.<ApiResponse>}\n     */\n    async verify_email(verification_token) {\n        let data = {\n            verification_token: verification_token,\n        };\n        let response = await this.api._makeApiRequest('/basic/users/verify_email', 'POST', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Request password reset endpoint.\n     *\n     * @method UsersEndpoints#reset_password_request\n     * @param {string} email - user's email\n     * @returns {Promise.<ApiResponse>}\n     */\n    async reset_password_request(email) {\n        let data = {\n            'email': email,\n        }\n        let response = await this.api._makeApiRequest('/basic/users/reset_password/request', 'POST', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Request password reset check token endpoint.\n     *\n     * @method UsersEndpoints#reset_password_check_token\n     * @param {string} token - verification token to check\n     * @returns {Promise.<ApiResponse>}\n     */\n    async reset_password_check_token(token) {\n        let data = {\n            'token': token,\n        }\n        let response = await this.api._makeApiRequest('/basic/users/reset_password/check', 'POST', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Reset password endpoint.\n     *\n     * @method UsersEndpoints#reset_password\n     * @param {string} token - verification token from email.\n     * @param {string} password - new user's password\n     * @param {string} password_check - password check field value\n     * @returns {Promise.<ApiResponse>}\n     */\n    async reset_password(token, password, password_check) {\n        let data = {\n            'token': token,\n            'password': password,\n            'password_check': password_check,\n        }\n        let response = await this.api._makeApiRequest('/basic/users/reset_password', 'POST', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Resend verification email.\n     *\n     * @method UsersEndpoints#verify_email_resend\n     * @param {string} email - user's email\n     * @returns {Promise.<ApiResponse>}\n     */\n    async verify_email_resend(email) {\n        let data = {\n            'email': email,\n        }\n        let response = await this.api._makeApiRequest('/basic/users/verify_email/resend', 'POST', data);\n        return this.api._prepareApiResponse(response);\n    }\n}","import User from '../models/user';\nimport ApplicationToken from \"../models/application_token\";\n\n/**\n * Class for /auth/* endpoints.\n */\nexport default class AuthEndpoints {\n    /**\n     * @constructor AuthEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member AuthEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Authorize with email and password and get authentication token.\n     *\n     * @method AuthEndpoints#user_token\n     * @param {string} email user's email\n     * @param {string} password user's password\n     * @returns {Promise.<ApiResponse>}\n     */\n    async user_token(email, password) {\n        let data = {\n            'email': email,\n            'password': password,\n        }\n        let response = await this.api._makeApiRequest('/v1/auth/user/token', 'POST', data);\n        let result = this.api._prepareApiResponse(response, this._successUserResponse);\n        this.api.setToken(result.token);\n        return result;\n    }\n\n    /**\n     * Authenticate application by public and private api keys and get JWT token.\n     *\n     * @method AuthEndpoints#application_token\n     * @param {string} public_api_key Application's public api key\n     * @param {string} private_api_key Application's private api key\n     * @returns {Promise.<ApiResponse>}\n     */\n    async application_token(public_api_key, private_api_key) {\n        let data = {\n            'public_api_key': public_api_key,\n            'private_api_key': private_api_key,\n        }\n        let response = await this.api._makeApiRequest('/v1/auth/application/token', 'POST', data);\n        let result = this.api._prepareApiResponse(response, this._successApplicationResponse);\n        this.api.setToken(result.token);\n        return result;\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {User}\n     * @private\n     */\n    _successUserResponse(api, response) {\n        return new User(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {ApplicationToken}\n     * @private\n     */\n    _successApplicationResponse(api, response) {\n        return new ApplicationToken(api, response.data);\n    }\n}","/**\n * User model\n */\nexport default class User {\n    /**\n     * @constructor User\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Authorization token.\n         *\n         * @member User#token\n         * @type {string}\n         */\n        this.token = data.token;\n    }\n\n    /**\n     * Get user's profile.\n     *\n     * @method User#profile\n     * @returns {Promise.<ApiResponse>}\n     */\n    profile() {\n        return this.api.profile.get();\n    }\n}","/**\n * Application Token class\n */\nexport default class ApplicationToken {\n    /**\n     * @constructor ApplicationToken\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Authorization token.\n         *\n         * @member ApplicationToken#token\n         * @type {string}\n         */\n        this.token = data.token;\n    }\n}","import ApplicationsResponse from '../responses/applications';\nimport Application from '../models/application';\n\n/**\n * Class for /application/* endpoints.\n */\nexport default class ApplicationsEndpoints {\n    /**\n     * @constructor ApplicationsEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member ApplicationsEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get applications list\n     *\n     * @method ApplicationsEndpoints#list\n     * @param {object} options - method options\n     * @param {number} options.page - page number to display. Default is `1`.\n     * @param {string} options.name - search by name.\n     * @param {string} options.sort - sorting parameter\n     * @returns {Promise.<ApiResponse>}\n     */\n    async list(options) {\n        if (options === undefined) options = {};\n        if (options.page === undefined) options.page = 1;\n        if (options.name === undefined) options.name = null;\n        if (options.sort === undefined) options.sort = null;\n\n        let params = {\n            page: options.page,\n            name: options.name,\n            sort: options.sort,\n        }\n        let response = await this.api._makeApiRequest('/v1/applications', 'GET', {}, params, true);\n        return this.api._prepareApiResponse(response, this._successApplicationsListResponse);\n    }\n\n    /**\n     * Get application by id\n     *\n     * @method ApplicationsEndpoints#get\n     * @param {string} application_id - application_id\n     * @returns {Promise.<ApiResponse>}\n     */\n    async get(application_id) {\n        let response = await this.api._makeApiRequest('/v1/applications/' + application_id, 'GET', {}, {}, true);\n        return this.api._prepareApiResponse(response, this._successApplicationResponse);\n    }\n\n    /**\n     * Create application.\n     *\n     * @method ApplicationsEndpoints#create\n     * @param {string} name - application's name\n     * @param {string} description - users's description\n     */\n    async create(name, description = null) {\n        let data = {\n            'name': name,\n            'description': description,\n        }\n        let response = await this.api._makeApiRequest('/v1/applications', 'POST', data);\n        return this.api._prepareApiResponse(response, this._successCreateApplicationResponse);\n    }\n\n    /**\n     * Update application.\n     *\n     * @method ApplicationsEndpoints#update\n     * @param {string} application_id - id of application to update\n     * @param {string} name - application's name\n     * @param {string} description - users's description\n     */\n    async update(application_id, name, description = null) {\n        let data = {\n            'name': name,\n            'description': description,\n        }\n        let response = await this.api._makeApiRequest('/v1/applications/' + application_id, 'PATCH', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Delete application by id.\n     *\n     * @method ApplicationsEndpoints#delete\n     * @param {string} application_id - application_id\n     * @returns {Promise.<ApiResponse>}\n     */\n    async delete(application_id) {\n        let response = await this.api._makeApiRequest('/v1/applications/' + application_id, 'DELETE', {}, {}, true);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Generate new private api key for application.\n     *\n     * @method ApplicationsEndpoints#generate_private_api_key\n     * @param application_id\n     * @returns {Promise<*>}\n     */\n    async generate_private_api_key(application_id) {\n        let response = await this.api._makeApiRequest(\n            '/v1/applications/' + application_id + '/private_api_key/generate', 'POST', {}, {}, true);\n        return this.api._prepareApiResponse(response, this._successCreateApplicationResponse);\n    }\n\n    /**\n     * Get application for application token.\n     *\n     * @method ApplicationsEndpoints#get_self\n     * @returns {Promise.<ApiResponse>}\n     */\n    async get_self() {\n        let response = await this.api._makeApiRequest('/v1/applications/self', 'GET', {}, {}, true);\n        return this.api._prepareApiResponse(response, this._successApplicationResponse);\n    }\n\n    /**\n     * Update application for application token.\n     *\n     * @method ApplicationsEndpoints#update_self\n     * @param {string} name - application's name\n     * @param {string} description - users's description\n     */\n    async update_self(name, description = null) {\n        let data = {\n            'name': name,\n            'description': description,\n        }\n        let response = await this.api._makeApiRequest('/v1/applications/self', 'PATCH', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {ApplicationsResponse}\n     * @private\n     */\n    _successApplicationsListResponse(api, response) {\n        return new ApplicationsResponse(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {Application}\n     * @private\n     */\n    _successApplicationResponse(api, response) {\n        return new Application(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {Application}\n     * @private\n     */\n    _successCreateApplicationResponse(api, response) {\n        return new Application(api, response.data.application);\n    }\n}","import Application from '../models/application';\n\n/**\n * Response with applications data\n */\nexport default class ApplicationsResponse {\n    /**\n     * @constructor ApplicationsResponse\n     *\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Total amount of pages available.\n         *\n         * @member ApplicationsResponse#pages\n         * @type {number}\n         */\n        this.pages = data.pages;\n\n        /**\n         * Total amount of sensors available.\n         *\n         * @member ApplicationsResponse#count\n         * @type {number}\n         */\n        this.count = data.count;\n\n        /**\n         * List of sensors.\n         *\n         * @member ApplicationsResponse#applications\n         * @type {Application[]}\n         */\n        this.applications = [];\n\n        let self = this;\n        data.result.forEach(function(application_data) {\n            self.applications.push(new Application(self.api, application_data));\n        });\n    }\n}","import Profile from '../models/profile';\n\n/**\n * Class for /profile/* endpoints.\n */\nexport default class ProfileEndpoints {\n    /**\n     * @constructor ProfileEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member ProfileEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get user's profile.\n     *\n     * @method ProfileEndpoints#get\n     * @returns {Promise.<ApiResponse>}\n     */\n    async get() {\n        let response = await this.api._makeApiRequest('/v1/profile', 'GET', null, null, true);\n        return this.api._prepareApiResponse(response, this._successProfileResult);\n\n    }\n\n    /**\n     * Change password.\n     *\n     * @method ProfileEndpoints#change_password\n     * @param {string} old_password - current (old) user's password\n     * @param {string} new_password - new password to set\n     * @param {string} new_password_check - new password check\n     * @returns {Promise.<ApiResponse>}\n     */\n    async change_password(old_password, new_password, new_password_check) {\n        let data = {\n            'old_password': old_password,\n            'new_password': new_password,\n            'new_password_check': new_password_check,\n        };\n        let response = await this.api._makeApiRequest('/v1/profile/change_password', 'POST', data, null, true);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {Profile}\n     * @private\n     */\n    _successProfileResult(api, response) {\n        return new Profile(api, response.data);\n    }\n}","/**\n * User profile\n */\nexport default class Profile {\n    /**\n     * @constructor Profile\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * User's email\n         *\n         * @member Profile#email\n         * @type {string}\n         */\n        this.email = data.email;\n    }\n\n    /**\n     * Change password for profile/user.\n     *\n     * @method Profile#change_password\n     * @param old_password\n     * @param new_password\n     * @param new_password_check\n     * @returns {Promise.<ApiResponse>}\n     */\n    async change_password(old_password, new_password, new_password_check) {\n        return this.api.profile.change_password(old_password, new_password, new_password_check)\n    }\n}","import SensorsResponse from '../responses/sensors';\nimport Sensor from '../models/sensor';\n\n/**\n * Class for /sensors/* endpoints.\n */\nexport default class SensorsEndpoints {\n    /**\n     * @constructor SensorsEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member SensorsEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get sensors list.\n     *\n     * @method SensorsEndpoints#list\n     * @param {object} options - method options\n     * @param {number} options.page - page number to display. Default is `1`.\n     * @param {string} options.name - filter by name.\n     * @param {string} options.id - filter by id.\n     * @param {string} options.imei - filter by imei.\n     * @param {string} options.sort - sorting parameter\n     * @param {string} options.online_status - pass \"online\" to search for online sensors or \"offline\" for offline sensors.\n     * @param {string} options.battery_charge_min - filter sensors by battery charge\n     * @param {string} options.battery_charge_max - filter sensors by battery charge\n     * @returns {Promise.<ApiResponse>}\n     */\n    async list(options) {\n        if (options === undefined) options = {};\n        if (options.page === undefined) options.page = 1;\n        if (options.name === undefined) options.name = null;\n        if (options.id === undefined) options.id = null;\n        if (options.imei === undefined) options.imei = null;\n        if (options.sort === undefined) options.sort = null;\n        if (options.online_status === undefined) options.online_status = null;\n        if (options.battery_charge_min === undefined) options.battery_charge_min = null;\n        if (options.battery_charge_max === undefined) options.battery_charge_max = null;\n\n        let params = {\n            page: options.page,\n            name: options.name,\n            id: options.id,\n            imei: options.imei,\n            sort: options.sort,\n            online_status: options.online_status,\n            battery_charge_min: options.battery_charge_min,\n            battery_charge_max: options.battery_charge_max\n        }\n        let response = await this.api._makeApiRequest('/v1/sensors', 'GET', {}, params, true);\n        return this.api._prepareApiResponse(response, this._successSensorsListResponse);\n    }\n\n    /**\n     * Get sensor by id.\n     *\n     * @method SensorsEndpoints#one\n     * @param {string} sensor_id - sensor's id\n     * @returns {Promise.<ApiResponse>}\n     */\n    async get(sensor_id) {\n        let response = await this.api._makeApiRequest('/v1/sensors/' + sensor_id, 'GET', {}, {}, true);\n        return this.api._prepareApiResponse(response, this._successSensorResponse);\n    }\n\n    /**\n     * Update sensors.\n     *\n     * @method SensorsEndpoints#update\n     * @param {string} sensor_id - id of sensor to update\n     * @param {string} name - sensor's name\n     * @param {string} application - application id to assign to\n     * @param {boolean} is_public - set sensor private or public\n     */\n    async update(sensor_id, name, application = null, is_public = null) {\n        let data = {\n            'name': name,\n        };\n        if (application !== null) {\n            data['application'] = application;\n        }\n        if (is_public !== null) {\n            data['is_public'] = is_public;\n        }\n        let response = await this.api._makeApiRequest('/v1/sensors/' + sensor_id, 'PATCH', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {SensorsResponse}\n     * @private\n     */\n    _successSensorsListResponse(api, response) {\n        return new SensorsResponse(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {Sensor}\n     * @private\n     */\n    _successSensorResponse(api, response) {\n        return new Sensor(api, response.data);\n    }\n}","import Sensor from '../models/sensor';\n\n/**\n * Response with sensors data\n */\nexport default class SensorsResponse {\n    /**\n     * @constructor SensorsResponse\n     *\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Total amount of pages available.\n         *\n         * @member SensorsResponse#pages\n         * @type {number}\n         */\n        this.pages = data.pages;\n\n        /**\n         * Total amount of sensors available.\n         *\n         * @member SensorsResponse#count\n         * @type {number}\n         */\n        this.count = data.count;\n\n        /**\n         * List of sensors.\n         *\n         * @member SensorsResponse#measurements\n         * @type {Sensor[]}\n         */\n        this.sensors = [];\n\n        let self = this;\n        data.result.forEach(function(sensor_data) {\n            self.sensors.push(new Sensor(self.api, sensor_data));\n        });\n    }\n}","import MeasurementsResponse from '../responses/measurements';\nimport Measurement from '../models/measurement';\n\n/**\n * Class for /measurements/* endpoints.\n */\nexport default class MeasurementsEndpoints {\n    /**\n     * @constructor MeasurementsEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member MeasurementsEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get sensors list\n     *\n     * @method MeasurementsEndpoints#list\n     * @param {object} options - method options\n     * @param {number} options.page - page number to display. Default is `1`.\n     * @param {string} options.sensor - show measurements for sensor with specified id.\n     * @param {string} options.type - get measurements with specified type only.\n     * @param {string} options.sort - sorting parameter\n     * @returns {Promise.<ApiResponse>}\n     */\n    async list(options) {\n        if (options === undefined) options = {};\n        if (options.sensor === undefined) options.sensor = null;\n        if (options.type === undefined) options.type = null;\n        if (options.next === undefined) options.next = null;\n        if (options.timestamp_start === undefined) options.timestamp_start = null;\n        if (options.timestamp_stop === undefined) options.timestamp_stop = null;\n\n        let params = {\n            next: options.next,\n            type: options.type,\n            sensor: options.sensor,\n            timestamp_start: options.timestamp_start,\n            timestamp_stop: options.timestamp_stop,\n        }\n        let response = await this.api._makeApiRequest('/v1/measurements', 'GET', {}, params, true);\n        return this.api._prepareApiResponse(response, this._successMeasurementsListResponse);\n    }\n\n    /**\n     * Get sensor by id\n     *\n     * @method MeasurementsEndpoints#last\n     * @param {object} options - method options\n     * @param {string} options.sensor_id - get measurement for sensor with specified id.\n     * @param {string} type - get measurement with specified type only.\n     * @returns {Promise.<ApiResponse>}\n     */\n    async last(options) {\n        if (options === undefined) options = {};\n        if (options.sensor === undefined) options.sensor = null;\n        if (options.type === undefined) options.type = null;\n\n        let params = {};\n        if (options.type) {\n            params['type'] = options.type;\n        }\n        if (options.sensor) {\n            params['sensor'] = options.sensor;\n        }\n        let response = await this.api._makeApiRequest('/v1/measurements/last', 'GET', {}, params, true);\n        return this.api._prepareApiResponse(response, this._successMeasurementResponse);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {MeasurementsResponse}\n     * @private\n     */\n    _successMeasurementsListResponse(api, response) {\n        return new MeasurementsResponse(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {Measurement}\n     * @private\n     */\n    _successMeasurementResponse(api, response) {\n        return new Measurement(api, response.data);\n    }\n}","/**\n * @classdesc Default api response for errors\n */\nexport default class ApiResponse {\n    /**\n     * @constructor ApiResponse\n     *\n     * @param {boolean} success\n     * @param {number} status\n     * @param {number} code\n     * @param {string} message\n     * @param {string} token\n     */\n    constructor(success, status, code, message = null, errors = []) {\n        /**\n         * Response was success or returned with errors\n         *\n         * @member ApiResponse#success\n         * @type {boolean}\n         */\n        this.success = success;\n\n        /**\n         * HTTP status of response\n         *\n         * @member ApiResponse#status\n         * @type {number}\n         */\n        this.status = status;\n\n        /**\n         * Response/error code\n         *\n         * @member ApiResponse#code\n         * @type {number}\n         */\n        this.code = code;\n\n        /**\n         * Response/error message\n         *\n         * @member ApiResponse#message\n         * @type {string}\n         */\n        this.message = message;\n\n        /**\n         * Validation errors.\n         *\n         * @member ApiResponse#errors\n         * @type {Array}\n         */\n        this.errors = errors;\n    }\n}","import ApiErrorBasicException from \"./basic\";\n\n/**\n * @class ApiErrorUnauthorizedException\n * @classdesc SDK will throw this exception on 401 status errors.\n * @extends ApiErrorBasicException\n */\nexport default class ApiErrorUnauthorizedException extends ApiErrorBasicException {\n}","import ApiErrorBasicException from \"./basic\";\n\n/**\n * @class ApiErrorNotFoundException\n * @classdesc SDK will throw this exception on 404 status errors.\n * @extends ApiErrorBasicException\n */\nexport default class ApiErrorNotFoundException extends ApiErrorBasicException {\n}","import ApiErrorBasicException from \"./basic\";\n\n/**\n * @class ApiErrorValidationException\n * @classdesc SDK will throw this exception on 422 status (fields validation).\n * @extends ApiErrorBasicException\n */\nexport default class ApiErrorValidationException extends ApiErrorBasicException {\n}","import ApiErrorBasicException from \"./basic\";\n\n/**\n * @class ApiErrorConnectionRefusedException\n * @classdesc SDK will throw this exception if there's no connection to API.\n * @extends ApiErrorBasicException\n */\nexport default class ApiErrorConnectionRefusedException extends ApiErrorBasicException {\n}","import ApiErrorBasicException from \"./basic\";\n\n/**\n * @class ApiErrorInteralException\n * @classdesc SDK will throw this exception on 500 status errors.\n * @extends ApiErrorBasicException\n */\nexport default class ApiErrorInternalException extends ApiErrorBasicException {\n}","import MeasurementsResponse from '../responses/measurements';\nimport Measurement from '../models/measurement';\n\n/**\n * Class for /measurements/* endpoints.\n */\nexport default class PublicEndpoints {\n    /**\n     * @constructor PublicEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member PublicEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get sensors list\n     *\n     * @method PublicEndpoints#list\n     * @param {string} public_api_key\n     * @param {object} options - method options\n     * @param {number} options.page - page number to display. Default is `1`.\n     * @param {string} options.sensor - show measurements for sensor with specified id.\n     * @param {string} options.type - get measurements with specified type only.\n     * @param {string} options.sort - sorting parameter\n     * @returns {Promise.<ApiResponse>}\n     */\n    async list(public_api_key, options) {\n        if (options === undefined) options = {};\n        if (options.sensor === undefined) options.sensor = null;\n        if (options.type === undefined) options.type = null;\n        if (options.next === undefined) options.next = null;\n        if (options.timestamp_start === undefined) options.timestamp_start = null;\n        if (options.timestamp_stop === undefined) options.timestamp_stop = null;\n\n        let params = {\n            public_api_key: public_api_key,\n            next: options.next,\n            type: options.type,\n            timestamp_start: options.timestamp_start,\n            timestamp_stop: options.timestamp_stop,\n        }\n        let response = await this.api._makeApiRequest('/v1/public/sensors/'+options.sensor+'/measurements', 'GET', {}, params, false);\n        return this.api._prepareApiResponse(response, this._successMeasurementsListResponse);\n    }\n\n    /**\n     * Get sensor by id\n     *\n     * @method PublicEndpoints#last\n     * @param {string} public_api_key\n     * @param {object} options - method options\n     * @param {string} options.sensor_id - get measurement for sensor with specified id.\n     * @param {string} type - get measurement with specified type only.\n     * @returns {Promise.<ApiResponse>}\n     */\n    async last(public_api_key, options) {\n        if (options === undefined) options = {};\n        if (options.sensor === undefined) options.sensor = null;\n        if (options.type === undefined) options.type = null;\n\n        let params = {};\n        params.public_api_key = public_api_key;\n        if (options.type) {\n            params['type'] = options.type;\n        }\n        if (options.sensor) {\n            params['sensor'] = options.sensor;\n        }\n        let response = await this.api._makeApiRequest('/v1/public/sensors/'+options.sensor+'/measurements/last', 'GET', {}, params, false);\n        return this.api._prepareApiResponse(response, this._successMeasurementResponse);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {MeasurementsResponse}\n     * @private\n     */\n    _successMeasurementsListResponse(api, response) {\n        return new MeasurementsResponse(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {Measurement}\n     * @private\n     */\n    _successMeasurementResponse(api, response) {\n        return new Measurement(api, response.data);\n    }\n}","import SensorAlertsResponse from '../responses/sensor_alerts';\nimport SensorAlert from '../models/sensor_alert';\n\n/**\n * Sensor alerts endpoints.\n */\nexport default class SensorAlertsEndpoints {\n    /**\n     * @constructor SensorAlertsEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member SensorAlertsEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get sensor alerts list\n     *\n     * @method SensorAlertsEndpoints#list\n     * @param {string} sensor - Sensor ID.\n     * @returns {Promise.<ApiResponse>}\n     */\n    async list(sensor) {\n        let response = await this.api._makeApiRequest('/v1/sensors/'+sensor+'/alerts', 'GET');\n        return this.api._prepareApiResponse(response, this._successSensorAlertsListResponse);\n    }\n\n    /**\n     * Get sensor alert by id\n     *\n     * @method SensorAlertsEndpoints#get\n     * @param {string} sensor - Sensor ID\n     * @param {string} alert - Sensor Alert ID\n     * @returns {Promise.<ApiResponse>}\n     */\n    async get(sensor, alert) {\n        let response = await this.api._makeApiRequest('/v1/sensors/'+sensor+'/alerts/'+alert, 'GET');\n        return this.api._prepareApiResponse(response, this._successSensorAlertResponse);\n    }\n\n    /**\n     * Create sensor alert.\n     *\n     * @method SensorAlertsEndpoints#create\n     * @param {string} threshold_type - Threshold type\n     * @param {string} measurement_type - Measurement type\n     * @param {mixed} threshold_value - Threshold value\n     */\n    async create(sensor, threshold_type, measurement_type, threshold_value) {\n        let data = {\n            threshold_type: threshold_type,\n            measurement_type: measurement_type,\n            threshold_value: threshold_value\n        };\n        let response = await this.api._makeApiRequest('/v1/sensors/'+sensor+'/alerts', 'POST', data);\n        return this.api._prepareApiResponse(response, this._successCreateSensorAlertResponse);\n    }\n\n    /**\n     * Update sensor alert.\n     *\n     * @method SensorAlertsEndpoints#update\n     * @param {string} sensor - Sensor ID\n     * @param {string} alert - Sensor Alert ID\n     * @param {string} threshold_type - Threshold type\n     * @param {string} measurement_type - Measurement type\n     * @param {string|number|Object} threshold_value - Threshold value\n     */\n    async update(sensor, alert, threshold_type, measurement_type, threshold_value) {\n        let data = {\n            threshold_type: threshold_type,\n            measurement_type: measurement_type,\n            threshold_value: threshold_value\n        };\n        let response = await this.api._makeApiRequest('/v1/sensors/'+sensor+'/alerts/'+alert, 'PATCH', data);\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Delete sensor alert.\n     *\n     * @method SensorAlertsEndpoints#delete\n     * @param {string} sensor - Sensor ID\n     * @param {string} alert - Sensor Alert ID\n     * @returns {Promise.<ApiResponse>}\n     */\n    async delete(sensor, alert) {\n        let response = await this.api._makeApiRequest('/v1/sensors/'+sensor+'/alerts/'+alert, 'DELETE');\n        return this.api._prepareApiResponse(response);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {SensorAlertsResponse}\n     * @private\n     */\n    _successSensorAlertsListResponse(api, response) {\n        return new SensorAlertsResponse(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {SensorAlert}\n     * @private\n     */\n    _successSensorAlertResponse(api, response) {\n        return new SensorAlert(api, response.data);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {SensorAlert}\n     * @private\n     */\n    _successCreateSensorAlertResponse(api, response) {\n        return new SensorAlert(api, response.data.sensor_alert);\n    }\n}","import SensorAlert from '../models/sensor_alert';\n\n/**\n * Response with sensor alerts data\n */\nexport default class SensorAlertsResponse {\n    /**\n     * @constructor SensorAlertsResponse\n     *\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * List of sensors.\n         *\n         * @member SensorAlertsResponse#sensor_alerts\n         * @type {SensorAlert[]}\n         */\n        this.sensor_alerts = [];\n\n        let self = this;\n        data.forEach(function(alert_data) {\n            self.sensor_alerts.push(new SensorAlert(self.api, alert_data));\n        });\n    }\n}","import AlertsResponse from '../responses/alerts';\n\n/**\n * Get last alerts for sensor.\n */\nexport default class AlertsEndpoints {\n    /**\n     * @constructor AlertsEndpoints\n     * @param {SensorlabApi} api - parent api\n     */\n    constructor(api) {\n        /**\n         * @member AlertsEndpoints#api\n         * @type {SensorlabApi}\n         */\n        this.api = api;\n    }\n\n    /**\n     * Get last alerts for sensor\n     *\n     * @method AlertsEndpoints#list\n     * @param {string} sensor - Sensor ID.\n     * @returns {Promise.<ApiResponse>}\n     */\n    async last(sensor) {\n        let response = await this.api._makeApiRequest('/v1/sensors/'+sensor+'/alerts/last', 'GET');\n        return this.api._prepareApiResponse(response, this._successSensorListResponse);\n    }\n\n    /**\n     * Return success result.\n     *\n     * @param {SensorlabApi} api\n     * @param {object} response\n     * @returns {AlertsResponse}\n     * @private\n     */\n    _successSensorListResponse(api, response) {\n        return new AlertsResponse(api, response.data);\n    }\n}","import Alert from '../models/alert';\n\n/**\n * Response with alerts data\n */\nexport default class AlertsResponse {\n    /**\n     * @constructor AlertsResponse\n     *\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * List of alerts.\n         *\n         * @member AlertsResponse#alerts\n         * @type {Alert[]}\n         */\n        this.alerts = [];\n\n        let self = this;\n        data.forEach(function(alert_data) {\n            self.alerts.push(new Alert(self.api, alert_data));\n        });\n    }\n}","/**\n * Alert model\n */\nexport default class Alert {\n    /**\n     * @constructor Alert\n     * @param {SensorlabApi} api - parent api\n     * @param {Object} data - data from response\n     */\n    constructor(api, data) {\n        this.api = api;\n\n        /**\n         * Affected measurement\n         *\n         * @member Alert#measurement\n         * @type {object}\n         */\n        this.measurement = data.measurement;\n\n        /**\n         * Threshold\n         *\n         * @member Alert#threshold\n         * @type {object}\n         */\n        this.threshold = data.threshold;\n    }\n}","import ApiErrorBasicException from \"./basic\";\n\n/**\n * @class ApiErrorForbiddenException\n * @classdesc SDK will throw this exception on 403 status errors.\n * @extends ApiErrorBasicException\n */\nexport default class ApiErrorForbiddenException extends ApiErrorBasicException {\n}","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || require('./../helpers/btoa');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n","'use strict';\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar pkg = require('./../../package.json');\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolve, reject) {\n    var data = config.data;\n    var headers = config.headers;\n    var timer;\n\n    // Set User-Agent (required by some servers)\n    // Only set header if it hasn't been set in config\n    // See https://github.com/axios/axios/issues/69\n    if (!headers['User-Agent'] && !headers['user-agent']) {\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = new Buffer(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = new Buffer(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var parsed = url.parse(config.url);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttps = protocol === 'https:';\n    var agent = isHttps ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method,\n      headers: headers,\n      agent: agent,\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        proxy = {\n          host: parsedProxyUrl.hostname,\n          port: parsedProxyUrl.port\n        };\n\n        if (parsedProxyUrl.auth) {\n          var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n          proxy.auth = {\n            username: proxyUrlAuth[0],\n            password: proxyUrlAuth[1]\n          };\n        }\n      }\n    }\n\n    if (proxy) {\n      options.hostname = proxy.host;\n      options.host = proxy.host;\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      options.port = proxy.port;\n      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;\n\n      // Basic proxy authorization\n      if (proxy.auth) {\n        var base64 = new Buffer(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n        options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n      }\n    }\n\n    var transport;\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttps ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttps ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxContentLength && config.maxContentLength > -1) {\n      options.maxBodyLength = config.maxContentLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // Response has been received so kill timer that handles request timeout\n      clearTimeout(timer);\n      timer = null;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n      switch (res.headers['content-encoding']) {\n      /*eslint default-case:0*/\n      case 'gzip':\n      case 'compress':\n      case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n        stream = stream.pipe(zlib.createUnzip());\n\n        // remove the content-encoding in order to not confuse downstream operations\n        delete res.headers['content-encoding'];\n        break;\n      }\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString('utf8');\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted) return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout && !timer) {\n      timer = setTimeout(function handleRequestTimeout() {\n        req.abort();\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\n      }, config.timeout);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n","module.exports = require(\"assert\");","module.exports = require(\"stream\");","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [ 6, 2, 3, 4, 5, 1 ];\n\ntry {\n  var supportsColor = require('supports-color');\n  if (supportsColor && supportsColor.level >= 2) {\n    exports.colors = [\n      20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63, 68,\n      69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128, 129, 134,\n      135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171,\n      172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202, 203, 204,\n      205, 206, 207, 208, 209, 214, 215, 220, 221\n    ];\n  }\n} catch (err) {\n  // swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(process.stderr.fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var colorCode = '\\u001b[3' + (c < 8 ? c : '8;5;' + c);\n    var prefix = '  ' + colorCode + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push(colorCode + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = getDate() + name + ' ' + args[0];\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return '';\n  } else {\n    return new Date().toISOString() + ' ';\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log() {\n  return process.stderr.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","module.exports = require(\"tty\");","module.exports = require(\"util\");","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","'use strict';\nconst os = require('os');\nconst hasFlag = require('has-flag');\n\nconst env = process.env;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false')) {\n\tforceColor = false;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n\tforceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(stream) {\n\tif (forceColor === false) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (stream && !stream.isTTY && forceColor !== true) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor ? 1 : 0;\n\n\tif (process.platform === 'win32') {\n\t\t// Node.js 7.5.0 is the first version of Node.js to include a patch to\n\t\t// libuv that enables 256 color output on Windows. Anything earlier and it\n\t\t// won't work. However, here we target Node.js 8 at minimum as it is an LTS\n\t\t// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows\n\t\t// release that supports 256 colors. Windows 10 build 14931 is the first release\n\t\t// that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(process.versions.node.split('.')[0]) >= 8 &&\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: getSupportLevel(process.stdout),\n\tstderr: getSupportLevel(process.stderr)\n};\n","module.exports = require(\"os\");","'use strict';\nmodule.exports = (flag, argv) => {\n\targv = argv || process.argv;\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst pos = argv.indexOf(prefix + flag);\n\tconst terminatorPos = argv.indexOf('--');\n\treturn pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n","module.exports = require(\"zlib\");","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","import SensorlabMeasurementsWebsocket from \"./websockets/measurements\";\nimport SensorlabAlertsWebsocket from \"./websockets/alerts\";\nimport SensorlabPublicWebsocket from \"./websockets/public\";\n\n/**\n * Main external class with links to other classes\n */\nexport default class SensorlabWebsockets {\n    /**\n     * @constructor SensorlabWebsockets\n     */\n    constructor() {\n        /**\n         * Shortcut to SensorlabMeasurementsWebsocket class\n         *\n         * @member SensorlabWebsockets#measurements\n         * @type {SensorlabMeasurementsWebsocket}\n         */\n        this.measurements = SensorlabMeasurementsWebsocket;\n\n        /**\n         * Shortcut to SensorlabAlertsWebsocket class\n         *\n         * @member SensorlabWebsockets#alerts\n         * @type {SensorlabAlertsWebsocket}\n         */\n        this.alerts = SensorlabAlertsWebsocket;\n\n        /**\n         * Shortcut to SensorlabPublicWebsocket class\n         *\n         * @member SensorlabWebsockets#public\n         * @type {SensorlabPublicWebsocket}\n         */\n        this.public = SensorlabPublicWebsocket;\n    }\n}","import BasicWebsocket from \"./basic\";\n\n/**\n * Work with /measurements namespace.\n */\nexport default class SensorlabMeasurementsWebsocket extends BasicWebsocket {\n    /**\n     * @constructor SensorlabMeasurementsWebsocket\n     *\n     * @param {string} websocket_url socket.io url to connect to\n     */\n    constructor(websocket_url = 'http://staging.sensorlab.io') {\n        super(websocket_url);\n        this.namespace = '/measurements';\n    }\n\n    /**\n     * Join room with measurement for specific sensor. You can also specify measurement type to listen too.\n     * If user has access to the sensor - socket.io will start emitting data for this sensor.\n     * If not - it will emit message that can be catched using onAccessDenied method.\n     *\n     * @member SensorlabMeasurementsWebsocket#joinSensor\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     */\n    joinSensor(sensor, type = null) {\n        this.socket.emit('sensor', { sensor: sensor, type: type});\n    }\n\n    /**\n     * Leave room with measurements for specific sensor.\n     *\n     * @member SensorlabMeasurementsWebsocket#leaveSensor\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     */\n    leaveSensor(sensor, type = null) {\n        this.socket.emit('sensor/disconnect', { sensor: sensor, type: type});\n    }\n\n    /**\n     * Leave all rooms.\n     *\n     * @member SensorlabMeasurementsWebsocket#leaveAll\n     */\n    leaveAll() {\n        this.socket.emit('sensor/disconnect/all');\n    }\n\n    /**\n     * Listen to specific emitted measurements.\n     *\n     * @member SensorlabMeasurementsWebsocket#onMeasurements\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     * @param {callback} listener callback\n     */\n    onMeasurements(sensor, type = null, cb) {\n        if (!this._checkConnection()) {\n            return false;\n        }\n\n        this.socket.on(this._getRoomName(sensor, type), cb);\n    }\n\n    /**\n     * Disconnect listener.\n     *\n     * @member SensorlabMeasurementsWebsocket#offMeasurements\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     * @param {callback} connected callback\n     */\n    offMeasurements(sensor, type = null, cb = null) {\n        if (this.socket) {\n            this.socket.off(this._getRoomName(sensor, type), cb);\n        }\n    }\n\n    /**\n     * This message will be emitted if your token doesn't have access to the sensor.\n     *\n     * @member SensorlabMeasurementsWebsocket#onAccessDenied\n     * @param {callback} cb listener callback\n     */\n    onAccessDenied(cb) {\n        if (!this._checkConnection()) {\n            return false;\n        }\n        this.socket.on('sensor/access_denied', function(params) {\n            cb(params.sensor, params.message);\n        });\n    }\n\n    _getRoomName(sensor, type) {\n        let room_name = 'measurements/' + sensor;\n        if (type) {\n            room_name += '/' + type;\n        }\n        return room_name;\n    }\n}","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","module.exports = require(\"fs\");","module.exports = require(\"child_process\");","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n","if(typeof __WEBPACK_EXTERNAL_MODULE__115__ === 'undefined') {var e = new Error(\"Cannot find module 'ws'\"); e.code = 'MODULE_NOT_FOUND'; throw e;}\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__115__;","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","import BasicWebsocket from \"./basic\";\n\n/**\n * Work with /alerts namespace.\n */\nexport default class SensorlabAlertsWebsocket extends BasicWebsocket {\n    /**\n     * @constructor SensorlabAlertsWebsocket\n     *\n     * @param {string} websocket_url socket.io url to connect to\n     */\n    constructor(websocket_url = 'http://staging.sensorlab.io') {\n        super(websocket_url);\n        this.namespace = '/alerts';\n    }\n\n    /**\n     * Join room with alerts for specific sensor.\n     * If user has access to the sensor - socket.io will start emitting data for this sensor.\n     * If not - it will emit message that can be catched using onAccessDenied method.\n     *\n     * @member SensorlabAlertsWebsocket#joinSensor\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     */\n    joinSensor(sensor) {\n        this.socket.emit('sensor', { sensor: sensor});\n    }\n\n    /**\n     * Leave room with alerts for specific sensor.\n     *\n     * @member SensorlabAlertsWebsocket#leaveSensor\n     * @param {string} sensor sensor ID\n     */\n    leaveSensor(sensor) {\n        this.socket.emit('sensor/disconnect', { sensor: sensor });\n    }\n\n    /**\n     * Leave all rooms.\n     *\n     * @member SensorlabAlertsWebsocket#leaveAll\n     */\n    leaveAll() {\n        this.socket.emit('sensor/disconnect/all');\n    }\n\n    /**\n     * Listen to specific emitted alerts.\n     *\n     * @member SensorlabAlertsWebsocket#onAlerts\n     * @param {string} sensor sensor ID\n     * @param {callback} listener callback\n     */\n    onAlerts(sensor, cb) {\n        if (!this._checkConnection()) {\n            return false;\n        }\n\n        this.socket.on(this._getRoomName(sensor), cb);\n    }\n\n    /**\n     * Disconnect listener.\n     *\n     * @member SensorlabAlertsWebsocket#offAlerts\n     * @param {string} sensor sensor ID\n     * @param {callback} connected callback\n     */\n    offAlerts(sensor, cb = null) {\n        if (this.socket) {\n            this.socket.off(this._getRoomName(sensor), cb);\n        }\n    }\n\n    /**\n     * This message will be emitted if your token doesn't have access to the sensor.\n     *\n     * @member SensorlabAlertsWebsocket#onAccessDenied\n     * @param {callback} cb listener callback\n     */\n    onAccessDenied(cb) {\n        if (!this._checkConnection()) {\n            return false;\n        }\n        this.socket.on('sensor/access_denied', function(params) {\n            cb(params.sensor, params.message);\n        });\n    }\n\n    _getRoomName(sensor) {\n        let room_name = 'alerts/' + sensor;\n        return room_name;\n    }\n}","import BasicWebsocket from \"./basic\";\n\nlet io = require('socket.io-client');\n\n/**\n * Work with /public namespace.\n */\nexport default class SensorlabPublicWebsocket extends BasicWebsocket {\n    /**\n     * @constructor SensorlabPublicWebsocket\n     *\n     * @param {string} websocket_url socket.io url to connect to\n     */\n    constructor(websocket_url = 'http://staging.sensorlab.io') {\n        super(websocket_url);\n        this.namespace = '/public';\n\n        //we must force a new connection since because this namespace has different authentication method\n        this.force_new = true;\n    }\n\n    /**\n     * Connect to websocket namespace with public api key token.\n     * Promise will resolve if connection is established and reject is there are problems with connection\n     * or authentication\n     *\n     * @member SensorlabPublicWebsocket#connect\n     * @param {string} public_api_key Public Api Key\n     * @returns {Promise}\n     */\n    async connect(public_api_key) {\n        return new Promise((resolve, reject) => {\n            //connect\n            this.socket = io(this.url + this.namespace + '?public_api_key='+public_api_key, {\n                path: '/ws',\n                forceNew: this.force_new,\n            });\n\n            //try to authenticate on connection\n            this.socket.on('connect', () => {\n                this._onConnected();\n                resolve();\n            });\n\n            this.socket.on('connect_error', () => {\n                reject({code: 0, message: 'Connection error'});\n            });\n\n            this.socket.on('error', function (reason) {\n                reject(JSON.parse(reason));\n                //console.error('Unable to connect Socket.IO', reason);\n            });\n\n            //catch disconnect\n            this.socket.on('disconnect', () => {\n                this._onDisconnect();\n            });\n        });\n    }\n\n    /**\n     * Join room with measurement for specific sensor. You can also specify measurement type to listen too.\n     * If user has access to the sensor - socket.io will start emitting data for this sensor.\n     * If not - it will emit message that can be catched using onAccessDenied method.\n     *\n     * @member SensorlabPublicWebsocket#joinSensor\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     */\n    joinSensor(sensor, type = null) {\n        this.socket.emit('sensor', { sensor: sensor, type: type});\n    }\n\n    /**\n     * Leave room with measurements for specific sensor.\n     *\n     * @member SensorlabPublicWebsocket#leaveSensor\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     */\n    leaveSensor(sensor, type = null) {\n        this.socket.emit('sensor/disconnect', { sensor: sensor, type: type});\n    }\n\n    /**\n     * Leave all rooms.\n     *\n     * @member SensorlabPublicWebsocket#leaveAll\n     */\n    leaveAll() {\n        this.socket.emit('sensor/disconnect/all');\n    }\n\n    /**\n     * Listen to specific emitted measurements.\n     *\n     * @member SensorlabPublicWebsocket#onMeasurements\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     * @param {callback} listener callback\n     */\n    onMeasurements(sensor, type = null, cb) {\n        if (!this._checkConnection()) {\n            return false;\n        }\n\n        this.socket.on(this._getRoomName(sensor, type), cb);\n    }\n\n    /**\n     * Disconnect listener.\n     *\n     * @member SensorlabMeasurementsWebsocket#offMeasurements\n     * @param {string} sensor sensor ID\n     * @param {string} type measurement type\n     * @param {callback} connected callback\n     */\n    offMeasurements(sensor, type = null, cb = null) {\n        if (this.socket) {\n            this.socket.off(this._getRoomName(sensor, type), cb);\n        }\n    }\n\n    /**\n     * This message will be emitted if your token doesn't have access to the sensor.\n     *\n     * @member SensorlabMeasurementsWebsocket#onAccessDenied\n     * @param {callback} cb listener callback\n     */\n    onAccessDenied(cb) {\n        if (!this._checkConnection()) {\n            return false;\n        }\n        this.socket.on('sensor/access_denied', function(params) {\n            cb(params.sensor, params.message);\n        });\n    }\n\n    _getRoomName(sensor, type) {\n        let room_name = 'measurements/' + sensor;\n        if (type) {\n            room_name += '/' + type;\n        }\n        return room_name;\n    }\n}"],"sourceRoot":""}